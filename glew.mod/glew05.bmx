Strict

Import "GL/glew.h"

Extern "Os"

Const GL_VIRTUAL_PAGE_SIZE_INDEX_ARB=$91A7
Const GL_NUM_VIRTUAL_PAGE_SIZES_ARB=$91A8
Const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB=$91A9
Const GL_NUM_SPARSE_LEVELS_ARB=$91AA
Global glTexPageCommitmentARB(target_:Int,level_:Int,xoffset_:Int,yoffset_:Int,zoffset_:Int,width_:Int,height_:Int,depth_:Int,commit_:Byte)="void __glewTexPageCommitmentARB( GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean)!"
Global glTexturePageCommitmentEXT(texture_:Int,level_:Int,xoffset_:Int,yoffset_:Int,zoffset_:Int,width_:Int,height_:Int,depth_:Int,commit_:Byte)="void __glewTexturePageCommitmentEXT( GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean)!"
Const GL_ARB_stencil_texturing=1
Const GL_DEPTH_STENCIL_TEXTURE_MODE=$90EA
Const GL_ARB_sync=1
Const GL_SYNC_FLUSH_COMMANDS_BIT=$00000001
Const GL_MAX_SERVER_WAIT_TIMEOUT=$9111
Const GL_OBJECT_TYPE=$9112
Const GL_SYNC_CONDITION=$9113
Const GL_SYNC_STATUS=$9114
Const GL_SYNC_FLAGS=$9115
Const GL_SYNC_FENCE=$9116
Const GL_SYNC_GPU_COMMANDS_COMPLETE=$9117
Const GL_UNSIGNALED=$9118
Const GL_SIGNALED=$9119
Const GL_ALREADY_SIGNALED=$911A
Const GL_TIMEOUT_EXPIRED=$911B
Const GL_CONDITION_SATISFIED=$911C
Const GL_WAIT_FAILED=$911D
Const GL_TIMEOUT_IGNORED=$FFFFFFFFFFFFFFFF
Global glGetInteger64v(pname_:Int,params_:Long Ptr)="void __glewGetInteger64v( GLenum, GLint64*)!"
Const GL_ARB_tessellation_shader=1
Const GL_PATCHES=$E
Const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER=$84F0
Const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER=$84F1
Const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS=$886C
Const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS=$886D
Const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS=$8E1E
Const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS=$8E1F
Const GL_PATCH_VERTICES=$8E72
Const GL_PATCH_DEFAULT_INNER_LEVEL=$8E73
Const GL_PATCH_DEFAULT_OUTER_LEVEL=$8E74
Const GL_TESS_CONTROL_OUTPUT_VERTICES=$8E75
Const GL_TESS_GEN_MODE=$8E76
Const GL_TESS_GEN_SPACING=$8E77
Const GL_TESS_GEN_VERTEX_ORDER=$8E78
Const GL_TESS_GEN_POINT_MODE=$8E79
Const GL_ISOLINES=$8E7A
Const GL_FRACTIONAL_ODD=$8E7B
Const GL_FRACTIONAL_EVEN=$8E7C
Const GL_MAX_PATCH_VERTICES=$8E7D
Const GL_MAX_TESS_GEN_LEVEL=$8E7E
Const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS=$8E7F
Const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS=$8E80
Const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS=$8E81
Const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS=$8E82
Const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS=$8E83
Const GL_MAX_TESS_PATCH_COMPONENTS=$8E84
Const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS=$8E85
Const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS=$8E86
Const GL_TESS_EVALUATION_SHADER=$8E87
Const GL_TESS_CONTROL_SHADER=$8E88
Const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS=$8E89
Const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS=$8E8A
Global glPatchParameterfv(pname_:Int,values_:Float Ptr)="void __glewPatchParameterfv( GLenum,const GLfloat*)!"
Global glPatchParameteri(pname_:Int,value_:Int)="void __glewPatchParameteri( GLenum, GLint)!"
Const GL_ARB_texture_barrier=1
Global glTextureBarrier()="void __glewTextureBarrier( void)!"
Const GL_ARB_texture_border_clamp=1
Const GL_CLAMP_TO_BORDER_ARB=$812D
Const GL_ARB_texture_buffer_object=1
Const GL_TEXTURE_BUFFER_ARB=$8C2A
Const GL_MAX_TEXTURE_BUFFER_SIZE_ARB=$8C2B
Const GL_TEXTURE_BINDING_BUFFER_ARB=$8C2C
Const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB=$8C2D
Const GL_TEXTURE_BUFFER_FORMAT_ARB=$8C2E
Global glTexBufferARB(target_:Int,internalformat_:Int,buffer_:Int)="void __glewTexBufferARB( GLenum, GLenum, GLuint)!"
Const GL_ARB_texture_buffer_object_rgb32=1
Const GL_ARB_texture_buffer_range=1
Const GL_TEXTURE_BUFFER_OFFSET=$919D
Const GL_TEXTURE_BUFFER_SIZE=$919E
Const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT=$919F
Global glTexBufferRange(target_:Int,internalformat_:Int,buffer_:Int,offset_:Int,size_:Int)="void __glewTexBufferRange( GLenum, GLenum, GLuint, GLintptr, GLsizeiptr)!"
Global glTextureBufferRangeEXT(texture_:Int,target_:Int,internalformat_:Int,buffer_:Int,offset_:Int,size_:Int)="void __glewTextureBufferRangeEXT( GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr)!"
Const GL_ARB_texture_compression=1
Const GL_COMPRESSED_ALPHA_ARB=$84E9
Const GL_COMPRESSED_LUMINANCE_ARB=$84EA
Const GL_COMPRESSED_LUMINANCE_ALPHA_ARB=$84EB
Const GL_COMPRESSED_INTENSITY_ARB=$84EC
Const GL_COMPRESSED_RGB_ARB=$84ED
Const GL_COMPRESSED_RGBA_ARB=$84EE
Const GL_TEXTURE_COMPRESSION_HINT_ARB=$84EF
Const GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB=$86A0
Const GL_TEXTURE_COMPRESSED_ARB=$86A1
Const GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB=$86A2
Const GL_COMPRESSED_TEXTURE_FORMATS_ARB=$86A3
Global glCompressedTexImage1DARB(target_:Int,level_:Int,internalformat_:Int,width_:Int,border_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexImage1DARB( GLenum, GLint, GLenum, GLsizei, GLint, GLsizei,const void*)!"
Global glCompressedTexImage2DARB(target_:Int,level_:Int,internalformat_:Int,width_:Int,height_:Int,border_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexImage2DARB( GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei,const void*)!"
Global glCompressedTexImage3DARB(target_:Int,level_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int,border_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexImage3DARB( GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei,const void*)!"
Global glCompressedTexSubImage1DARB(target_:Int,level_:Int,xoffset_:Int,width_:Int,format_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexSubImage1DARB( GLenum, GLint, GLint, GLsizei, GLenum, GLsizei,const void*)!"
Global glCompressedTexSubImage2DARB(target_:Int,level_:Int,xoffset_:Int,yoffset_:Int,width_:Int,height_:Int,format_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexSubImage2DARB( GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei,const void*)!"
Global glCompressedTexSubImage3DARB(target_:Int,level_:Int,xoffset_:Int,yoffset_:Int,zoffset_:Int,width_:Int,height_:Int,depth_:Int,format_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexSubImage3DARB( GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei,const void*)!"
Global glGetCompressedTexImageARB(target_:Int,lod_:Int,img_:Byte Ptr)="void __glewGetCompressedTexImageARB( GLenum, GLint, void*)!"
Const GL_ARB_texture_compression_bptc=1
Const GL_COMPRESSED_RGBA_BPTC_UNORM_ARB=$8E8C
Const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB=$8E8D
Const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB=$8E8E
Const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB=$8E8F
Const GL_ARB_texture_compression_rgtc=1
Const GL_COMPRESSED_RED_RGTC1=$8DBB
Const GL_COMPRESSED_SIGNED_RED_RGTC1=$8DBC
Const GL_COMPRESSED_RG_RGTC2=$8DBD
Const GL_COMPRESSED_SIGNED_RG_RGTC2=$8DBE
Const GL_ARB_texture_cube_map=1
Const GL_NORMAL_MAP_ARB=$8511
Const GL_REFLECTION_MAP_ARB=$8512
Const GL_TEXTURE_CUBE_MAP_ARB=$8513
Const GL_TEXTURE_BINDING_CUBE_MAP_ARB=$8514
Const GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB=$8515
Const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB=$8516
Const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB=$8517
Const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB=$8518
Const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB=$8519
Const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB=$851A
Const GL_PROXY_TEXTURE_CUBE_MAP_ARB=$851B
Const GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB=$851C
Const GL_ARB_texture_cube_map_array=1
Const GL_TEXTURE_CUBE_MAP_ARRAY_ARB=$9009
Const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB=$900A
Const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB=$900B
Const GL_SAMPLER_CUBE_MAP_ARRAY_ARB=$900C
Const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB=$900D
Const GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB=$900E
Const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB=$900F
Const GL_ARB_texture_env_add=1
Const GL_ARB_texture_env_combine=1
Const GL_SUBTRACT_ARB=$84E7
Const GL_COMBINE_ARB=$8570
Const GL_COMBINE_RGB_ARB=$8571
Const GL_COMBINE_ALPHA_ARB=$8572
Const GL_RGB_SCALE_ARB=$8573
Const GL_ADD_SIGNED_ARB=$8574
Const GL_INTERPOLATE_ARB=$8575
Const GL_CONSTANT_ARB=$8576
Const GL_PRIMARY_COLOR_ARB=$8577
Const GL_PREVIOUS_ARB=$8578
Const GL_SOURCE0_RGB_ARB=$8580
Const GL_SOURCE1_RGB_ARB=$8581
Const GL_SOURCE2_RGB_ARB=$8582
Const GL_SOURCE0_ALPHA_ARB=$8588
Const GL_SOURCE1_ALPHA_ARB=$8589
Const GL_SOURCE2_ALPHA_ARB=$858A
Const GL_OPERAND0_RGB_ARB=$8590
Const GL_OPERAND1_RGB_ARB=$8591
Const GL_OPERAND2_RGB_ARB=$8592
Const GL_OPERAND0_ALPHA_ARB=$8598
Const GL_OPERAND1_ALPHA_ARB=$8599
Const GL_OPERAND2_ALPHA_ARB=$859A
Const GL_ARB_texture_env_crossbar=1
Const GL_ARB_texture_env_dot3=1
Const GL_DOT3_RGB_ARB=$86AE
Const GL_DOT3_RGBA_ARB=$86AF
Const GL_ARB_texture_float=1
Const GL_RGBA32F_ARB=$8814
Const GL_RGB32F_ARB=$8815
Const GL_ALPHA32F_ARB=$8816
Const GL_INTENSITY32F_ARB=$8817
Const GL_LUMINANCE32F_ARB=$8818
Const GL_LUMINANCE_ALPHA32F_ARB=$8819
Const GL_RGBA16F_ARB=$881A
Const GL_RGB16F_ARB=$881B
Const GL_ALPHA16F_ARB=$881C
Const GL_INTENSITY16F_ARB=$881D
Const GL_LUMINANCE16F_ARB=$881E
Const GL_LUMINANCE_ALPHA16F_ARB=$881F
Const GL_TEXTURE_RED_TYPE_ARB=$8C10
Const GL_TEXTURE_GREEN_TYPE_ARB=$8C11
Const GL_TEXTURE_BLUE_TYPE_ARB=$8C12
Const GL_TEXTURE_ALPHA_TYPE_ARB=$8C13
Const GL_TEXTURE_LUMINANCE_TYPE_ARB=$8C14
Const GL_TEXTURE_INTENSITY_TYPE_ARB=$8C15
Const GL_TEXTURE_DEPTH_TYPE_ARB=$8C16
Const GL_UNSIGNED_NORMALIZED_ARB=$8C17
Const GL_ARB_texture_gather=1
Const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB=$8E5E
Const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB=$8E5F
Const GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB=$8F9F
Const GL_ARB_texture_mirror_clamp_to_edge=1
Const GL_MIRROR_CLAMP_TO_EDGE=$8743
Const GL_ARB_texture_mirrored_repeat=1
Const GL_MIRRORED_REPEAT_ARB=$8370
Const GL_ARB_texture_multisample=1
Const GL_SAMPLE_POSITION=$8E50
Const GL_SAMPLE_MASK=$8E51
Const GL_SAMPLE_MASK_VALUE=$8E52
Const GL_MAX_SAMPLE_MASK_WORDS=$8E59
Const GL_TEXTURE_2D_MULTISAMPLE=$9100
Const GL_PROXY_TEXTURE_2D_MULTISAMPLE=$9101
Const GL_TEXTURE_2D_MULTISAMPLE_ARRAY=$9102
Const GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY=$9103
Const GL_TEXTURE_BINDING_2D_MULTISAMPLE=$9104
Const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY=$9105
Const GL_TEXTURE_SAMPLES=$9106
Const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS=$9107
Const GL_SAMPLER_2D_MULTISAMPLE=$9108
Const GL_INT_SAMPLER_2D_MULTISAMPLE=$9109
Const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE=$910A
Const GL_SAMPLER_2D_MULTISAMPLE_ARRAY=$910B
Const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY=$910C
Const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY=$910D
Const GL_MAX_COLOR_TEXTURE_SAMPLES=$910E
Const GL_MAX_DEPTH_TEXTURE_SAMPLES=$910F
Const GL_MAX_INTEGER_SAMPLES=$9110
Global glGetMultisamplefv(pname_:Int,index_:Int,val_:Float Ptr)="void __glewGetMultisamplefv( GLenum, GLuint, GLfloat*)!"
Global glSampleMaski(index_:Int,mask_:Int)="void __glewSampleMaski( GLuint, GLbitfield)!"
Global glTexImage2DMultisample(target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,fixedsamplelocations_:Byte)="void __glewTexImage2DMultisample( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean)!"
Global glTexImage3DMultisample(target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int,fixedsamplelocations_:Byte)="void __glewTexImage3DMultisample( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean)!"
Const GL_ARB_texture_non_power_of_two=1
Const GL_ARB_texture_query_levels=1
Const GL_ARB_texture_query_lod=1
Const GL_ARB_texture_rectangle=1
Const GL_TEXTURE_RECTANGLE_ARB=$84F5
Const GL_TEXTURE_BINDING_RECTANGLE_ARB=$84F6
Const GL_PROXY_TEXTURE_RECTANGLE_ARB=$84F7
Const GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB=$84F8
Const GL_ARB_texture_rg=1
Const GL_COMPRESSED_RED=$8225
Const GL_COMPRESSED_RG=$8226
Const GL_RG=$8227
Const GL_RG_INTEGER=$8228
Const GL_R8=$8229
Const GL_R16=$822A
Const GL_RG8=$822B
Const GL_RG16=$822C
Const GL_R16F=$822D
Const GL_R32F=$822E
Const GL_RG16F=$822F
Const GL_RG32F=$8230
Const GL_R8I=$8231
Const GL_R8UI=$8232
Const GL_R16I=$8233
Const GL_R16UI=$8234
Const GL_R32I=$8235
Const GL_R32UI=$8236
Const GL_RG8I=$8237
Const GL_RG16I=$8239
Const GL_RG32I=$823B
Const GL_RG32UI=$823C
Const GL_ARB_texture_rgb10_a2ui=1
Const GL_ARB_texture_stencil8=1
Const GL_ARB_texture_storage=1
Const GL_TEXTURE_IMMUTABLE_FORMAT=$912F
Global glTexStorage1D(target_:Int,levels_:Int,internalformat_:Int,width_:Int)="void __glewTexStorage1D( GLenum, GLsizei, GLenum, GLsizei)!"
Global glTexStorage2D(target_:Int,levels_:Int,internalformat_:Int,width_:Int,height_:Int)="void __glewTexStorage2D( GLenum, GLsizei, GLenum, GLsizei, GLsizei)!"
Global glTexStorage3D(target_:Int,levels_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int)="void __glewTexStorage3D( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei)!"
Global glTextureStorage1DEXT(texture_:Int,target_:Int,levels_:Int,internalformat_:Int,width_:Int)="void __glewTextureStorage1DEXT( GLuint, GLenum, GLsizei, GLenum, GLsizei)!"
Global glTextureStorage2DEXT(texture_:Int,target_:Int,levels_:Int,internalformat_:Int,width_:Int,height_:Int)="void __glewTextureStorage2DEXT( GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei)!"
Global glTextureStorage3DEXT(texture_:Int,target_:Int,levels_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int)="void __glewTextureStorage3DEXT( GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei)!"
Const GL_ARB_texture_storage_multisample=1
Global glTexStorage2DMultisample(target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,fixedsamplelocations_:Byte)="void __glewTexStorage2DMultisample( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean)!"
Global glTexStorage3DMultisample(target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int,fixedsamplelocations_:Byte)="void __glewTexStorage3DMultisample( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean)!"
Global glTextureStorage2DMultisampleEXT(texture_:Int,target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,fixedsamplelocations_:Byte)="void __glewTextureStorage2DMultisampleEXT( GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean)!"
Global glTextureStorage3DMultisampleEXT(texture_:Int,target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int,fixedsamplelocations_:Byte)="void __glewTextureStorage3DMultisampleEXT( GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean)!"
Const GL_ARB_texture_swizzle=1
Const GL_TEXTURE_SWIZZLE_R=$8E42
Const GL_TEXTURE_SWIZZLE_G=$8E43
Const GL_TEXTURE_SWIZZLE_B=$8E44
Const GL_TEXTURE_SWIZZLE_A=$8E45
Const GL_TEXTURE_SWIZZLE_RGBA=$8E46
Const GL_ARB_texture_view=1
Const GL_TEXTURE_VIEW_MIN_LEVEL=$82DB
Const GL_TEXTURE_VIEW_NUM_LEVELS=$82DC
Const GL_TEXTURE_VIEW_MIN_LAYER=$82DD
Const GL_TEXTURE_VIEW_NUM_LAYERS=$82DE
Global glTextureView(texture_:Int,target_:Int,origtexture_:Int,internalformat_:Int,minlevel_:Int,numlevels_:Int,minlayer_:Int,numlayers_:Int)="void __glewTextureView( GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint)!"
Const GL_ARB_timer_query=1
Const GL_TIME_ELAPSED=$88BF
Const GL_TIMESTAMP=$8E28
Global glGetQueryObjecti64v(id_:Int,pname_:Int,params_:Long Ptr)="void __glewGetQueryObjecti64v( GLuint, GLenum, GLint64*)!"
Global glGetQueryObjectui64v(id_:Int,pname_:Int,params_:Long Ptr)="void __glewGetQueryObjectui64v( GLuint, GLenum, GLuint64*)!"
Global glQueryCounter(id_:Int,target_:Int)="void __glewQueryCounter( GLuint, GLenum)!"
Const GL_ARB_transform_feedback2=1
Const GL_TRANSFORM_FEEDBACK=$8E22
Const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED=$8E23
Const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE=$8E24
Const GL_TRANSFORM_FEEDBACK_BINDING=$8E25
Global glBindTransformFeedback(target_:Int,id_:Int)="void __glewBindTransformFeedback( GLenum, GLuint)!"
Global glDeleteTransformFeedbacks(n_:Int,ids_:Int Ptr)="void __glewDeleteTransformFeedbacks( GLsizei,const GLuint*)!"
Global glDrawTransformFeedback(mode_:Int,id_:Int)="void __glewDrawTransformFeedback( GLenum, GLuint)!"
Global glGenTransformFeedbacks(n_:Int,ids_:Int Ptr)="void __glewGenTransformFeedbacks( GLsizei, GLuint*)!"
Global glIsTransformFeedback:Byte(id_:Int)="GLboolean __glewIsTransformFeedback( GLuint)!"
Global glPauseTransformFeedback()="void __glewPauseTransformFeedback( void)!"
Global glResumeTransformFeedback()="void __glewResumeTransformFeedback( void)!"
Const GL_ARB_transform_feedback3=1
Const GL_MAX_TRANSFORM_FEEDBACK_BUFFERS=$8E70
Global glBeginQueryIndexed(target_:Int,index_:Int,id_:Int)="void __glewBeginQueryIndexed( GLenum, GLuint, GLuint)!"
Global glDrawTransformFeedbackStream(mode_:Int,id_:Int,stream_:Int)="void __glewDrawTransformFeedbackStream( GLenum, GLuint, GLuint)!"
Global glEndQueryIndexed(target_:Int,index_:Int)="void __glewEndQueryIndexed( GLenum, GLuint)!"
Global glGetQueryIndexediv(target_:Int,index_:Int,pname_:Int,params_:Int Ptr)="void __glewGetQueryIndexediv( GLenum, GLuint, GLenum, GLint*)!"
Const GL_ARB_transform_feedback_instanced=1
Global glDrawTransformFeedbackInstanced(mode_:Int,id_:Int,primcount_:Int)="void __glewDrawTransformFeedbackInstanced( GLenum, GLuint, GLsizei)!"
Global glDrawTransformFeedbackStreamInstanced(mode_:Int,id_:Int,stream_:Int,primcount_:Int)="void __glewDrawTransformFeedbackStreamInstanced( GLenum, GLuint, GLuint, GLsizei)!"
Const GL_ARB_transform_feedback_overflow_query=1
Const GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB=$82EC
Const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB=$82ED
Const GL_ARB_transpose_matrix=1
Const GL_TRANSPOSE_MODELVIEW_MATRIX_ARB=$84E3
Const GL_TRANSPOSE_PROJECTION_MATRIX_ARB=$84E4
Const GL_TRANSPOSE_TEXTURE_MATRIX_ARB=$84E5
Const GL_TRANSPOSE_COLOR_MATRIX_ARB=$84E6
Global glLoadTransposeMatrixdARB(m_:Double Ptr)="void __glewLoadTransposeMatrixdARB( GLdouble)!"
Global glLoadTransposeMatrixfARB(m_:Float Ptr)="void __glewLoadTransposeMatrixfARB( GLfloat)!"
Global glMultTransposeMatrixdARB(m_:Double Ptr)="void __glewMultTransposeMatrixdARB( GLdouble)!"
Global glMultTransposeMatrixfARB(m_:Float Ptr)="void __glewMultTransposeMatrixfARB( GLfloat)!"
Const GL_ARB_uniform_buffer_object=1
Const GL_UNIFORM_BUFFER=$8A11
Const GL_UNIFORM_BUFFER_BINDING=$8A28
Const GL_UNIFORM_BUFFER_START=$8A29
Const GL_UNIFORM_BUFFER_SIZE=$8A2A
Const GL_MAX_VERTEX_UNIFORM_BLOCKS=$8A2B
Const GL_MAX_GEOMETRY_UNIFORM_BLOCKS=$8A2C
Const GL_MAX_FRAGMENT_UNIFORM_BLOCKS=$8A2D
Const GL_MAX_COMBINED_UNIFORM_BLOCKS=$8A2E
Const GL_MAX_UNIFORM_BUFFER_BINDINGS=$8A2F
Const GL_MAX_UNIFORM_BLOCK_SIZE=$8A30
Const GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=$8A31
Const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS=$8A32
Const GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=$8A33
Const GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT=$8A34
Const GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH=$8A35
Const GL_ACTIVE_UNIFORM_BLOCKS=$8A36
Const GL_UNIFORM_TYPE=$8A37
Const GL_UNIFORM_SIZE=$8A38
Const GL_UNIFORM_NAME_LENGTH=$8A39
Const GL_UNIFORM_BLOCK_INDEX=$8A3A
Const GL_UNIFORM_OFFSET=$8A3B
Const GL_UNIFORM_ARRAY_STRIDE=$8A3C
Const GL_UNIFORM_MATRIX_STRIDE=$8A3D
Const GL_UNIFORM_IS_ROW_MAJOR=$8A3E
Const GL_UNIFORM_BLOCK_BINDING=$8A3F
Const GL_UNIFORM_BLOCK_DATA_SIZE=$8A40
Const GL_UNIFORM_BLOCK_NAME_LENGTH=$8A41
Const GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS=$8A42
Const GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=$8A43
Const GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=$8A44
Const GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER=$8A45
Const GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=$8A46
Const GL_INVALID_INDEX=$FFFFFFFF
Global glBindBufferBase(target_:Int,index_:Int,buffer_:Int)="void __glewBindBufferBase( GLenum, GLuint, GLuint)!"
Global glBindBufferRange(target_:Int,index_:Int,buffer_:Int,offset_:Int,size_:Int)="void __glewBindBufferRange( GLenum, GLuint, GLuint, GLintptr, GLsizeiptr)!"
Global glGetActiveUniformBlockName(program_:Int,uniformBlockIndex_:Int,bufSize_:Int,length_:Int Ptr,uniformBlockName_:Byte Ptr)="void __glewGetActiveUniformBlockName( GLuint, GLuint, GLsizei, GLsizei*, GLchar*)!"
Global glGetActiveUniformBlockiv(program_:Int,uniformBlockIndex_:Int,pname_:Int,params_:Int Ptr)="void __glewGetActiveUniformBlockiv( GLuint, GLuint, GLenum, GLint*)!"
Global glGetActiveUniformName(program_:Int,uniformIndex_:Int,bufSize_:Int,length_:Int Ptr,uniformName_:Byte Ptr)="void __glewGetActiveUniformName( GLuint, GLuint, GLsizei, GLsizei*, GLchar*)!"
Global glGetActiveUniformsiv(program_:Int,uniformCount_:Int,uniformIndices_:Int Ptr,pname_:Int,params_:Int Ptr)="void __glewGetActiveUniformsiv( GLuint, GLsizei,const GLuint*, GLenum, GLint*)!"
Global glGetIntegeri_v(target_:Int,index_:Int,data_:Int Ptr)="void __glewGetIntegeri_v( GLenum, GLuint, GLint*)!"
Global glGetUniformBlockIndex:Int(program_:Int,uniformBlockName_:Byte Ptr)="GLuint __glewGetUniformBlockIndex( GLuint,const GLchar*)!"
Global glGetUniformIndices(program_:Int,uniformCount_:Int,uniformNames_:Byte Ptr Ptr,uniformIndices_:Int Ptr)="void __glewGetUniformIndices( GLuint, GLsizei,const GLchar* const*, GLuint*)!"
Global glUniformBlockBinding(program_:Int,uniformBlockIndex_:Int,uniformBlockBinding_:Int)="void __glewUniformBlockBinding( GLuint, GLuint, GLuint)!"
Const GL_ARB_vertex_array_bgra=1
Const GL_ARB_vertex_array_object=1
Const GL_VERTEX_ARRAY_BINDING=$85B5
Global glBindVertexArray(array_:Int)="void __glewBindVertexArray( GLuint)!"
Global glDeleteVertexArrays(n_:Int,arrays_:Int Ptr)="void __glewDeleteVertexArrays( GLsizei,const GLuint*)!"
Global glGenVertexArrays(n_:Int,arrays_:Int Ptr)="void __glewGenVertexArrays( GLsizei, GLuint*)!"
Global glIsVertexArray:Byte(array_:Int)="GLboolean __glewIsVertexArray( GLuint)!"
Const GL_ARB_vertex_attrib_64bit=1
Global glGetVertexAttribLdv(index_:Int,pname_:Int,params_:Double Ptr)="void __glewGetVertexAttribLdv( GLuint, GLenum, GLdouble*)!"
Global glVertexAttribL1d(index_:Int,x_:Double)="void __glewVertexAttribL1d( GLuint, GLdouble)!"
Global glVertexAttribL1dv(index_:Int,v_:Double Ptr)="void __glewVertexAttribL1dv( GLuint,const GLdouble*)!"
Global glVertexAttribL2d(index_:Int,x_:Double,y_:Double)="void __glewVertexAttribL2d( GLuint, GLdouble, GLdouble)!"
Global glVertexAttribL2dv(index_:Int,v_:Double Ptr)="void __glewVertexAttribL2dv( GLuint,const GLdouble*)!"
Global glVertexAttribL3d(index_:Int,x_:Double,y_:Double,z_:Double)="void __glewVertexAttribL3d( GLuint, GLdouble, GLdouble, GLdouble)!"
Global glVertexAttribL3dv(index_:Int,v_:Double Ptr)="void __glewVertexAttribL3dv( GLuint,const GLdouble*)!"
Global glVertexAttribL4d(index_:Int,x_:Double,y_:Double,z_:Double,w_:Double)="void __glewVertexAttribL4d( GLuint, GLdouble, GLdouble, GLdouble, GLdouble)!"
Global glVertexAttribL4dv(index_:Int,v_:Double Ptr)="void __glewVertexAttribL4dv( GLuint,const GLdouble*)!"
Global glVertexAttribLPointer(index_:Int,size_:Int,type_:Int,stride_:Int,pointer_:Byte Ptr)="void __glewVertexAttribLPointer( GLuint, GLint, GLenum, GLsizei,const void*)!"
Const GL_ARB_vertex_attrib_binding=1
Const GL_VERTEX_ATTRIB_BINDING=$82D4
Const GL_VERTEX_ATTRIB_RELATIVE_OFFSET=$82D5
Const GL_VERTEX_BINDING_DIVISOR=$82D6
Const GL_VERTEX_BINDING_OFFSET=$82D7
Const GL_VERTEX_BINDING_STRIDE=$82D8
Const GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET=$82D9
Const GL_MAX_VERTEX_ATTRIB_BINDINGS=$82DA
Const GL_VERTEX_BINDING_BUFFER=$8F4F
Global glBindVertexBuffer(bindingindex_:Int,buffer_:Int,offset_:Int,stride_:Int)="void __glewBindVertexBuffer( GLuint, GLuint, GLintptr, GLsizei)!"
Global glVertexArrayBindVertexBufferEXT(vaobj_:Int,bindingindex_:Int,buffer_:Int,offset_:Int,stride_:Int)="void __glewVertexArrayBindVertexBufferEXT( GLuint, GLuint, GLuint, GLintptr, GLsizei)!"
Global glVertexArrayVertexAttribBindingEXT(vaobj_:Int,attribindex_:Int,bindingindex_:Int)="void __glewVertexArrayVertexAttribBindingEXT( GLuint, GLuint, GLuint)!"
Global glVertexArrayVertexAttribFormatEXT(vaobj_:Int,attribindex_:Int,size_:Int,type_:Int,normalized_:Byte,relativeoffset_:Int)="void __glewVertexArrayVertexAttribFormatEXT( GLuint, GLuint, GLint, GLenum, GLboolean, GLuint)!"
Global glVertexArrayVertexAttribIFormatEXT(vaobj_:Int,attribindex_:Int,size_:Int,type_:Int,relativeoffset_:Int)="void __glewVertexArrayVertexAttribIFormatEXT( GLuint, GLuint, GLint, GLenum, GLuint)!"
Global glVertexArrayVertexAttribLFormatEXT(vaobj_:Int,attribindex_:Int,size_:Int,type_:Int,relativeoffset_:Int)="void __glewVertexArrayVertexAttribLFormatEXT( GLuint, GLuint, GLint, GLenum, GLuint)!"
Global glVertexArrayVertexBindingDivisorEXT(vaobj_:Int,bindingindex_:Int,divisor_:Int)="void __glewVertexArrayVertexBindingDivisorEXT( GLuint, GLuint, GLuint)!"
Global glVertexAttribBinding(attribindex_:Int,bindingindex_:Int)="void __glewVertexAttribBinding( GLuint, GLuint)!"
Global glVertexAttribFormat(attribindex_:Int,size_:Int,type_:Int,normalized_:Byte,relativeoffset_:Int)="void __glewVertexAttribFormat( GLuint, GLint, GLenum, GLboolean, GLuint)!"
Global glVertexAttribIFormat(attribindex_:Int,size_:Int,type_:Int,relativeoffset_:Int)="void __glewVertexAttribIFormat( GLuint, GLint, GLenum, GLuint)!"
Global glVertexAttribLFormat(attribindex_:Int,size_:Int,type_:Int,relativeoffset_:Int)="void __glewVertexAttribLFormat( GLuint, GLint, GLenum, GLuint)!"
Global glVertexBindingDivisor(bindingindex_:Int,divisor_:Int)="void __glewVertexBindingDivisor( GLuint, GLuint)!"
Const GL_ARB_vertex_blend=1
Const GL_MODELVIEW0_ARB=$1700
Const GL_MODELVIEW1_ARB=$850A
Const GL_MAX_VERTEX_UNITS_ARB=$86A4
Const GL_ACTIVE_VERTEX_UNITS_ARB=$86A5
Const GL_WEIGHT_SUM_UNITY_ARB=$86A6
Const GL_VERTEX_BLEND_ARB=$86A7
Const GL_CURRENT_WEIGHT_ARB=$86A8
Const GL_WEIGHT_ARRAY_TYPE_ARB=$86A9
Const GL_WEIGHT_ARRAY_STRIDE_ARB=$86AA
Const GL_WEIGHT_ARRAY_SIZE_ARB=$86AB
Const GL_WEIGHT_ARRAY_POINTER_ARB=$86AC
Const GL_WEIGHT_ARRAY_ARB=$86AD
Const GL_MODELVIEW2_ARB=$8722
Const GL_MODELVIEW3_ARB=$8723
Const GL_MODELVIEW4_ARB=$8724
Const GL_MODELVIEW5_ARB=$8725
Const GL_MODELVIEW6_ARB=$8726
Const GL_MODELVIEW7_ARB=$8727
Const GL_MODELVIEW8_ARB=$8728
Const GL_MODELVIEW9_ARB=$8729
Const GL_MODELVIEW10_ARB=$872A
Const GL_MODELVIEW11_ARB=$872B
Const GL_MODELVIEW12_ARB=$872C
Const GL_MODELVIEW13_ARB=$872D
Const GL_MODELVIEW14_ARB=$872E
Const GL_MODELVIEW15_ARB=$872F
Const GL_MODELVIEW16_ARB=$8730
Const GL_MODELVIEW17_ARB=$8731
Const GL_MODELVIEW18_ARB=$8732
Const GL_MODELVIEW19_ARB=$8733
Const GL_MODELVIEW20_ARB=$8734
Const GL_MODELVIEW21_ARB=$8735
Const GL_MODELVIEW22_ARB=$8736
Const GL_MODELVIEW23_ARB=$8737
Const GL_MODELVIEW24_ARB=$8738
Const GL_MODELVIEW25_ARB=$8739
Const GL_MODELVIEW26_ARB=$873A
Const GL_MODELVIEW27_ARB=$873B
Const GL_MODELVIEW28_ARB=$873C
Const GL_MODELVIEW29_ARB=$873D
Const GL_MODELVIEW30_ARB=$873E
Const GL_MODELVIEW31_ARB=$873F
Global glVertexBlendARB(count_:Int)="void __glewVertexBlendARB( GLint)!"
Global glWeightPointerARB(size_:Int,type_:Int,stride_:Int,pointer_:Byte Ptr)="void __glewWeightPointerARB( GLint, GLenum, GLsizei, void*)!"
Global glWeightbvARB(size_:Int,weights_:Byte Ptr)="void __glewWeightbvARB( GLint, GLbyte*)!"
Global glWeightdvARB(size_:Int,weights_:Double Ptr)="void __glewWeightdvARB( GLint, GLdouble*)!"
Global glWeightfvARB(size_:Int,weights_:Float Ptr)="void __glewWeightfvARB( GLint, GLfloat*)!"
Global glWeightivARB(size_:Int,weights_:Int Ptr)="void __glewWeightivARB( GLint, GLint*)!"
Global glWeightsvARB(size_:Int,weights_:Short Ptr)="void __glewWeightsvARB( GLint, GLshort*)!"
Global glWeightubvARB(size_:Int,weights_:Byte Ptr)="void __glewWeightubvARB( GLint, GLubyte*)!"
Global glWeightuivARB(size_:Int,weights_:Int Ptr)="void __glewWeightuivARB( GLint, GLuint*)!"
Global glWeightusvARB(size_:Int,weights_:Short Ptr)="void __glewWeightusvARB( GLint, GLushort*)!"
Const GL_ARB_vertex_buffer_object=1
Const GL_BUFFER_SIZE_ARB=$8764
Const GL_BUFFER_USAGE_ARB=$8765
Const GL_ARRAY_BUFFER_ARB=$8892
Const GL_ELEMENT_ARRAY_BUFFER_ARB=$8893
Const GL_ARRAY_BUFFER_BINDING_ARB=$8894
Const GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB=$8895
Const GL_VERTEX_ARRAY_BUFFER_BINDING_ARB=$8896
Const GL_NORMAL_ARRAY_BUFFER_BINDING_ARB=$8897
Const GL_COLOR_ARRAY_BUFFER_BINDING_ARB=$8898
Const GL_INDEX_ARRAY_BUFFER_BINDING_ARB=$8899
Const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB=$889A
Const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB=$889B
Const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB=$889C
Const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB=$889D
Const GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB=$889E
Const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB=$889F
Const GL_READ_ONLY_ARB=$88B8
Const GL_WRITE_ONLY_ARB=$88B9
Const GL_READ_WRITE_ARB=$88BA
Const GL_BUFFER_ACCESS_ARB=$88BB
Const GL_BUFFER_MAPPED_ARB=$88BC
Const GL_BUFFER_MAP_POINTER_ARB=$88BD
Const GL_STREAM_DRAW_ARB=$88E0
Const GL_STREAM_READ_ARB=$88E1
Const GL_STREAM_COPY_ARB=$88E2
Const GL_STATIC_DRAW_ARB=$88E4
Const GL_STATIC_READ_ARB=$88E5
Const GL_STATIC_COPY_ARB=$88E6
Const GL_DYNAMIC_DRAW_ARB=$88E8
Const GL_DYNAMIC_READ_ARB=$88E9
Const GL_DYNAMIC_COPY_ARB=$88EA
Global glBindBufferARB(target_:Int,buffer_:Int)="void __glewBindBufferARB( GLenum, GLuint)!"
Global glBufferDataARB(target_:Int,size_:Int,data_:Byte Ptr,usage_:Int)="void __glewBufferDataARB( GLenum, GLsizeiptrARB,const void*, GLenum)!"
Global glBufferSubDataARB(target_:Int,offset_:Int,size_:Int,data_:Byte Ptr)="void __glewBufferSubDataARB( GLenum, GLintptrARB, GLsizeiptrARB,const void*)!"
Global glDeleteBuffersARB(n_:Int,buffers_:Int Ptr)="void __glewDeleteBuffersARB( GLsizei,const GLuint*)!"
Global glGenBuffersARB(n_:Int,buffers_:Int Ptr)="void __glewGenBuffersARB( GLsizei, GLuint*)!"
Global glGetBufferParameterivARB(target_:Int,pname_:Int,params_:Int Ptr)="void __glewGetBufferParameterivARB( GLenum, GLenum, GLint*)!"
Global glGetBufferPointervARB(target_:Int,pname_:Int,params_:Byte Ptr Ptr)="void __glewGetBufferPointervARB( GLenum, GLenum, void**)!"
Global glGetBufferSubDataARB(target_:Int,offset_:Int,size_:Int,data_:Byte Ptr)="void __glewGetBufferSubDataARB( GLenum, GLintptrARB, GLsizeiptrARB, void*)!"
Global glIsBufferARB:Byte(buffer_:Int)="GLboolean __glewIsBufferARB( GLuint)!"
Global glMapBufferARB:Byte Ptr(target_:Int,access_:Int)="void* __glewMapBufferARB( GLenum, GLenum)!"
Global glUnmapBufferARB:Byte(target_:Int)="GLboolean __glewUnmapBufferARB( GLenum)!"
Const GL_ARB_vertex_program=1
Const GL_COLOR_SUM_ARB=$8458
Const GL_VERTEX_PROGRAM_ARB=$8620
Const GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB=$8622
Const GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB=$8623
Const GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB=$8624
Const GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB=$8625
Const GL_CURRENT_VERTEX_ATTRIB_ARB=$8626
Const GL_PROGRAM_LENGTH_ARB=$8627
Const GL_PROGRAM_STRING_ARB=$8628
Const GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB=$862E
Const GL_MAX_PROGRAM_MATRICES_ARB=$862F
Const GL_CURRENT_MATRIX_STACK_DEPTH_ARB=$8640

End Extern
