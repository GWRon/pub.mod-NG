'
' NOTE : Generated file. Do not edit. Your changes may be lost on the next update!
'        Generated by g2bmx on 24 Mar 2018
'
Strict

Import "GL/glew.h"

Extern "Os"

Const GL_IMAGE_2D_MULTISAMPLE=$9055
Const GL_IMAGE_2D_MULTISAMPLE_ARRAY=$9056
Const GL_INT_IMAGE_1D=$9057
Const GL_INT_IMAGE_2D=$9058
Const GL_INT_IMAGE_3D=$9059
Const GL_INT_IMAGE_2D_RECT=$905A
Const GL_INT_IMAGE_CUBE=$905B
Const GL_INT_IMAGE_BUFFER=$905C
Const GL_INT_IMAGE_1D_ARRAY=$905D
Const GL_INT_IMAGE_2D_ARRAY=$905E
Const GL_INT_IMAGE_CUBE_MAP_ARRAY=$905F
Const GL_INT_IMAGE_2D_MULTISAMPLE=$9060
Const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY=$9061
Const GL_UNSIGNED_INT_IMAGE_1D=$9062
Const GL_UNSIGNED_INT_IMAGE_2D=$9063
Const GL_UNSIGNED_INT_IMAGE_3D=$9064
Const GL_UNSIGNED_INT_IMAGE_2D_RECT=$9065
Const GL_UNSIGNED_INT_IMAGE_CUBE=$9066
Const GL_UNSIGNED_INT_IMAGE_BUFFER=$9067
Const GL_UNSIGNED_INT_IMAGE_1D_ARRAY=$9068
Const GL_UNSIGNED_INT_IMAGE_2D_ARRAY=$9069
Const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY=$906A
Const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE=$906B
Const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY=$906C
Const GL_MAX_IMAGE_SAMPLES=$906D
Const GL_IMAGE_BINDING_FORMAT=$906E
Const GL_IMAGE_FORMAT_COMPATIBILITY_TYPE=$90C7
Const GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE=$90C8
Const GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS=$90C9
Const GL_MAX_VERTEX_IMAGE_UNIFORMS=$90CA
Const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS=$90CB
Const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS=$90CC
Const GL_MAX_GEOMETRY_IMAGE_UNIFORMS=$90CD
Const GL_MAX_FRAGMENT_IMAGE_UNIFORMS=$90CE
Const GL_MAX_COMBINED_IMAGE_UNIFORMS=$90CF
Const GL_ALL_BARRIER_BITS=$FFFFFFFF
Global glBindImageTexture(unit_:Int,texture_:Int,level_:Int,layered_:Byte,layer_:Int,access_:Int,format_:Int)="void __glewBindImageTexture( GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum)!"
Global glMemoryBarrier(barriers_:Int)="void __glewMemoryBarrier( GLbitfield)!"
Const GL_ARB_shader_image_size=1
Const GL_ARB_shader_objects=1
Const GL_PROGRAM_OBJECT_ARB=$8B40
Const GL_SHADER_OBJECT_ARB=$8B48
Const GL_OBJECT_TYPE_ARB=$8B4E
Const GL_OBJECT_SUBTYPE_ARB=$8B4F
Const GL_FLOAT_VEC2_ARB=$8B50
Const GL_FLOAT_VEC3_ARB=$8B51
Const GL_FLOAT_VEC4_ARB=$8B52
Const GL_INT_VEC2_ARB=$8B53
Const GL_INT_VEC3_ARB=$8B54
Const GL_INT_VEC4_ARB=$8B55
Const GL_BOOL_ARB=$8B56
Const GL_BOOL_VEC2_ARB=$8B57
Const GL_BOOL_VEC3_ARB=$8B58
Const GL_BOOL_VEC4_ARB=$8B59
Const GL_FLOAT_MAT2_ARB=$8B5A
Const GL_FLOAT_MAT3_ARB=$8B5B
Const GL_FLOAT_MAT4_ARB=$8B5C
Const GL_SAMPLER_1D_ARB=$8B5D
Const GL_SAMPLER_2D_ARB=$8B5E
Const GL_SAMPLER_3D_ARB=$8B5F
Const GL_SAMPLER_CUBE_ARB=$8B60
Const GL_SAMPLER_1D_SHADOW_ARB=$8B61
Const GL_SAMPLER_2D_SHADOW_ARB=$8B62
Const GL_SAMPLER_2D_RECT_ARB=$8B63
Const GL_SAMPLER_2D_RECT_SHADOW_ARB=$8B64
Const GL_OBJECT_DELETE_STATUS_ARB=$8B80
Const GL_OBJECT_COMPILE_STATUS_ARB=$8B81
Const GL_OBJECT_LINK_STATUS_ARB=$8B82
Const GL_OBJECT_VALIDATE_STATUS_ARB=$8B83
Const GL_OBJECT_INFO_LOG_LENGTH_ARB=$8B84
Const GL_OBJECT_ATTACHED_OBJECTS_ARB=$8B85
Const GL_OBJECT_ACTIVE_UNIFORMS_ARB=$8B86
Const GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB=$8B87
Const GL_OBJECT_SHADER_SOURCE_LENGTH_ARB=$8B88
Global glAttachObjectARB(containerObj_:Int,obj_:Int)="void __glewAttachObjectARB( GLhandleARB, GLhandleARB)!"
Global glCompileShaderARB(shaderObj_:Int)="void __glewCompileShaderARB( GLhandleARB)!"
Global glCreateProgramObjectARB:Int()="GLhandleARB __glewCreateProgramObjectARB( void)!"
Global glCreateShaderObjectARB:Int(shaderType_:Int)="GLhandleARB __glewCreateShaderObjectARB( GLenum)!"
Global glDeleteObjectARB(obj_:Int)="void __glewDeleteObjectARB( GLhandleARB)!"
Global glDetachObjectARB(containerObj_:Int,attachedObj_:Int)="void __glewDetachObjectARB( GLhandleARB, GLhandleARB)!"
Global glGetActiveUniformARB(programObj_:Int,index_:Int,maxLength_:Int,length_:Int Ptr,size_:Int Ptr,type_:Int Ptr,name_:Byte Ptr)="void __glewGetActiveUniformARB( GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*)!"
Global glGetAttachedObjectsARB(containerObj_:Int,maxCount_:Int,count_:Int Ptr,obj_:Int Ptr)="void __glewGetAttachedObjectsARB( GLhandleARB, GLsizei, GLsizei*, GLhandleARB*)!"
Global glGetHandleARB:Int(pname_:Int)="GLhandleARB __glewGetHandleARB( GLenum)!"
Global glGetInfoLogARB(obj_:Int,maxLength_:Int,length_:Int Ptr,infoLog_:Byte Ptr)="void __glewGetInfoLogARB( GLhandleARB, GLsizei, GLsizei*, GLcharARB*)!"
Global glGetObjectParameterfvARB(obj_:Int,pname_:Int,params_:Float Ptr)="void __glewGetObjectParameterfvARB( GLhandleARB, GLenum, GLfloat*)!"
Global glGetObjectParameterivARB(obj_:Int,pname_:Int,params_:Int Ptr)="void __glewGetObjectParameterivARB( GLhandleARB, GLenum, GLint*)!"
Global glGetShaderSourceARB(obj_:Int,maxLength_:Int,length_:Int Ptr,source_:Byte Ptr)="void __glewGetShaderSourceARB( GLhandleARB, GLsizei, GLsizei*, GLcharARB*)!"
Global glGetUniformLocationARB:Int(programObj_:Int,name_:Byte Ptr)="GLint __glewGetUniformLocationARB( GLhandleARB,const GLcharARB*)!"
Global glGetUniformfvARB(programObj_:Int,location_:Int,params_:Float Ptr)="void __glewGetUniformfvARB( GLhandleARB, GLint, GLfloat*)!"
Global glGetUniformivARB(programObj_:Int,location_:Int,params_:Int Ptr)="void __glewGetUniformivARB( GLhandleARB, GLint, GLint*)!"
Global glLinkProgramARB(programObj_:Int)="void __glewLinkProgramARB( GLhandleARB)!"
Global glShaderSourceARB(shaderObj_:Int,count_:Int,string_:Byte Ptr Ptr,length_:Int Ptr)="void __glewShaderSourceARB( GLhandleARB, GLsizei,const GLcharARB**,const GLint*)!"
Global glUniform1fARB(location_:Int,v0_:Float)="void __glewUniform1fARB( GLint, GLfloat)!"
Global glUniform1fvARB(location_:Int,count_:Int,value_:Float Ptr)="void __glewUniform1fvARB( GLint, GLsizei,const GLfloat*)!"
Global glUniform1iARB(location_:Int,v0_:Int)="void __glewUniform1iARB( GLint, GLint)!"
Global glUniform1ivARB(location_:Int,count_:Int,value_:Int Ptr)="void __glewUniform1ivARB( GLint, GLsizei,const GLint*)!"
Global glUniform2fARB(location_:Int,v0_:Float,v1_:Float)="void __glewUniform2fARB( GLint, GLfloat, GLfloat)!"
Global glUniform2fvARB(location_:Int,count_:Int,value_:Float Ptr)="void __glewUniform2fvARB( GLint, GLsizei,const GLfloat*)!"
Global glUniform2iARB(location_:Int,v0_:Int,v1_:Int)="void __glewUniform2iARB( GLint, GLint, GLint)!"
Global glUniform2ivARB(location_:Int,count_:Int,value_:Int Ptr)="void __glewUniform2ivARB( GLint, GLsizei,const GLint*)!"
Global glUniform3fARB(location_:Int,v0_:Float,v1_:Float,v2_:Float)="void __glewUniform3fARB( GLint, GLfloat, GLfloat, GLfloat)!"
Global glUniform3fvARB(location_:Int,count_:Int,value_:Float Ptr)="void __glewUniform3fvARB( GLint, GLsizei,const GLfloat*)!"
Global glUniform3iARB(location_:Int,v0_:Int,v1_:Int,v2_:Int)="void __glewUniform3iARB( GLint, GLint, GLint, GLint)!"
Global glUniform3ivARB(location_:Int,count_:Int,value_:Int Ptr)="void __glewUniform3ivARB( GLint, GLsizei,const GLint*)!"
Global glUniform4fARB(location_:Int,v0_:Float,v1_:Float,v2_:Float,v3_:Float)="void __glewUniform4fARB( GLint, GLfloat, GLfloat, GLfloat, GLfloat)!"
Global glUniform4fvARB(location_:Int,count_:Int,value_:Float Ptr)="void __glewUniform4fvARB( GLint, GLsizei,const GLfloat*)!"
Global glUniform4iARB(location_:Int,v0_:Int,v1_:Int,v2_:Int,v3_:Int)="void __glewUniform4iARB( GLint, GLint, GLint, GLint, GLint)!"
Global glUniform4ivARB(location_:Int,count_:Int,value_:Int Ptr)="void __glewUniform4ivARB( GLint, GLsizei,const GLint*)!"
Global glUniformMatrix2fvARB(location_:Int,count_:Int,transpose_:Byte,value_:Float Ptr)="void __glewUniformMatrix2fvARB( GLint, GLsizei, GLboolean,const GLfloat*)!"
Global glUniformMatrix3fvARB(location_:Int,count_:Int,transpose_:Byte,value_:Float Ptr)="void __glewUniformMatrix3fvARB( GLint, GLsizei, GLboolean,const GLfloat*)!"
Global glUniformMatrix4fvARB(location_:Int,count_:Int,transpose_:Byte,value_:Float Ptr)="void __glewUniformMatrix4fvARB( GLint, GLsizei, GLboolean,const GLfloat*)!"
Global glUseProgramObjectARB(programObj_:Int)="void __glewUseProgramObjectARB( GLhandleARB)!"
Global glValidateProgramARB(programObj_:Int)="void __glewValidateProgramARB( GLhandleARB)!"
Const GL_ARB_shader_precision=1
Const GL_ARB_shader_stencil_export=1
Const GL_ARB_shader_storage_buffer_object=1
Const GL_SHADER_STORAGE_BARRIER_BIT=$2000
Const GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES=$8F39
Const GL_SHADER_STORAGE_BUFFER=$90D2
Const GL_SHADER_STORAGE_BUFFER_BINDING=$90D3
Const GL_SHADER_STORAGE_BUFFER_START=$90D4
Const GL_SHADER_STORAGE_BUFFER_SIZE=$90D5
Const GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS=$90D6
Const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS=$90D7
Const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS=$90D8
Const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS=$90D9
Const GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS=$90DA
Const GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS=$90DB
Const GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS=$90DC
Const GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS=$90DD
Const GL_MAX_SHADER_STORAGE_BLOCK_SIZE=$90DE
Const GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT=$90DF
Global glShaderStorageBlockBinding(program_:Int,storageBlockIndex_:Int,storageBlockBinding_:Int)="void __glewShaderStorageBlockBinding( GLuint, GLuint, GLuint)!"
Const GL_ARB_shader_subroutine=1
Const GL_ACTIVE_SUBROUTINES=$8DE5
Const GL_ACTIVE_SUBROUTINE_UNIFORMS=$8DE6
Const GL_MAX_SUBROUTINES=$8DE7
Const GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS=$8DE8
Const GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS=$8E47
Const GL_ACTIVE_SUBROUTINE_MAX_LENGTH=$8E48
Const GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH=$8E49
Const GL_NUM_COMPATIBLE_SUBROUTINES=$8E4A
Const GL_COMPATIBLE_SUBROUTINES=$8E4B
Global glGetActiveSubroutineName(program_:Int,shadertype_:Int,index_:Int,bufsize_:Int,length_:Int Ptr,name_:Byte Ptr)="void __glewGetActiveSubroutineName( GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*)!"
Global glGetActiveSubroutineUniformName(program_:Int,shadertype_:Int,index_:Int,bufsize_:Int,length_:Int Ptr,name_:Byte Ptr)="void __glewGetActiveSubroutineUniformName( GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*)!"
Global glGetActiveSubroutineUniformiv(program_:Int,shadertype_:Int,index_:Int,pname_:Int,values_:Int Ptr)="void __glewGetActiveSubroutineUniformiv( GLuint, GLenum, GLuint, GLenum, GLint*)!"
Global glGetProgramStageiv(program_:Int,shadertype_:Int,pname_:Int,values_:Int Ptr)="void __glewGetProgramStageiv( GLuint, GLenum, GLenum, GLint*)!"
Global glGetSubroutineIndex:Int(program_:Int,shadertype_:Int,name_:Byte Ptr)="GLuint __glewGetSubroutineIndex( GLuint, GLenum,const GLchar*)!"
Global glGetSubroutineUniformLocation:Int(program_:Int,shadertype_:Int,name_:Byte Ptr)="GLint __glewGetSubroutineUniformLocation( GLuint, GLenum,const GLchar*)!"
Global glGetUniformSubroutineuiv(shadertype_:Int,location_:Int,params_:Int Ptr)="void __glewGetUniformSubroutineuiv( GLenum, GLint, GLuint*)!"
Global glUniformSubroutinesuiv(shadertype_:Int,count_:Int,indices_:Int Ptr)="void __glewUniformSubroutinesuiv( GLenum, GLsizei,const GLuint*)!"
Const GL_ARB_shader_texture_image_samples=1
Const GL_ARB_shader_texture_lod=1
Const GL_ARB_shader_viewport_layer_array=1
Const GL_ARB_shading_language_100=1
Const GL_SHADING_LANGUAGE_VERSION_ARB=$8B8C
Const GL_ARB_shading_language_420pack=1
Const GL_ARB_shading_language_include=1
Const GL_SHADER_INCLUDE_ARB=$8DAE
Const GL_NAMED_STRING_LENGTH_ARB=$8DE9
Const GL_NAMED_STRING_TYPE_ARB=$8DEA
Global glCompileShaderIncludeARB(shader_:Int,count_:Int,path_:Byte Ptr Ptr,length_:Int Ptr)="void __glewCompileShaderIncludeARB( GLuint, GLsizei,const GLchar* const*,const GLint*)!"
Global glDeleteNamedStringARB(namelen_:Int,name_:Byte Ptr)="void __glewDeleteNamedStringARB( GLint,const GLchar*)!"
Global glGetNamedStringARB(namelen_:Int,name_:Byte Ptr,bufSize_:Int,stringlen_:Int Ptr,string_:Byte Ptr)="void __glewGetNamedStringARB( GLint,const GLchar*, GLsizei, GLint*, GLchar*)!"
Global glGetNamedStringivARB(namelen_:Int,name_:Byte Ptr,pname_:Int,params_:Int Ptr)="void __glewGetNamedStringivARB( GLint,const GLchar*, GLenum, GLint*)!"
Global glIsNamedStringARB:Byte(namelen_:Int,name_:Byte Ptr)="GLboolean __glewIsNamedStringARB( GLint,const GLchar*)!"
Global glNamedStringARB(type_:Int,namelen_:Int,name_:Byte Ptr,stringlen_:Int,string_:Byte Ptr)="void __glewNamedStringARB( GLenum, GLint,const GLchar*, GLint,const GLchar*)!"
Const GL_ARB_shading_language_packing=1
Const GL_ARB_shadow=1
Const GL_TEXTURE_COMPARE_MODE_ARB=$884C
Const GL_TEXTURE_COMPARE_FUNC_ARB=$884D
Const GL_COMPARE_R_TO_TEXTURE_ARB=$884E
Const GL_ARB_shadow_ambient=1
Const GL_TEXTURE_COMPARE_FAIL_VALUE_ARB=$80BF
Const GL_ARB_sparse_buffer=1
Const GL_SPARSE_STORAGE_BIT_ARB=$0400
Const GL_SPARSE_BUFFER_PAGE_SIZE_ARB=$82F8
Global glBufferPageCommitmentARB(target_:Int,offset_:Int,size_:Int,commit_:Byte)="void __glewBufferPageCommitmentARB( GLenum, GLintptr, GLsizeiptr, GLboolean)!"
Const GL_ARB_sparse_texture=1
Const GL_VIRTUAL_PAGE_SIZE_X_ARB=$9195
Const GL_VIRTUAL_PAGE_SIZE_Y_ARB=$9196
Const GL_VIRTUAL_PAGE_SIZE_Z_ARB=$9197
Const GL_MAX_SPARSE_TEXTURE_SIZE_ARB=$9198
Const GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB=$9199
Const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB=$919A
Const GL_TEXTURE_SPARSE_ARB=$91A6
Const GL_VIRTUAL_PAGE_SIZE_INDEX_ARB=$91A7
Const GL_NUM_VIRTUAL_PAGE_SIZES_ARB=$91A8
Const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB=$91A9
Const GL_NUM_SPARSE_LEVELS_ARB=$91AA
Global glTexPageCommitmentARB(target_:Int,level_:Int,xoffset_:Int,yoffset_:Int,zoffset_:Int,width_:Int,height_:Int,depth_:Int,commit_:Byte)="void __glewTexPageCommitmentARB( GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean)!"
Const GL_ARB_sparse_texture2=1
Const GL_ARB_sparse_texture_clamp=1
Const GL_ARB_spirv_extensions=1
Const GL_ARB_stencil_texturing=1
Const GL_DEPTH_STENCIL_TEXTURE_MODE=$90EA
Const GL_ARB_sync=1
Const GL_SYNC_FLUSH_COMMANDS_BIT=$00000001
Const GL_MAX_SERVER_WAIT_TIMEOUT=$9111
Const GL_OBJECT_TYPE=$9112
Const GL_SYNC_CONDITION=$9113
Const GL_SYNC_STATUS=$9114
Const GL_SYNC_FLAGS=$9115
Const GL_SYNC_FENCE=$9116
Const GL_SYNC_GPU_COMMANDS_COMPLETE=$9117
Const GL_UNSIGNALED=$9118
Const GL_SIGNALED=$9119
Const GL_ALREADY_SIGNALED=$911A
Const GL_TIMEOUT_EXPIRED=$911B
Const GL_CONDITION_SATISFIED=$911C
Const GL_WAIT_FAILED=$911D
Const GL_TIMEOUT_IGNORED=$FFFFFFFFFFFFFFFF
Global glGetInteger64v(pname_:Int,params_:Long Ptr)="void __glewGetInteger64v( GLenum, GLint64*)!"
Const GL_ARB_tessellation_shader=1
Const GL_PATCHES=$E
Const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER=$84F0
Const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER=$84F1
Const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS=$886C
Const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS=$886D
Const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS=$8E1E
Const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS=$8E1F
Const GL_PATCH_VERTICES=$8E72
Const GL_PATCH_DEFAULT_INNER_LEVEL=$8E73
Const GL_PATCH_DEFAULT_OUTER_LEVEL=$8E74
Const GL_TESS_CONTROL_OUTPUT_VERTICES=$8E75
Const GL_TESS_GEN_MODE=$8E76
Const GL_TESS_GEN_SPACING=$8E77
Const GL_TESS_GEN_VERTEX_ORDER=$8E78
Const GL_TESS_GEN_POINT_MODE=$8E79
Const GL_ISOLINES=$8E7A
Const GL_FRACTIONAL_ODD=$8E7B
Const GL_FRACTIONAL_EVEN=$8E7C
Const GL_MAX_PATCH_VERTICES=$8E7D
Const GL_MAX_TESS_GEN_LEVEL=$8E7E
Const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS=$8E7F
Const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS=$8E80
Const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS=$8E81
Const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS=$8E82
Const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS=$8E83
Const GL_MAX_TESS_PATCH_COMPONENTS=$8E84
Const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS=$8E85
Const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS=$8E86
Const GL_TESS_EVALUATION_SHADER=$8E87
Const GL_TESS_CONTROL_SHADER=$8E88
Const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS=$8E89
Const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS=$8E8A
Global glPatchParameterfv(pname_:Int,values_:Float Ptr)="void __glewPatchParameterfv( GLenum,const GLfloat*)!"
Global glPatchParameteri(pname_:Int,value_:Int)="void __glewPatchParameteri( GLenum, GLint)!"
Const GL_ARB_texture_barrier=1
Global glTextureBarrier()="void __glewTextureBarrier( void)!"
Const GL_ARB_texture_border_clamp=1
Const GL_CLAMP_TO_BORDER_ARB=$812D
Const GL_ARB_texture_buffer_object=1
Const GL_TEXTURE_BUFFER_ARB=$8C2A
Const GL_MAX_TEXTURE_BUFFER_SIZE_ARB=$8C2B
Const GL_TEXTURE_BINDING_BUFFER_ARB=$8C2C
Const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB=$8C2D
Const GL_TEXTURE_BUFFER_FORMAT_ARB=$8C2E
Global glTexBufferARB(target_:Int,internalformat_:Int,buffer_:Int)="void __glewTexBufferARB( GLenum, GLenum, GLuint)!"
Const GL_ARB_texture_buffer_object_rgb32=1
Const GL_ARB_texture_buffer_range=1
Const GL_TEXTURE_BUFFER_OFFSET=$919D
Const GL_TEXTURE_BUFFER_SIZE=$919E
Const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT=$919F
Global glTexBufferRange(target_:Int,internalformat_:Int,buffer_:Int,offset_:Int,size_:Int)="void __glewTexBufferRange( GLenum, GLenum, GLuint, GLintptr, GLsizeiptr)!"
Global glTextureBufferRangeEXT(texture_:Int,target_:Int,internalformat_:Int,buffer_:Int,offset_:Int,size_:Int)="void __glewTextureBufferRangeEXT( GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr)!"
Const GL_ARB_texture_compression=1
Const GL_COMPRESSED_ALPHA_ARB=$84E9
Const GL_COMPRESSED_LUMINANCE_ARB=$84EA
Const GL_COMPRESSED_LUMINANCE_ALPHA_ARB=$84EB
Const GL_COMPRESSED_INTENSITY_ARB=$84EC
Const GL_COMPRESSED_RGB_ARB=$84ED
Const GL_COMPRESSED_RGBA_ARB=$84EE
Const GL_TEXTURE_COMPRESSION_HINT_ARB=$84EF
Const GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB=$86A0
Const GL_TEXTURE_COMPRESSED_ARB=$86A1
Const GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB=$86A2
Const GL_COMPRESSED_TEXTURE_FORMATS_ARB=$86A3
Global glCompressedTexImage1DARB(target_:Int,level_:Int,internalformat_:Int,width_:Int,border_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexImage1DARB( GLenum, GLint, GLenum, GLsizei, GLint, GLsizei,const void*)!"
Global glCompressedTexImage2DARB(target_:Int,level_:Int,internalformat_:Int,width_:Int,height_:Int,border_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexImage2DARB( GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei,const void*)!"
Global glCompressedTexImage3DARB(target_:Int,level_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int,border_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexImage3DARB( GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei,const void*)!"
Global glCompressedTexSubImage1DARB(target_:Int,level_:Int,xoffset_:Int,width_:Int,format_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexSubImage1DARB( GLenum, GLint, GLint, GLsizei, GLenum, GLsizei,const void*)!"
Global glCompressedTexSubImage2DARB(target_:Int,level_:Int,xoffset_:Int,yoffset_:Int,width_:Int,height_:Int,format_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexSubImage2DARB( GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei,const void*)!"
Global glCompressedTexSubImage3DARB(target_:Int,level_:Int,xoffset_:Int,yoffset_:Int,zoffset_:Int,width_:Int,height_:Int,depth_:Int,format_:Int,imageSize_:Int,data_:Byte Ptr)="void __glewCompressedTexSubImage3DARB( GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei,const void*)!"
Global glGetCompressedTexImageARB(target_:Int,lod_:Int,img_:Byte Ptr)="void __glewGetCompressedTexImageARB( GLenum, GLint, void*)!"
Const GL_ARB_texture_compression_bptc=1
Const GL_COMPRESSED_RGBA_BPTC_UNORM_ARB=$8E8C
Const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB=$8E8D
Const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB=$8E8E
Const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB=$8E8F
Const GL_ARB_texture_compression_rgtc=1
Const GL_COMPRESSED_RED_RGTC1=$8DBB
Const GL_COMPRESSED_SIGNED_RED_RGTC1=$8DBC
Const GL_COMPRESSED_RG_RGTC2=$8DBD
Const GL_COMPRESSED_SIGNED_RG_RGTC2=$8DBE
Const GL_ARB_texture_cube_map=1
Const GL_NORMAL_MAP_ARB=$8511
Const GL_REFLECTION_MAP_ARB=$8512
Const GL_TEXTURE_CUBE_MAP_ARB=$8513
Const GL_TEXTURE_BINDING_CUBE_MAP_ARB=$8514
Const GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB=$8515
Const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB=$8516
Const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB=$8517
Const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB=$8518
Const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB=$8519
Const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB=$851A
Const GL_PROXY_TEXTURE_CUBE_MAP_ARB=$851B
Const GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB=$851C
Const GL_ARB_texture_cube_map_array=1
Const GL_TEXTURE_CUBE_MAP_ARRAY_ARB=$9009
Const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB=$900A
Const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB=$900B
Const GL_SAMPLER_CUBE_MAP_ARRAY_ARB=$900C
Const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB=$900D
Const GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB=$900E
Const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB=$900F
Const GL_ARB_texture_env_add=1
Const GL_ARB_texture_env_combine=1
Const GL_SUBTRACT_ARB=$84E7
Const GL_COMBINE_ARB=$8570
Const GL_COMBINE_RGB_ARB=$8571
Const GL_COMBINE_ALPHA_ARB=$8572
Const GL_RGB_SCALE_ARB=$8573
Const GL_ADD_SIGNED_ARB=$8574
Const GL_INTERPOLATE_ARB=$8575
Const GL_CONSTANT_ARB=$8576
Const GL_PRIMARY_COLOR_ARB=$8577
Const GL_PREVIOUS_ARB=$8578
Const GL_SOURCE0_RGB_ARB=$8580
Const GL_SOURCE1_RGB_ARB=$8581
Const GL_SOURCE2_RGB_ARB=$8582
Const GL_SOURCE0_ALPHA_ARB=$8588
Const GL_SOURCE1_ALPHA_ARB=$8589
Const GL_SOURCE2_ALPHA_ARB=$858A
Const GL_OPERAND0_RGB_ARB=$8590
Const GL_OPERAND1_RGB_ARB=$8591
Const GL_OPERAND2_RGB_ARB=$8592
Const GL_OPERAND0_ALPHA_ARB=$8598
Const GL_OPERAND1_ALPHA_ARB=$8599
Const GL_OPERAND2_ALPHA_ARB=$859A
Const GL_ARB_texture_env_crossbar=1
Const GL_ARB_texture_env_dot3=1
Const GL_DOT3_RGB_ARB=$86AE
Const GL_DOT3_RGBA_ARB=$86AF
Const GL_ARB_texture_filter_anisotropic=1
Const GL_ARB_texture_filter_minmax=1
Const GL_TEXTURE_REDUCTION_MODE_ARB=$9366
Const GL_WEIGHTED_AVERAGE_ARB=$9367
Const GL_ARB_texture_float=1
Const GL_RGBA32F_ARB=$8814
Const GL_RGB32F_ARB=$8815
Const GL_ALPHA32F_ARB=$8816
Const GL_INTENSITY32F_ARB=$8817
Const GL_LUMINANCE32F_ARB=$8818
Const GL_LUMINANCE_ALPHA32F_ARB=$8819
Const GL_RGBA16F_ARB=$881A
Const GL_RGB16F_ARB=$881B
Const GL_ALPHA16F_ARB=$881C
Const GL_INTENSITY16F_ARB=$881D
Const GL_LUMINANCE16F_ARB=$881E
Const GL_LUMINANCE_ALPHA16F_ARB=$881F
Const GL_TEXTURE_RED_TYPE_ARB=$8C10
Const GL_TEXTURE_GREEN_TYPE_ARB=$8C11
Const GL_TEXTURE_BLUE_TYPE_ARB=$8C12
Const GL_TEXTURE_ALPHA_TYPE_ARB=$8C13
Const GL_TEXTURE_LUMINANCE_TYPE_ARB=$8C14
Const GL_TEXTURE_INTENSITY_TYPE_ARB=$8C15
Const GL_TEXTURE_DEPTH_TYPE_ARB=$8C16
Const GL_UNSIGNED_NORMALIZED_ARB=$8C17
Const GL_ARB_texture_gather=1
Const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB=$8E5E
Const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB=$8E5F
Const GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB=$8F9F
Const GL_ARB_texture_mirror_clamp_to_edge=1
Const GL_MIRROR_CLAMP_TO_EDGE=$8743
Const GL_ARB_texture_mirrored_repeat=1
Const GL_MIRRORED_REPEAT_ARB=$8370
Const GL_ARB_texture_multisample=1
Const GL_SAMPLE_POSITION=$8E50
Const GL_SAMPLE_MASK=$8E51
Const GL_SAMPLE_MASK_VALUE=$8E52
Const GL_MAX_SAMPLE_MASK_WORDS=$8E59
Const GL_TEXTURE_2D_MULTISAMPLE=$9100
Const GL_PROXY_TEXTURE_2D_MULTISAMPLE=$9101
Const GL_TEXTURE_2D_MULTISAMPLE_ARRAY=$9102
Const GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY=$9103
Const GL_TEXTURE_BINDING_2D_MULTISAMPLE=$9104
Const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY=$9105
Const GL_TEXTURE_SAMPLES=$9106
Const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS=$9107
Const GL_SAMPLER_2D_MULTISAMPLE=$9108
Const GL_INT_SAMPLER_2D_MULTISAMPLE=$9109
Const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE=$910A
Const GL_SAMPLER_2D_MULTISAMPLE_ARRAY=$910B
Const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY=$910C
Const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY=$910D
Const GL_MAX_COLOR_TEXTURE_SAMPLES=$910E
Const GL_MAX_DEPTH_TEXTURE_SAMPLES=$910F
Const GL_MAX_INTEGER_SAMPLES=$9110
Global glGetMultisamplefv(pname_:Int,index_:Int,val_:Float Ptr)="void __glewGetMultisamplefv( GLenum, GLuint, GLfloat*)!"
Global glSampleMaski(index_:Int,mask_:Int)="void __glewSampleMaski( GLuint, GLbitfield)!"
Global glTexImage2DMultisample(target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,fixedsamplelocations_:Byte)="void __glewTexImage2DMultisample( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean)!"
Global glTexImage3DMultisample(target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int,fixedsamplelocations_:Byte)="void __glewTexImage3DMultisample( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean)!"
Const GL_ARB_texture_non_power_of_two=1
Const GL_ARB_texture_query_levels=1
Const GL_ARB_texture_query_lod=1
Const GL_ARB_texture_rectangle=1
Const GL_TEXTURE_RECTANGLE_ARB=$84F5
Const GL_TEXTURE_BINDING_RECTANGLE_ARB=$84F6
Const GL_PROXY_TEXTURE_RECTANGLE_ARB=$84F7
Const GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB=$84F8
Const GL_ARB_texture_rg=1
Const GL_COMPRESSED_RED=$8225
Const GL_COMPRESSED_RG=$8226
Const GL_RG=$8227
Const GL_RG_INTEGER=$8228
Const GL_R8=$8229
Const GL_R16=$822A
Const GL_RG8=$822B
Const GL_RG16=$822C
Const GL_R16F=$822D
Const GL_R32F=$822E
Const GL_RG16F=$822F
Const GL_RG32F=$8230
Const GL_R8I=$8231
Const GL_R8UI=$8232
Const GL_R16I=$8233
Const GL_R16UI=$8234
Const GL_R32I=$8235
Const GL_R32UI=$8236
Const GL_RG8I=$8237
Const GL_RG16I=$8239
Const GL_RG32I=$823B
Const GL_RG32UI=$823C
Const GL_ARB_texture_rgb10_a2ui=1
Const GL_ARB_texture_stencil8=1
Const GL_ARB_texture_storage=1
Const GL_TEXTURE_IMMUTABLE_FORMAT=$912F
Global glTexStorage1D(target_:Int,levels_:Int,internalformat_:Int,width_:Int)="void __glewTexStorage1D( GLenum, GLsizei, GLenum, GLsizei)!"
Global glTexStorage2D(target_:Int,levels_:Int,internalformat_:Int,width_:Int,height_:Int)="void __glewTexStorage2D( GLenum, GLsizei, GLenum, GLsizei, GLsizei)!"
Global glTexStorage3D(target_:Int,levels_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int)="void __glewTexStorage3D( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei)!"
Const GL_ARB_texture_storage_multisample=1
Global glTexStorage2DMultisample(target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,fixedsamplelocations_:Byte)="void __glewTexStorage2DMultisample( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean)!"
Global glTexStorage3DMultisample(target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int,fixedsamplelocations_:Byte)="void __glewTexStorage3DMultisample( GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean)!"
Global glTextureStorage2DMultisampleEXT(texture_:Int,target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,fixedsamplelocations_:Byte)="void __glewTextureStorage2DMultisampleEXT( GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean)!"
Global glTextureStorage3DMultisampleEXT(texture_:Int,target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int,depth_:Int,fixedsamplelocations_:Byte)="void __glewTextureStorage3DMultisampleEXT( GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean)!"
Const GL_ARB_texture_swizzle=1
Const GL_TEXTURE_SWIZZLE_R=$8E42
Const GL_TEXTURE_SWIZZLE_G=$8E43
Const GL_TEXTURE_SWIZZLE_B=$8E44
Const GL_TEXTURE_SWIZZLE_A=$8E45
Const GL_TEXTURE_SWIZZLE_RGBA=$8E46
Const GL_ARB_texture_view=1
Const GL_TEXTURE_VIEW_MIN_LEVEL=$82DB
Const GL_TEXTURE_VIEW_NUM_LEVELS=$82DC
Const GL_TEXTURE_VIEW_MIN_LAYER=$82DD
Const GL_TEXTURE_VIEW_NUM_LAYERS=$82DE
Global glTextureView(texture_:Int,target_:Int,origtexture_:Int,internalformat_:Int,minlevel_:Int,numlevels_:Int,minlayer_:Int,numlayers_:Int)="void __glewTextureView( GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint)!"
Const GL_ARB_timer_query=1
Const GL_TIME_ELAPSED=$88BF
Const GL_TIMESTAMP=$8E28
Global glGetQueryObjecti64v(id_:Int,pname_:Int,params_:Long Ptr)="void __glewGetQueryObjecti64v( GLuint, GLenum, GLint64*)!"
Global glGetQueryObjectui64v(id_:Int,pname_:Int,params_:Long Ptr)="void __glewGetQueryObjectui64v( GLuint, GLenum, GLuint64*)!"
Global glQueryCounter(id_:Int,target_:Int)="void __glewQueryCounter( GLuint, GLenum)!"
Const GL_ARB_transform_feedback2=1
Const GL_TRANSFORM_FEEDBACK=$8E22
Const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED=$8E23
Const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE=$8E24
Const GL_TRANSFORM_FEEDBACK_BINDING=$8E25
Global glBindTransformFeedback(target_:Int,id_:Int)="void __glewBindTransformFeedback( GLenum, GLuint)!"
Global glDeleteTransformFeedbacks(n_:Int,ids_:Int Ptr)="void __glewDeleteTransformFeedbacks( GLsizei,const GLuint*)!"
Global glDrawTransformFeedback(mode_:Int,id_:Int)="void __glewDrawTransformFeedback( GLenum, GLuint)!"
Global glGenTransformFeedbacks(n_:Int,ids_:Int Ptr)="void __glewGenTransformFeedbacks( GLsizei, GLuint*)!"
Global glIsTransformFeedback:Byte(id_:Int)="GLboolean __glewIsTransformFeedback( GLuint)!"
Global glPauseTransformFeedback()="void __glewPauseTransformFeedback( void)!"
Global glResumeTransformFeedback()="void __glewResumeTransformFeedback( void)!"
Const GL_ARB_transform_feedback3=1
Const GL_MAX_TRANSFORM_FEEDBACK_BUFFERS=$8E70
Global glBeginQueryIndexed(target_:Int,index_:Int,id_:Int)="void __glewBeginQueryIndexed( GLenum, GLuint, GLuint)!"
Global glDrawTransformFeedbackStream(mode_:Int,id_:Int,stream_:Int)="void __glewDrawTransformFeedbackStream( GLenum, GLuint, GLuint)!"
Global glEndQueryIndexed(target_:Int,index_:Int)="void __glewEndQueryIndexed( GLenum, GLuint)!"
Global glGetQueryIndexediv(target_:Int,index_:Int,pname_:Int,params_:Int Ptr)="void __glewGetQueryIndexediv( GLenum, GLuint, GLenum, GLint*)!"
Const GL_ARB_transform_feedback_instanced=1
Global glDrawTransformFeedbackInstanced(mode_:Int,id_:Int,primcount_:Int)="void __glewDrawTransformFeedbackInstanced( GLenum, GLuint, GLsizei)!"
Global glDrawTransformFeedbackStreamInstanced(mode_:Int,id_:Int,stream_:Int,primcount_:Int)="void __glewDrawTransformFeedbackStreamInstanced( GLenum, GLuint, GLuint, GLsizei)!"
Const GL_ARB_transform_feedback_overflow_query=1
Const GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB=$82EC
Const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB=$82ED
Const GL_ARB_transpose_matrix=1
Const GL_TRANSPOSE_MODELVIEW_MATRIX_ARB=$84E3
Const GL_TRANSPOSE_PROJECTION_MATRIX_ARB=$84E4
Const GL_TRANSPOSE_TEXTURE_MATRIX_ARB=$84E5
Const GL_TRANSPOSE_COLOR_MATRIX_ARB=$84E6
Global glLoadTransposeMatrixdARB(m_:Double Ptr)="void __glewLoadTransposeMatrixdARB( GLdouble)!"
Global glLoadTransposeMatrixfARB(m_:Float Ptr)="void __glewLoadTransposeMatrixfARB( GLfloat)!"
Global glMultTransposeMatrixdARB(m_:Double Ptr)="void __glewMultTransposeMatrixdARB( GLdouble)!"
Global glMultTransposeMatrixfARB(m_:Float Ptr)="void __glewMultTransposeMatrixfARB( GLfloat)!"
Const GL_ARB_uniform_buffer_object=1
Const GL_UNIFORM_BUFFER=$8A11
Const GL_UNIFORM_BUFFER_BINDING=$8A28

End Extern
