Strict

Import "GL/glew.h"

Extern "Os"

Const GL_MAX_SPOT_EXPONENT_NV=$8505
Const GL_NV_multisample_coverage=1
Const GL_COLOR_SAMPLES_NV=$8E20
Const GL_NV_multisample_filter_hint=1
Const GL_MULTISAMPLE_FILTER_HINT_NV=$8534
Const GL_NV_occlusion_query=1
Const GL_PIXEL_COUNTER_BITS_NV=$8864
Const GL_CURRENT_OCCLUSION_QUERY_ID_NV=$8865
Const GL_PIXEL_COUNT_NV=$8866
Const GL_PIXEL_COUNT_AVAILABLE_NV=$8867
Global glBeginOcclusionQueryNV(id_:Int)="void __glewBeginOcclusionQueryNV( GLuint)!"
Global glDeleteOcclusionQueriesNV(n_:Int,ids_:Int Ptr)="void __glewDeleteOcclusionQueriesNV( GLsizei,const GLuint*)!"
Global glEndOcclusionQueryNV()="void __glewEndOcclusionQueryNV( void)!"
Global glGenOcclusionQueriesNV(n_:Int,ids_:Int Ptr)="void __glewGenOcclusionQueriesNV( GLsizei, GLuint*)!"
Global glGetOcclusionQueryivNV(id_:Int,pname_:Int,params_:Int Ptr)="void __glewGetOcclusionQueryivNV( GLuint, GLenum, GLint*)!"
Global glGetOcclusionQueryuivNV(id_:Int,pname_:Int,params_:Int Ptr)="void __glewGetOcclusionQueryuivNV( GLuint, GLenum, GLuint*)!"
Global glIsOcclusionQueryNV:Byte(id_:Int)="GLboolean __glewIsOcclusionQueryNV( GLuint)!"
Const GL_NV_packed_depth_stencil=1
Const GL_DEPTH_STENCIL_NV=$84F9
Const GL_UNSIGNED_INT_24_8_NV=$84FA
Const GL_NV_parameter_buffer_object=1
Const GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV=$8DA0
Const GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV=$8DA1
Const GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV=$8DA2
Const GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV=$8DA3
Const GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV=$8DA4
Global glProgramBufferParametersIivNV(target_:Int,buffer_:Int,index_:Int,count_:Int,params_:Int Ptr)="void __glewProgramBufferParametersIivNV( GLenum, GLuint, GLuint, GLsizei,const GLint*)!"
Global glProgramBufferParametersIuivNV(target_:Int,buffer_:Int,index_:Int,count_:Int,params_:Int Ptr)="void __glewProgramBufferParametersIuivNV( GLenum, GLuint, GLuint, GLsizei,const GLuint*)!"
Global glProgramBufferParametersfvNV(target_:Int,buffer_:Int,index_:Int,count_:Int,params_:Float Ptr)="void __glewProgramBufferParametersfvNV( GLenum, GLuint, GLuint, GLsizei,const GLfloat*)!"
Const GL_NV_parameter_buffer_object2=1
Const GL_NV_path_rendering=1
Const GL_CLOSE_PATH_NV=$00
Const GL_BOLD_BIT_NV=$01
Const GL_GLYPH_WIDTH_BIT_NV=$01
Const GL_GLYPH_HEIGHT_BIT_NV=$02
Const GL_ITALIC_BIT_NV=$02
Const GL_MOVE_TO_NV=$02
Const GL_RELATIVE_MOVE_TO_NV=$03
Const GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV=$04
Const GL_LINE_TO_NV=$04
Const GL_RELATIVE_LINE_TO_NV=$05
Const GL_HORIZONTAL_LINE_TO_NV=$06
Const GL_RELATIVE_HORIZONTAL_LINE_TO_NV=$07
Const GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV=$08
Const GL_VERTICAL_LINE_TO_NV=$08
Const GL_RELATIVE_VERTICAL_LINE_TO_NV=$09
Const GL_QUADRATIC_CURVE_TO_NV=$0A
Const GL_RELATIVE_QUADRATIC_CURVE_TO_NV=$0B
Const GL_CUBIC_CURVE_TO_NV=$0C
Const GL_RELATIVE_CUBIC_CURVE_TO_NV=$0D
Const GL_SMOOTH_QUADRATIC_CURVE_TO_NV=$0E
Const GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV=$0F
Const GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV=$10
Const GL_SMOOTH_CUBIC_CURVE_TO_NV=$10
Const GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV=$11
Const GL_SMALL_CCW_ARC_TO_NV=$12
Const GL_RELATIVE_SMALL_CCW_ARC_TO_NV=$13
Const GL_SMALL_CW_ARC_TO_NV=$14
Const GL_RELATIVE_SMALL_CW_ARC_TO_NV=$15
Const GL_LARGE_CCW_ARC_TO_NV=$16
Const GL_RELATIVE_LARGE_CCW_ARC_TO_NV=$17
Const GL_LARGE_CW_ARC_TO_NV=$18
Const GL_RELATIVE_LARGE_CW_ARC_TO_NV=$19
Const GL_GLYPH_VERTICAL_BEARING_X_BIT_NV=$20
Const GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV=$40
Const GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV=$80
Const GL_RESTART_PATH_NV=$F0
Const GL_DUP_FIRST_CUBIC_CURVE_TO_NV=$F2
Const GL_DUP_LAST_CUBIC_CURVE_TO_NV=$F4
Const GL_RECT_NV=$F6
Const GL_CIRCULAR_CCW_ARC_TO_NV=$F8
Const GL_CIRCULAR_CW_ARC_TO_NV=$FA
Const GL_CIRCULAR_TANGENT_ARC_TO_NV=$FC
Const GL_ARC_TO_NV=$FE
Const GL_RELATIVE_ARC_TO_NV=$FF
Const GL_GLYPH_HAS_KERNING_BIT_NV=$100
Const GL_PATH_FORMAT_SVG_NV=$9070
Const GL_PATH_FORMAT_PS_NV=$9071
Const GL_STANDARD_FONT_NAME_NV=$9072
Const GL_SYSTEM_FONT_NAME_NV=$9073
Const GL_FILE_NAME_NV=$9074
Const GL_PATH_STROKE_WIDTH_NV=$9075
Const GL_PATH_END_CAPS_NV=$9076
Const GL_PATH_INITIAL_END_CAP_NV=$9077
Const GL_PATH_TERMINAL_END_CAP_NV=$9078
Const GL_PATH_JOIN_STYLE_NV=$9079
Const GL_PATH_MITER_LIMIT_NV=$907A
Const GL_PATH_DASH_CAPS_NV=$907B
Const GL_PATH_INITIAL_DASH_CAP_NV=$907C
Const GL_PATH_TERMINAL_DASH_CAP_NV=$907D
Const GL_PATH_DASH_OFFSET_NV=$907E
Const GL_PATH_CLIENT_LENGTH_NV=$907F
Const GL_PATH_FILL_MODE_NV=$9080
Const GL_PATH_FILL_MASK_NV=$9081
Const GL_PATH_FILL_COVER_MODE_NV=$9082
Const GL_PATH_STROKE_COVER_MODE_NV=$9083
Const GL_PATH_STROKE_MASK_NV=$9084
Const GL_COUNT_UP_NV=$9088
Const GL_COUNT_DOWN_NV=$9089
Const GL_PATH_OBJECT_BOUNDING_BOX_NV=$908A
Const GL_CONVEX_HULL_NV=$908B
Const GL_BOUNDING_BOX_NV=$908D
Const GL_TRANSLATE_X_NV=$908E
Const GL_TRANSLATE_Y_NV=$908F
Const GL_TRANSLATE_2D_NV=$9090
Const GL_TRANSLATE_3D_NV=$9091
Const GL_AFFINE_2D_NV=$9092
Const GL_AFFINE_3D_NV=$9094
Const GL_TRANSPOSE_AFFINE_2D_NV=$9096
Const GL_TRANSPOSE_AFFINE_3D_NV=$9098
Const GL_UTF8_NV=$909A
Const GL_UTF16_NV=$909B
Const GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV=$909C
Const GL_PATH_COMMAND_COUNT_NV=$909D
Const GL_PATH_COORD_COUNT_NV=$909E
Const GL_PATH_DASH_ARRAY_COUNT_NV=$909F
Const GL_PATH_COMPUTED_LENGTH_NV=$90A0
Const GL_PATH_FILL_BOUNDING_BOX_NV=$90A1
Const GL_PATH_STROKE_BOUNDING_BOX_NV=$90A2
Const GL_SQUARE_NV=$90A3
Const GL_ROUND_NV=$90A4
Const GL_TRIANGULAR_NV=$90A5
Const GL_BEVEL_NV=$90A6
Const GL_MITER_REVERT_NV=$90A7
Const GL_MITER_TRUNCATE_NV=$90A8
Const GL_SKIP_MISSING_GLYPH_NV=$90A9
Const GL_USE_MISSING_GLYPH_NV=$90AA
Const GL_PATH_ERROR_POSITION_NV=$90AB
Const GL_PATH_FOG_GEN_MODE_NV=$90AC
Const GL_ACCUM_ADJACENT_PAIRS_NV=$90AD
Const GL_ADJACENT_PAIRS_NV=$90AE
Const GL_FIRST_TO_REST_NV=$90AF
Const GL_PATH_GEN_MODE_NV=$90B0
Const GL_PATH_GEN_COEFF_NV=$90B1
Const GL_PATH_GEN_COLOR_FORMAT_NV=$90B2
Const GL_PATH_GEN_COMPONENTS_NV=$90B3
Const GL_PATH_DASH_OFFSET_RESET_NV=$90B4
Const GL_MOVE_TO_RESETS_NV=$90B5
Const GL_MOVE_TO_CONTINUES_NV=$90B6
Const GL_PATH_STENCIL_FUNC_NV=$90B7
Const GL_PATH_STENCIL_REF_NV=$90B8
Const GL_PATH_STENCIL_VALUE_MASK_NV=$90B9
Const GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV=$90BD
Const GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV=$90BE
Const GL_PATH_COVER_DEPTH_FUNC_NV=$90BF
Const GL_FONT_X_MIN_BOUNDS_BIT_NV=$00010000
Const GL_FONT_Y_MIN_BOUNDS_BIT_NV=$00020000
Const GL_FONT_X_MAX_BOUNDS_BIT_NV=$00040000
Const GL_FONT_Y_MAX_BOUNDS_BIT_NV=$00080000
Const GL_FONT_UNITS_PER_EM_BIT_NV=$00100000
Const GL_FONT_ASCENDER_BIT_NV=$00200000
Const GL_FONT_DESCENDER_BIT_NV=$00400000
Const GL_FONT_HEIGHT_BIT_NV=$00800000
Const GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV=$01000000
Const GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV=$02000000
Const GL_FONT_UNDERLINE_POSITION_BIT_NV=$04000000
Const GL_FONT_UNDERLINE_THICKNESS_BIT_NV=$08000000
Const GL_FONT_HAS_KERNING_BIT_NV=$10000000
Global glCopyPathNV(resultPath_:Int,srcPath_:Int)="void __glewCopyPathNV( GLuint, GLuint)!"
Global glCoverFillPathInstancedNV(numPaths_:Int,pathNameType_:Int,paths_:Byte Ptr,pathBase_:Int,coverMode_:Int,transformType_:Int,transformValues_:Float Ptr)="void __glewCoverFillPathInstancedNV( GLsizei, GLenum,const void*, GLuint, GLenum, GLenum,const GLfloat*)!"
Global glCoverFillPathNV(path_:Int,coverMode_:Int)="void __glewCoverFillPathNV( GLuint, GLenum)!"
Global glCoverStrokePathInstancedNV(numPaths_:Int,pathNameType_:Int,paths_:Byte Ptr,pathBase_:Int,coverMode_:Int,transformType_:Int,transformValues_:Float Ptr)="void __glewCoverStrokePathInstancedNV( GLsizei, GLenum,const void*, GLuint, GLenum, GLenum,const GLfloat*)!"
Global glCoverStrokePathNV(name_:Int,coverMode_:Int)="void __glewCoverStrokePathNV( GLuint, GLenum)!"
Global glDeletePathsNV(path_:Int,range_:Int)="void __glewDeletePathsNV( GLuint, GLsizei)!"
Global glGenPathsNV:Int(range_:Int)="GLuint __glewGenPathsNV( GLsizei)!"
Global glGetPathColorGenfvNV(color_:Int,pname_:Int,value_:Float Ptr)="void __glewGetPathColorGenfvNV( GLenum, GLenum, GLfloat*)!"
Global glGetPathColorGenivNV(color_:Int,pname_:Int,value_:Int Ptr)="void __glewGetPathColorGenivNV( GLenum, GLenum, GLint*)!"
Global glGetPathCommandsNV(name_:Int,commands_:Byte Ptr)="void __glewGetPathCommandsNV( GLuint, GLubyte*)!"
Global glGetPathCoordsNV(name_:Int,coords_:Float Ptr)="void __glewGetPathCoordsNV( GLuint, GLfloat*)!"
Global glGetPathDashArrayNV(name_:Int,dashArray_:Float Ptr)="void __glewGetPathDashArrayNV( GLuint, GLfloat*)!"
Global glGetPathLengthNV:Float(path_:Int,startSegment_:Int,numSegments_:Int)="GLfloat __glewGetPathLengthNV( GLuint, GLsizei, GLsizei)!"
Global glGetPathMetricRangeNV(metricQueryMask_:Int,fistPathName_:Int,numPaths_:Int,stride_:Int,metrics_:Float Ptr)="void __glewGetPathMetricRangeNV( GLbitfield, GLuint, GLsizei, GLsizei, GLfloat*)!"
Global glGetPathMetricsNV(metricQueryMask_:Int,numPaths_:Int,pathNameType_:Int,paths_:Byte Ptr,pathBase_:Int,stride_:Int,metrics_:Float Ptr)="void __glewGetPathMetricsNV( GLbitfield, GLsizei, GLenum,const void*, GLuint, GLsizei, GLfloat*)!"
Global glGetPathParameterfvNV(name_:Int,param_:Int,value_:Float Ptr)="void __glewGetPathParameterfvNV( GLuint, GLenum, GLfloat*)!"
Global glGetPathParameterivNV(name_:Int,param_:Int,value_:Int Ptr)="void __glewGetPathParameterivNV( GLuint, GLenum, GLint*)!"
Global glGetPathSpacingNV(pathListMode_:Int,numPaths_:Int,pathNameType_:Int,paths_:Byte Ptr,pathBase_:Int,advanceScale_:Float,kerningScale_:Float,transformType_:Int,returnedSpacing_:Float Ptr)="void __glewGetPathSpacingNV( GLenum, GLsizei, GLenum,const void*, GLuint, GLfloat, GLfloat, GLenum, GLfloat*)!"
Global glGetPathTexGenfvNV(texCoordSet_:Int,pname_:Int,value_:Float Ptr)="void __glewGetPathTexGenfvNV( GLenum, GLenum, GLfloat*)!"
Global glGetPathTexGenivNV(texCoordSet_:Int,pname_:Int,value_:Int Ptr)="void __glewGetPathTexGenivNV( GLenum, GLenum, GLint*)!"
Global glInterpolatePathsNV(resultPath_:Int,pathA_:Int,pathB_:Int,weight_:Float)="void __glewInterpolatePathsNV( GLuint, GLuint, GLuint, GLfloat)!"
Global glIsPathNV:Byte(path_:Int)="GLboolean __glewIsPathNV( GLuint)!"
Global glIsPointInFillPathNV:Byte(path_:Int,mask_:Int,x_:Float,y_:Float)="GLboolean __glewIsPointInFillPathNV( GLuint, GLuint, GLfloat, GLfloat)!"
Global glIsPointInStrokePathNV:Byte(path_:Int,x_:Float,y_:Float)="GLboolean __glewIsPointInStrokePathNV( GLuint, GLfloat, GLfloat)!"
Global glPathColorGenNV(color_:Int,genMode_:Int,colorFormat_:Int,coeffs_:Float Ptr)="void __glewPathColorGenNV( GLenum, GLenum, GLenum,const GLfloat*)!"
Global glPathCommandsNV(path_:Int,numCommands_:Int,commands_:Byte Ptr,numCoords_:Int,coordType_:Int,coords_:Byte Ptr)="void __glewPathCommandsNV( GLuint, GLsizei,const GLubyte*, GLsizei, GLenum,const void*)!"
Global glPathCoordsNV(path_:Int,numCoords_:Int,coordType_:Int,coords_:Byte Ptr)="void __glewPathCoordsNV( GLuint, GLsizei, GLenum,const void*)!"
Global glPathCoverDepthFuncNV(zfunc_:Int)="void __glewPathCoverDepthFuncNV( GLenum)!"
Global glPathDashArrayNV(path_:Int,dashCount_:Int,dashArray_:Float Ptr)="void __glewPathDashArrayNV( GLuint, GLsizei,const GLfloat*)!"
Global glPathFogGenNV(genMode_:Int)="void __glewPathFogGenNV( GLenum)!"
Global glPathGlyphRangeNV(firstPathName_:Int,fontTarget_:Int,fontName_:Byte Ptr,fontStyle_:Int,firstGlyph_:Int,numGlyphs_:Int,handleMissingGlyphs_:Int,pathParameterTemplate_:Int,emScale_:Float)="void __glewPathGlyphRangeNV( GLuint, GLenum,const void*, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat)!"
Global glPathGlyphsNV(firstPathName_:Int,fontTarget_:Int,fontName_:Byte Ptr,fontStyle_:Int,numGlyphs_:Int,type_:Int,charcodes_:Byte Ptr,handleMissingGlyphs_:Int,pathParameterTemplate_:Int,emScale_:Float)="void __glewPathGlyphsNV( GLuint, GLenum,const void*, GLbitfield, GLsizei, GLenum,const void*, GLenum, GLuint, GLfloat)!"
Global glPathParameterfNV(path_:Int,pname_:Int,value_:Float)="void __glewPathParameterfNV( GLuint, GLenum, GLfloat)!"
Global glPathParameterfvNV(path_:Int,pname_:Int,value_:Float Ptr)="void __glewPathParameterfvNV( GLuint, GLenum,const GLfloat*)!"
Global glPathParameteriNV(path_:Int,pname_:Int,value_:Int)="void __glewPathParameteriNV( GLuint, GLenum, GLint)!"
Global glPathParameterivNV(path_:Int,pname_:Int,value_:Int Ptr)="void __glewPathParameterivNV( GLuint, GLenum,const GLint*)!"
Global glPathStencilDepthOffsetNV(factor_:Float,units_:Float)="void __glewPathStencilDepthOffsetNV( GLfloat, GLfloat)!"
Global glPathStencilFuncNV(func_:Int,ref_:Int,mask_:Int)="void __glewPathStencilFuncNV( GLenum, GLint, GLuint)!"
Global glPathStringNV(path_:Int,format_:Int,length_:Int,pathString_:Byte Ptr)="void __glewPathStringNV( GLuint, GLenum, GLsizei,const void*)!"
Global glPathSubCommandsNV(path_:Int,commandStart_:Int,commandsToDelete_:Int,numCommands_:Int,commands_:Byte Ptr,numCoords_:Int,coordType_:Int,coords_:Byte Ptr)="void __glewPathSubCommandsNV( GLuint, GLsizei, GLsizei, GLsizei,const GLubyte*, GLsizei, GLenum,const void*)!"
Global glPathSubCoordsNV(path_:Int,coordStart_:Int,numCoords_:Int,coordType_:Int,coords_:Byte Ptr)="void __glewPathSubCoordsNV( GLuint, GLsizei, GLsizei, GLenum,const void*)!"
Global glPathTexGenNV(texCoordSet_:Int,genMode_:Int,components_:Int,coeffs_:Float Ptr)="void __glewPathTexGenNV( GLenum, GLenum, GLint,const GLfloat*)!"
Global glPointAlongPathNV:Byte(path_:Int,startSegment_:Int,numSegments_:Int,distance_:Float,x_:Float Ptr,y_:Float Ptr,tangentX_:Float Ptr,tangentY_:Float Ptr)="GLboolean __glewPointAlongPathNV( GLuint, GLsizei, GLsizei, GLfloat, GLfloat*, GLfloat*, GLfloat*, GLfloat*)!"
Global glStencilFillPathInstancedNV(numPaths_:Int,pathNameType_:Int,paths_:Byte Ptr,pathBase_:Int,fillMode_:Int,mask_:Int,transformType_:Int,transformValues_:Float Ptr)="void __glewStencilFillPathInstancedNV( GLsizei, GLenum,const void*, GLuint, GLenum, GLuint, GLenum,const GLfloat*)!"
Global glStencilFillPathNV(path_:Int,fillMode_:Int,mask_:Int)="void __glewStencilFillPathNV( GLuint, GLenum, GLuint)!"
Global glStencilStrokePathInstancedNV(numPaths_:Int,pathNameType_:Int,paths_:Byte Ptr,pathBase_:Int,reference_:Int,mask_:Int,transformType_:Int,transformValues_:Float Ptr)="void __glewStencilStrokePathInstancedNV( GLsizei, GLenum,const void*, GLuint, GLint, GLuint, GLenum,const GLfloat*)!"
Global glStencilStrokePathNV(path_:Int,reference_:Int,mask_:Int)="void __glewStencilStrokePathNV( GLuint, GLint, GLuint)!"
Global glTransformPathNV(resultPath_:Int,srcPath_:Int,transformType_:Int,transformValues_:Float Ptr)="void __glewTransformPathNV( GLuint, GLuint, GLenum,const GLfloat*)!"
Global glWeightPathsNV(resultPath_:Int,numPaths_:Int,paths_:Int Ptr,weights_:Float Ptr)="void __glewWeightPathsNV( GLuint, GLsizei,const GLuint,const GLfloat)!"
Const GL_NV_pixel_data_range=1
Const GL_WRITE_PIXEL_DATA_RANGE_NV=$8878
Const GL_READ_PIXEL_DATA_RANGE_NV=$8879
Const GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV=$887A
Const GL_READ_PIXEL_DATA_RANGE_LENGTH_NV=$887B
Const GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV=$887C
Const GL_READ_PIXEL_DATA_RANGE_POINTER_NV=$887D
Global glFlushPixelDataRangeNV(target_:Int)="void __glewFlushPixelDataRangeNV( GLenum)!"
Global glPixelDataRangeNV(target_:Int,length_:Int,pointer_:Byte Ptr)="void __glewPixelDataRangeNV( GLenum, GLsizei, void*)!"
Const GL_NV_point_sprite=1
Const GL_POINT_SPRITE_NV=$8861
Const GL_COORD_REPLACE_NV=$8862
Const GL_POINT_SPRITE_R_MODE_NV=$8863
Global glPointParameteriNV(pname_:Int,param_:Int)="void __glewPointParameteriNV( GLenum, GLint)!"
Global glPointParameterivNV(pname_:Int,params_:Int Ptr)="void __glewPointParameterivNV( GLenum,const GLint*)!"
Const GL_NV_present_video=1
Const GL_FRAME_NV=$8E26
Const GL_FIELDS_NV=$8E27
Const GL_CURRENT_TIME_NV=$8E28
Const GL_NUM_FILL_STREAMS_NV=$8E29
Const GL_PRESENT_TIME_NV=$8E2A
Const GL_PRESENT_DURATION_NV=$8E2B
Global glGetVideoi64vNV(video_slot_:Int,pname_:Int,params_:Long Ptr)="void __glewGetVideoi64vNV( GLuint, GLenum, GLint64EXT*)!"
Global glGetVideoivNV(video_slot_:Int,pname_:Int,params_:Int Ptr)="void __glewGetVideoivNV( GLuint, GLenum, GLint*)!"
Global glGetVideoui64vNV(video_slot_:Int,pname_:Int,params_:Long Ptr)="void __glewGetVideoui64vNV( GLuint, GLenum, GLuint64EXT*)!"
Global glGetVideouivNV(video_slot_:Int,pname_:Int,params_:Int Ptr)="void __glewGetVideouivNV( GLuint, GLenum, GLuint*)!"
Global glPresentFrameDualFillNV(video_slot_:Int,minPresentTime_:Long,beginPresentTimeId_:Int,presentDurationId_:Int,type_:Int,target0_:Int,fill0_:Int,target1_:Int,fill1_:Int,target2_:Int,fill2_:Int,target3_:Int,fill3_:Int)="void __glewPresentFrameDualFillNV( GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint)!"
Global glPresentFrameKeyedNV(video_slot_:Int,minPresentTime_:Long,beginPresentTimeId_:Int,presentDurationId_:Int,type_:Int,target0_:Int,fill0_:Int,key0_:Int,target1_:Int,fill1_:Int,key1_:Int)="void __glewPresentFrameKeyedNV( GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint)!"
Const GL_NV_primitive_restart=1
Const GL_PRIMITIVE_RESTART_NV=$8558
Const GL_PRIMITIVE_RESTART_INDEX_NV=$8559
Global glPrimitiveRestartIndexNV(index_:Int)="void __glewPrimitiveRestartIndexNV( GLuint)!"
Global glPrimitiveRestartNV()="void __glewPrimitiveRestartNV( void)!"
Const GL_NV_register_combiners=1
Const GL_REGISTER_COMBINERS_NV=$8522
Const GL_VARIABLE_A_NV=$8523
Const GL_VARIABLE_B_NV=$8524
Const GL_VARIABLE_C_NV=$8525
Const GL_VARIABLE_D_NV=$8526
Const GL_VARIABLE_E_NV=$8527
Const GL_VARIABLE_F_NV=$8528
Const GL_VARIABLE_G_NV=$8529
Const GL_CONSTANT_COLOR0_NV=$852A
Const GL_CONSTANT_COLOR1_NV=$852B
Const GL_PRIMARY_COLOR_NV=$852C
Const GL_SECONDARY_COLOR_NV=$852D
Const GL_SPARE0_NV=$852E
Const GL_SPARE1_NV=$852F
Const GL_DISCARD_NV=$8530
Const GL_E_TIMES_F_NV=$8531
Const GL_SPARE0_PLUS_SECONDARY_COLOR_NV=$8532
Const GL_UNSIGNED_IDENTITY_NV=$8536
Const GL_UNSIGNED_INVERT_NV=$8537
Const GL_EXPAND_NORMAL_NV=$8538
Const GL_EXPAND_NEGATE_NV=$8539
Const GL_HALF_BIAS_NORMAL_NV=$853A
Const GL_HALF_BIAS_NEGATE_NV=$853B
Const GL_SIGNED_IDENTITY_NV=$853C
Const GL_SIGNED_NEGATE_NV=$853D
Const GL_SCALE_BY_TWO_NV=$853E
Const GL_SCALE_BY_FOUR_NV=$853F
Const GL_SCALE_BY_ONE_HALF_NV=$8540
Const GL_BIAS_BY_NEGATIVE_ONE_HALF_NV=$8541
Const GL_COMBINER_INPUT_NV=$8542
Const GL_COMBINER_MAPPING_NV=$8543
Const GL_COMBINER_COMPONENT_USAGE_NV=$8544
Const GL_COMBINER_AB_DOT_PRODUCT_NV=$8545
Const GL_COMBINER_CD_DOT_PRODUCT_NV=$8546
Const GL_COMBINER_MUX_SUM_NV=$8547
Const GL_COMBINER_SCALE_NV=$8548
Const GL_COMBINER_BIAS_NV=$8549
Const GL_COMBINER_AB_OUTPUT_NV=$854A
Const GL_COMBINER_CD_OUTPUT_NV=$854B
Const GL_COMBINER_SUM_OUTPUT_NV=$854C
Const GL_MAX_GENERAL_COMBINERS_NV=$854D
Const GL_NUM_GENERAL_COMBINERS_NV=$854E
Const GL_COLOR_SUM_CLAMP_NV=$854F
Const GL_COMBINER0_NV=$8550
Const GL_COMBINER1_NV=$8551
Const GL_COMBINER2_NV=$8552
Const GL_COMBINER3_NV=$8553
Const GL_COMBINER4_NV=$8554
Const GL_COMBINER5_NV=$8555
Const GL_COMBINER6_NV=$8556
Const GL_COMBINER7_NV=$8557
Global glCombinerInputNV(stage_:Int,portion_:Int,variable_:Int,input_:Int,mapping_:Int,componentUsage_:Int)="void __glewCombinerInputNV( GLenum, GLenum, GLenum, GLenum, GLenum, GLenum)!"
Global glCombinerOutputNV(stage_:Int,portion_:Int,abOutput_:Int,cdOutput_:Int,sumOutput_:Int,scale_:Int,bias_:Int,abDotProduct_:Byte,cdDotProduct_:Byte,muxSum_:Byte)="void __glewCombinerOutputNV( GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean)!"
Global glCombinerParameterfNV(pname_:Int,param_:Float)="void __glewCombinerParameterfNV( GLenum, GLfloat)!"
Global glCombinerParameterfvNV(pname_:Int,params_:Float Ptr)="void __glewCombinerParameterfvNV( GLenum,const GLfloat*)!"
Global glCombinerParameteriNV(pname_:Int,param_:Int)="void __glewCombinerParameteriNV( GLenum, GLint)!"
Global glCombinerParameterivNV(pname_:Int,params_:Int Ptr)="void __glewCombinerParameterivNV( GLenum,const GLint*)!"
Global glFinalCombinerInputNV(variable_:Int,input_:Int,mapping_:Int,componentUsage_:Int)="void __glewFinalCombinerInputNV( GLenum, GLenum, GLenum, GLenum)!"
Global glGetCombinerInputParameterfvNV(stage_:Int,portion_:Int,variable_:Int,pname_:Int,params_:Float Ptr)="void __glewGetCombinerInputParameterfvNV( GLenum, GLenum, GLenum, GLenum, GLfloat*)!"
Global glGetCombinerInputParameterivNV(stage_:Int,portion_:Int,variable_:Int,pname_:Int,params_:Int Ptr)="void __glewGetCombinerInputParameterivNV( GLenum, GLenum, GLenum, GLenum, GLint*)!"
Global glGetCombinerOutputParameterfvNV(stage_:Int,portion_:Int,pname_:Int,params_:Float Ptr)="void __glewGetCombinerOutputParameterfvNV( GLenum, GLenum, GLenum, GLfloat*)!"
Global glGetCombinerOutputParameterivNV(stage_:Int,portion_:Int,pname_:Int,params_:Int Ptr)="void __glewGetCombinerOutputParameterivNV( GLenum, GLenum, GLenum, GLint*)!"
Global glGetFinalCombinerInputParameterfvNV(variable_:Int,pname_:Int,params_:Float Ptr)="void __glewGetFinalCombinerInputParameterfvNV( GLenum, GLenum, GLfloat*)!"
Global glGetFinalCombinerInputParameterivNV(variable_:Int,pname_:Int,params_:Int Ptr)="void __glewGetFinalCombinerInputParameterivNV( GLenum, GLenum, GLint*)!"
Const GL_NV_register_combiners2=1
Const GL_PER_STAGE_CONSTANTS_NV=$8535
Global glCombinerStageParameterfvNV(stage_:Int,pname_:Int,params_:Float Ptr)="void __glewCombinerStageParameterfvNV( GLenum, GLenum,const GLfloat*)!"
Global glGetCombinerStageParameterfvNV(stage_:Int,pname_:Int,params_:Float Ptr)="void __glewGetCombinerStageParameterfvNV( GLenum, GLenum, GLfloat*)!"
Const GL_NV_shader_atomic_counters=1
Const GL_NV_shader_atomic_float=1
Const GL_NV_shader_atomic_int64=1
Const GL_NV_shader_buffer_load=1
Const GL_BUFFER_GPU_ADDRESS_NV=$8F1D
Const GL_GPU_ADDRESS_NV=$8F34
Const GL_MAX_SHADER_BUFFER_ADDRESS_NV=$8F35
Global glGetBufferParameterui64vNV(target_:Int,pname_:Int,params_:Long Ptr)="void __glewGetBufferParameterui64vNV( GLenum, GLenum, GLuint64EXT*)!"
Global glGetIntegerui64vNV(value_:Int,result_:Long Ptr)="void __glewGetIntegerui64vNV( GLenum, GLuint64EXT*)!"
Global glGetNamedBufferParameterui64vNV(buffer_:Int,pname_:Int,params_:Long Ptr)="void __glewGetNamedBufferParameterui64vNV( GLuint, GLenum, GLuint64EXT*)!"
Global glIsBufferResidentNV:Byte(target_:Int)="GLboolean __glewIsBufferResidentNV( GLenum)!"
Global glIsNamedBufferResidentNV:Byte(buffer_:Int)="GLboolean __glewIsNamedBufferResidentNV( GLuint)!"
Global glMakeBufferNonResidentNV(target_:Int)="void __glewMakeBufferNonResidentNV( GLenum)!"
Global glMakeBufferResidentNV(target_:Int,access_:Int)="void __glewMakeBufferResidentNV( GLenum, GLenum)!"
Global glMakeNamedBufferNonResidentNV(buffer_:Int)="void __glewMakeNamedBufferNonResidentNV( GLuint)!"
Global glMakeNamedBufferResidentNV(buffer_:Int,access_:Int)="void __glewMakeNamedBufferResidentNV( GLuint, GLenum)!"
Global glProgramUniformui64NV(program_:Int,location_:Int,value_:Long)="void __glewProgramUniformui64NV( GLuint, GLint, GLuint64EXT)!"
Global glProgramUniformui64vNV(program_:Int,location_:Int,count_:Int,value_:Long Ptr)="void __glewProgramUniformui64vNV( GLuint, GLint, GLsizei,const GLuint64EXT*)!"
Global glUniformui64NV(location_:Int,value_:Long)="void __glewUniformui64NV( GLint, GLuint64EXT)!"
Global glUniformui64vNV(location_:Int,count_:Int,value_:Long Ptr)="void __glewUniformui64vNV( GLint, GLsizei,const GLuint64EXT*)!"
Const GL_NV_shader_storage_buffer_object=1
Const GL_NV_shader_thread_group=1
Const GL_WARP_SIZE_NV=$9339
Const GL_WARPS_PER_SM_NV=$933A
Const GL_SM_COUNT_NV=$933B
Const GL_NV_shader_thread_shuffle=1
Const GL_NV_tessellation_program5=1
Const GL_MAX_PROGRAM_PATCH_ATTRIBS_NV=$86D8
Const GL_TESS_CONTROL_PROGRAM_NV=$891E
Const GL_TESS_EVALUATION_PROGRAM_NV=$891F
Const GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV=$8C74
Const GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV=$8C75
Const GL_NV_texgen_emboss=1
Const GL_EMBOSS_LIGHT_NV=$855D
Const GL_EMBOSS_CONSTANT_NV=$855E
Const GL_EMBOSS_MAP_NV=$855F
Const GL_NV_texgen_reflection=1
Const GL_NORMAL_MAP_NV=$8511
Const GL_REFLECTION_MAP_NV=$8512
Const GL_NV_texture_barrier=1
Global glTextureBarrierNV()="void __glewTextureBarrierNV( void)!"
Const GL_NV_texture_compression_vtc=1
Const GL_NV_texture_env_combine4=1
Const GL_COMBINE4_NV=$8503
Const GL_SOURCE3_RGB_NV=$8583
Const GL_SOURCE3_ALPHA_NV=$858B
Const GL_OPERAND3_RGB_NV=$8593
Const GL_OPERAND3_ALPHA_NV=$859B
Const GL_NV_texture_expand_normal=1
Const GL_TEXTURE_UNSIGNED_REMAP_MODE_NV=$888F
Const GL_NV_texture_multisample=1
Const GL_TEXTURE_COVERAGE_SAMPLES_NV=$9045
Const GL_TEXTURE_COLOR_SAMPLES_NV=$9046
Global glTexImage2DMultisampleCoverageNV(target_:Int,coverageSamples_:Int,colorSamples_:Int,internalFormat_:Int,width_:Int,height_:Int,fixedSampleLocations_:Byte)="void __glewTexImage2DMultisampleCoverageNV( GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean)!"
Global glTexImage3DMultisampleCoverageNV(target_:Int,coverageSamples_:Int,colorSamples_:Int,internalFormat_:Int,width_:Int,height_:Int,depth_:Int,fixedSampleLocations_:Byte)="void __glewTexImage3DMultisampleCoverageNV( GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean)!"
Global glTextureImage2DMultisampleCoverageNV(texture_:Int,target_:Int,coverageSamples_:Int,colorSamples_:Int,internalFormat_:Int,width_:Int,height_:Int,fixedSampleLocations_:Byte)="void __glewTextureImage2DMultisampleCoverageNV( GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean)!"
Global glTextureImage2DMultisampleNV(texture_:Int,target_:Int,samples_:Int,internalFormat_:Int,width_:Int,height_:Int,fixedSampleLocations_:Byte)="void __glewTextureImage2DMultisampleNV( GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean)!"
Global glTextureImage3DMultisampleCoverageNV(texture_:Int,target_:Int,coverageSamples_:Int,colorSamples_:Int,internalFormat_:Int,width_:Int,height_:Int,depth_:Int,fixedSampleLocations_:Byte)="void __glewTextureImage3DMultisampleCoverageNV( GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean)!"
Global glTextureImage3DMultisampleNV(texture_:Int,target_:Int,samples_:Int,internalFormat_:Int,width_:Int,height_:Int,depth_:Int,fixedSampleLocations_:Byte)="void __glewTextureImage3DMultisampleNV( GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean)!"
Const GL_NV_texture_rectangle=1
Const GL_TEXTURE_RECTANGLE_NV=$84F5
Const GL_TEXTURE_BINDING_RECTANGLE_NV=$84F6
Const GL_PROXY_TEXTURE_RECTANGLE_NV=$84F7
Const GL_MAX_RECTANGLE_TEXTURE_SIZE_NV=$84F8
Const GL_NV_texture_shader=1
Const GL_OFFSET_TEXTURE_RECTANGLE_NV=$864C
Const GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV=$864D
Const GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV=$864E
Const GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV=$86D9
Const GL_UNSIGNED_INT_S8_S8_8_8_NV=$86DA
Const GL_UNSIGNED_INT_8_8_S8_S8_REV_NV=$86DB
Const GL_DSDT_MAG_INTENSITY_NV=$86DC
Const GL_SHADER_CONSISTENT_NV=$86DD
Const GL_TEXTURE_SHADER_NV=$86DE
Const GL_SHADER_OPERATION_NV=$86DF
Const GL_CULL_MODES_NV=$86E0
Const GL_OFFSET_TEXTURE_2D_MATRIX_NV=$86E1
Const GL_OFFSET_TEXTURE_MATRIX_NV=$86E1
Const GL_OFFSET_TEXTURE_2D_SCALE_NV=$86E2
Const GL_OFFSET_TEXTURE_SCALE_NV=$86E2
Const GL_OFFSET_TEXTURE_2D_BIAS_NV=$86E3
Const GL_OFFSET_TEXTURE_BIAS_NV=$86E3
Const GL_PREVIOUS_TEXTURE_INPUT_NV=$86E4
Const GL_CONST_EYE_NV=$86E5
Const GL_PASS_THROUGH_NV=$86E6
Const GL_CULL_FRAGMENT_NV=$86E7
Const GL_OFFSET_TEXTURE_2D_NV=$86E8
Const GL_DEPENDENT_AR_TEXTURE_2D_NV=$86E9
Const GL_DEPENDENT_GB_TEXTURE_2D_NV=$86EA
Const GL_DOT_PRODUCT_NV=$86EC
Const GL_DOT_PRODUCT_DEPTH_REPLACE_NV=$86ED
Const GL_DOT_PRODUCT_TEXTURE_2D_NV=$86EE
Const GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV=$86F0
Const GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV=$86F1
Const GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV=$86F2
Const GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV=$86F3
Const GL_HILO_NV=$86F4
Const GL_DSDT_NV=$86F5
Const GL_DSDT_MAG_NV=$86F6
Const GL_DSDT_MAG_VIB_NV=$86F7
Const GL_HILO16_NV=$86F8
Const GL_SIGNED_HILO_NV=$86F9
Const GL_SIGNED_HILO16_NV=$86FA
Const GL_SIGNED_RGBA_NV=$86FB
Const GL_SIGNED_RGBA8_NV=$86FC
Const GL_SIGNED_RGB_NV=$86FE
Const GL_SIGNED_RGB8_NV=$86FF
Const GL_SIGNED_LUMINANCE_NV=$8701
Const GL_SIGNED_LUMINANCE8_NV=$8702
Const GL_SIGNED_LUMINANCE_ALPHA_NV=$8703
Const GL_SIGNED_LUMINANCE8_ALPHA8_NV=$8704
Const GL_SIGNED_ALPHA_NV=$8705
Const GL_SIGNED_ALPHA8_NV=$8706
Const GL_SIGNED_INTENSITY_NV=$8707
Const GL_SIGNED_INTENSITY8_NV=$8708
Const GL_DSDT8_NV=$8709
Const GL_DSDT8_MAG8_NV=$870A
Const GL_DSDT8_MAG8_INTENSITY8_NV=$870B
Const GL_SIGNED_RGB_UNSIGNED_ALPHA_NV=$870C
Const GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV=$870D
Const GL_HI_SCALE_NV=$870E
Const GL_LO_SCALE_NV=$870F
Const GL_DS_SCALE_NV=$8710
Const GL_DT_SCALE_NV=$8711
Const GL_MAGNITUDE_SCALE_NV=$8712
Const GL_VIBRANCE_SCALE_NV=$8713
Const GL_HI_BIAS_NV=$8714
Const GL_LO_BIAS_NV=$8715
Const GL_DS_BIAS_NV=$8716
Const GL_DT_BIAS_NV=$8717
Const GL_MAGNITUDE_BIAS_NV=$8718
Const GL_VIBRANCE_BIAS_NV=$8719
Const GL_TEXTURE_BORDER_VALUES_NV=$871A
Const GL_TEXTURE_HI_SIZE_NV=$871B
Const GL_TEXTURE_LO_SIZE_NV=$871C
Const GL_TEXTURE_DS_SIZE_NV=$871D
Const GL_TEXTURE_DT_SIZE_NV=$871E
Const GL_TEXTURE_MAG_SIZE_NV=$871F
Const GL_NV_texture_shader2=1
Const GL_DOT_PRODUCT_TEXTURE_3D_NV=$86EF
Const GL_NV_texture_shader3=1
Const GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV=$8850
Const GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV=$8851
Const GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV=$8852
Const GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV=$8853
Const GL_OFFSET_HILO_TEXTURE_2D_NV=$8854
Const GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV=$8855
Const GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV=$8856
Const GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV=$8857
Const GL_DEPENDENT_HILO_TEXTURE_2D_NV=$8858
Const GL_DEPENDENT_RGB_TEXTURE_3D_NV=$8859
Const GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV=$885A
Const GL_DOT_PRODUCT_PASS_THROUGH_NV=$885B
Const GL_DOT_PRODUCT_TEXTURE_1D_NV=$885C
Const GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV=$885D
Const GL_HILO8_NV=$885E
Const GL_SIGNED_HILO8_NV=$885F
Const GL_FORCE_BLUE_TO_ONE_NV=$8860
Const GL_NV_transform_feedback=1
Const GL_BACK_PRIMARY_COLOR_NV=$8C77
Const GL_BACK_SECONDARY_COLOR_NV=$8C78
Const GL_TEXTURE_COORD_NV=$8C79
Const GL_CLIP_DISTANCE_NV=$8C7A
Const GL_VERTEX_ID_NV=$8C7B
Const GL_PRIMITIVE_ID_NV=$8C7C
Const GL_GENERIC_ATTRIB_NV=$8C7D
Const GL_TRANSFORM_FEEDBACK_ATTRIBS_NV=$8C7E
Const GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV=$8C7F
Const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV=$8C80
Const GL_ACTIVE_VARYINGS_NV=$8C81
Const GL_ACTIVE_VARYING_MAX_LENGTH_NV=$8C82
Const GL_TRANSFORM_FEEDBACK_VARYINGS_NV=$8C83
Const GL_TRANSFORM_FEEDBACK_BUFFER_START_NV=$8C84
Const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV=$8C85
Const GL_TRANSFORM_FEEDBACK_RECORD_NV=$8C86
Const GL_PRIMITIVES_GENERATED_NV=$8C87
Const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV=$8C88
Const GL_RASTERIZER_DISCARD_NV=$8C89
Const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV=$8C8A
Const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV=$8C8B
Const GL_INTERLEAVED_ATTRIBS_NV=$8C8C
Const GL_SEPARATE_ATTRIBS_NV=$8C8D
Const GL_TRANSFORM_FEEDBACK_BUFFER_NV=$8C8E
Const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV=$8C8F
Global glActiveVaryingNV(program_:Int,name_:Byte Ptr)="void __glewActiveVaryingNV( GLuint,const GLchar*)!"
Global glBeginTransformFeedbackNV(primitiveMode_:Int)="void __glewBeginTransformFeedbackNV( GLenum)!"
Global glBindBufferBaseNV(target_:Int,index_:Int,buffer_:Int)="void __glewBindBufferBaseNV( GLenum, GLuint, GLuint)!"
Global glBindBufferOffsetNV(target_:Int,index_:Int,buffer_:Int,offset_:Int)="void __glewBindBufferOffsetNV( GLenum, GLuint, GLuint, GLintptr)!"
Global glBindBufferRangeNV(target_:Int,index_:Int,buffer_:Int,offset_:Int,size_:Int)="void __glewBindBufferRangeNV( GLenum, GLuint, GLuint, GLintptr, GLsizeiptr)!"
Global glEndTransformFeedbackNV()="void __glewEndTransformFeedbackNV( void)!"
Global glGetActiveVaryingNV(program_:Int,index_:Int,bufSize_:Int,length_:Int Ptr,size_:Int Ptr,type_:Int Ptr,name_:Byte Ptr)="void __glewGetActiveVaryingNV( GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*)!"

End Extern
