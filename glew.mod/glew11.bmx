'
' NOTE : Generated file. Do not edit. Your changes may be lost on the next update!
'        Generated by g2bmx on 24 Mar 2018
'
Strict

Import "GL/glew.h"

Extern "Os"

Global glColorPointervINTEL(size_:Int,type_:Int,pointer_:Byte Ptr Ptr)="void __glewColorPointervINTEL( GLint, GLenum,const void**)!"
Global glNormalPointervINTEL(type_:Int,pointer_:Byte Ptr Ptr)="void __glewNormalPointervINTEL( GLenum,const void**)!"
Global glTexCoordPointervINTEL(size_:Int,type_:Int,pointer_:Byte Ptr Ptr)="void __glewTexCoordPointervINTEL( GLint, GLenum,const void**)!"
Global glVertexPointervINTEL(size_:Int,type_:Int,pointer_:Byte Ptr Ptr)="void __glewVertexPointervINTEL( GLint, GLenum,const void**)!"
Const GL_INTEL_performance_query=1
Const GL_PERFQUERY_SINGLE_CONTEXT_INTEL=$0000
Const GL_PERFQUERY_GLOBAL_CONTEXT_INTEL=$0001
Const GL_PERFQUERY_DONOT_FLUSH_INTEL=$83F9
Const GL_PERFQUERY_FLUSH_INTEL=$83FA
Const GL_PERFQUERY_WAIT_INTEL=$83FB
Const GL_PERFQUERY_COUNTER_EVENT_INTEL=$94F0
Const GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL=$94F1
Const GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL=$94F2
Const GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL=$94F3
Const GL_PERFQUERY_COUNTER_RAW_INTEL=$94F4
Const GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL=$94F5
Const GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL=$94F8
Const GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL=$94F9
Const GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL=$94FA
Const GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL=$94FB
Const GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL=$94FC
Const GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL=$94FD
Const GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL=$94FE
Const GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL=$94FF
Const GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL=$9500
Global glBeginPerfQueryINTEL(queryHandle_:Int)="void __glewBeginPerfQueryINTEL( GLuint)!"
Global glCreatePerfQueryINTEL(queryId_:Int,queryHandle_:Int Ptr)="void __glewCreatePerfQueryINTEL( GLuint, GLuint*)!"
Global glDeletePerfQueryINTEL(queryHandle_:Int)="void __glewDeletePerfQueryINTEL( GLuint)!"
Global glEndPerfQueryINTEL(queryHandle_:Int)="void __glewEndPerfQueryINTEL( GLuint)!"
Global glGetFirstPerfQueryIdINTEL(queryId_:Int Ptr)="void __glewGetFirstPerfQueryIdINTEL( GLuint*)!"
Global glGetNextPerfQueryIdINTEL(queryId_:Int,nextQueryId_:Int Ptr)="void __glewGetNextPerfQueryIdINTEL( GLuint, GLuint*)!"
Global glGetPerfCounterInfoINTEL(queryId_:Int,counterId_:Int,counterNameLength_:Int,counterName_:Byte Ptr,counterDescLength_:Int,counterDesc_:Byte Ptr,counterOffset_:Int Ptr,counterDataSize_:Int Ptr,counterTypeEnum_:Int Ptr,counterDataTypeEnum_:Int Ptr,rawCounterMaxValue_:Long Ptr)="void __glewGetPerfCounterInfoINTEL( GLuint, GLuint, GLuint, GLchar*, GLuint, GLchar*, GLuint*, GLuint*, GLuint*, GLuint*, GLuint64*)!"
Global glGetPerfQueryDataINTEL(queryHandle_:Int,flags_:Int,dataSize_:Int,data_:Byte Ptr,bytesWritten_:Int Ptr)="void __glewGetPerfQueryDataINTEL( GLuint, GLuint, GLsizei, void*, GLuint*)!"
Global glGetPerfQueryIdByNameINTEL(queryName_:Byte Ptr,queryId_:Int Ptr)="void __glewGetPerfQueryIdByNameINTEL( GLchar*, GLuint*)!"
Global glGetPerfQueryInfoINTEL(queryId_:Int,queryNameLength_:Int,queryName_:Byte Ptr,dataSize_:Int Ptr,noCounters_:Int Ptr,noInstances_:Int Ptr,capsMask_:Int Ptr)="void __glewGetPerfQueryInfoINTEL( GLuint, GLuint, GLchar*, GLuint*, GLuint*, GLuint*, GLuint*)!"
Const GL_INTEL_texture_scissor=1
Global glTexScissorFuncINTEL(target_:Int,lfunc_:Int,hfunc_:Int)="void __glewTexScissorFuncINTEL( GLenum, GLenum, GLenum)!"
Global glTexScissorINTEL(target_:Int,tlow_:Float,thigh_:Float)="void __glewTexScissorINTEL( GLenum, GLclampf, GLclampf)!"
Const GL_KHR_blend_equation_advanced=1
Const GL_BLEND_ADVANCED_COHERENT_KHR=$9285
Const GL_MULTIPLY_KHR=$9294
Const GL_SCREEN_KHR=$9295
Const GL_OVERLAY_KHR=$9296
Const GL_DARKEN_KHR=$9297
Const GL_LIGHTEN_KHR=$9298
Const GL_COLORDODGE_KHR=$9299
Const GL_COLORBURN_KHR=$929A
Const GL_HARDLIGHT_KHR=$929B
Const GL_SOFTLIGHT_KHR=$929C
Const GL_DIFFERENCE_KHR=$929E
Const GL_EXCLUSION_KHR=$92A0
Const GL_HSL_HUE_KHR=$92AD
Const GL_HSL_SATURATION_KHR=$92AE
Const GL_HSL_COLOR_KHR=$92AF
Const GL_HSL_LUMINOSITY_KHR=$92B0
Global glBlendBarrierKHR()="void __glewBlendBarrierKHR( void)!"
Const GL_KHR_blend_equation_advanced_coherent=1
Const GL_KHR_context_flush_control=1
Const GL_KHR_debug=1
Const GL_CONTEXT_FLAG_DEBUG_BIT=$00000002
Const GL_DEBUG_OUTPUT_SYNCHRONOUS=$8242
Const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH=$8243
Const GL_DEBUG_CALLBACK_FUNCTION=$8244
Const GL_DEBUG_CALLBACK_USER_PARAM=$8245
Const GL_DEBUG_SOURCE_API=$8246
Const GL_DEBUG_SOURCE_WINDOW_SYSTEM=$8247
Const GL_DEBUG_SOURCE_SHADER_COMPILER=$8248
Const GL_DEBUG_SOURCE_THIRD_PARTY=$8249
Const GL_DEBUG_SOURCE_APPLICATION=$824A
Const GL_DEBUG_SOURCE_OTHER=$824B
Const GL_DEBUG_TYPE_ERROR=$824C
Const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR=$824D
Const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR=$824E
Const GL_DEBUG_TYPE_PORTABILITY=$824F
Const GL_DEBUG_TYPE_PERFORMANCE=$8250
Const GL_DEBUG_TYPE_OTHER=$8251
Const GL_DEBUG_TYPE_MARKER=$8268
Const GL_DEBUG_TYPE_PUSH_GROUP=$8269
Const GL_DEBUG_TYPE_POP_GROUP=$826A
Const GL_DEBUG_SEVERITY_NOTIFICATION=$826B
Const GL_MAX_DEBUG_GROUP_STACK_DEPTH=$826C
Const GL_DEBUG_GROUP_STACK_DEPTH=$826D
Const GL_BUFFER=$82E0
Const GL_SHADER=$82E1
Const GL_PROGRAM=$82E2
Const GL_QUERY=$82E3
Const GL_PROGRAM_PIPELINE=$82E4
Const GL_SAMPLER=$82E6
Const GL_DISPLAY_LIST=$82E7
Const GL_MAX_LABEL_LENGTH=$82E8
Const GL_MAX_DEBUG_MESSAGE_LENGTH=$9143
Const GL_MAX_DEBUG_LOGGED_MESSAGES=$9144
Const GL_DEBUG_LOGGED_MESSAGES=$9145
Const GL_DEBUG_SEVERITY_HIGH=$9146
Const GL_DEBUG_SEVERITY_MEDIUM=$9147
Const GL_DEBUG_SEVERITY_LOW=$9148
Const GL_DEBUG_OUTPUT=$92E0
Global glDebugMessageControl(source_:Int,type_:Int,severity_:Int,count_:Int,ids_:Int Ptr,enabled_:Byte)="void __glewDebugMessageControl( GLenum, GLenum, GLenum, GLsizei,const GLuint*, GLboolean)!"
Global glDebugMessageInsert(source_:Int,type_:Int,id_:Int,severity_:Int,length_:Int,buf_:Byte Ptr)="void __glewDebugMessageInsert( GLenum, GLenum, GLuint, GLenum, GLsizei,const GLchar*)!"
Global glGetDebugMessageLog:Int(count_:Int,bufSize_:Int,sources_:Int Ptr,types_:Int Ptr,ids_:Int Ptr,severities_:Int Ptr,lengths_:Int Ptr,messageLog_:Byte Ptr)="GLuint __glewGetDebugMessageLog( GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*)!"
Global glGetObjectLabel(identifier_:Int,name_:Int,bufSize_:Int,length_:Int Ptr,label_:Byte Ptr)="void __glewGetObjectLabel( GLenum, GLuint, GLsizei, GLsizei*, GLchar*)!"
Global glGetObjectPtrLabel(ptr_:Byte Ptr,bufSize_:Int,length_:Int Ptr,label_:Byte Ptr)="void __glewGetObjectPtrLabel( void*, GLsizei, GLsizei*, GLchar*)!"
Global glObjectLabel(identifier_:Int,name_:Int,length_:Int,label_:Byte Ptr)="void __glewObjectLabel( GLenum, GLuint, GLsizei,const GLchar*)!"
Global glObjectPtrLabel(ptr_:Byte Ptr,length_:Int,label_:Byte Ptr)="void __glewObjectPtrLabel( void*, GLsizei,const GLchar*)!"
Global glPopDebugGroup()="void __glewPopDebugGroup( void)!"
Global glPushDebugGroup(source_:Int,id_:Int,length_:Int,message_:Byte Ptr)="void __glewPushDebugGroup( GLenum, GLuint, GLsizei,const GLchar*)!"
Const GL_KHR_no_error=1
Const GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR=$00000008
Const GL_KHR_parallel_shader_compile=1
Const GL_MAX_SHADER_COMPILER_THREADS_KHR=$91B0
Const GL_COMPLETION_STATUS_KHR=$91B1
Global glMaxShaderCompilerThreadsKHR(count_:Int)="void __glewMaxShaderCompilerThreadsKHR( GLuint)!"
Const GL_KHR_robust_buffer_access_behavior=1
Const GL_KHR_robustness=1
Const GL_CONTEXT_LOST=$0507
Const GL_LOSE_CONTEXT_ON_RESET=$8252
Const GL_GUILTY_CONTEXT_RESET=$8253
Const GL_INNOCENT_CONTEXT_RESET=$8254
Const GL_UNKNOWN_CONTEXT_RESET=$8255
Const GL_RESET_NOTIFICATION_STRATEGY=$8256
Const GL_NO_RESET_NOTIFICATION=$8261
Const GL_CONTEXT_ROBUST_ACCESS=$90F3
Global glGetnUniformfv(program_:Int,location_:Int,bufSize_:Int,params_:Float Ptr)="void __glewGetnUniformfv( GLuint, GLint, GLsizei, GLfloat*)!"
Global glGetnUniformiv(program_:Int,location_:Int,bufSize_:Int,params_:Int Ptr)="void __glewGetnUniformiv( GLuint, GLint, GLsizei, GLint*)!"
Global glGetnUniformuiv(program_:Int,location_:Int,bufSize_:Int,params_:Int Ptr)="void __glewGetnUniformuiv( GLuint, GLint, GLsizei, GLuint*)!"
Global glReadnPixels(x_:Int,y_:Int,width_:Int,height_:Int,format_:Int,type_:Int,bufSize_:Int,data_:Byte Ptr)="void __glewReadnPixels( GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*)!"
Const GL_KHR_texture_compression_astc_hdr=1
Const GL_COMPRESSED_RGBA_ASTC_4x4_KHR=$93B0
Const GL_COMPRESSED_RGBA_ASTC_5x4_KHR=$93B1
Const GL_COMPRESSED_RGBA_ASTC_5x5_KHR=$93B2
Const GL_COMPRESSED_RGBA_ASTC_6x5_KHR=$93B3
Const GL_COMPRESSED_RGBA_ASTC_6x6_KHR=$93B4
Const GL_COMPRESSED_RGBA_ASTC_8x5_KHR=$93B5
Const GL_COMPRESSED_RGBA_ASTC_8x6_KHR=$93B6
Const GL_COMPRESSED_RGBA_ASTC_8x8_KHR=$93B7
Const GL_COMPRESSED_RGBA_ASTC_10x5_KHR=$93B8
Const GL_COMPRESSED_RGBA_ASTC_10x6_KHR=$93B9
Const GL_COMPRESSED_RGBA_ASTC_10x8_KHR=$93BA
Const GL_COMPRESSED_RGBA_ASTC_10x10_KHR=$93BB
Const GL_COMPRESSED_RGBA_ASTC_12x10_KHR=$93BC
Const GL_COMPRESSED_RGBA_ASTC_12x12_KHR=$93BD
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=$93D0
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=$93D1
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=$93D2
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=$93D3
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=$93D4
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=$93D5
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=$93D6
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=$93D7
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=$93D8
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=$93D9
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=$93DA
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=$93DB
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=$93DC
Const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=$93DD
Const GL_KHR_texture_compression_astc_ldr=1
Const GL_KHR_texture_compression_astc_sliced_3d=1
Const GL_KTX_buffer_region=1
Const GL_KTX_FRONT_REGION=$0
Const GL_KTX_BACK_REGION=$1
Const GL_KTX_Z_REGION=$2
Const GL_KTX_STENCIL_REGION=$3
Global glBufferRegionEnabled:Int()="GLuint __glewBufferRegionEnabled( void)!"
Global glDeleteBufferRegion(region_:Int)="void __glewDeleteBufferRegion( GLenum)!"
Global glDrawBufferRegion(region_:Int,x_:Int,y_:Int,width_:Int,height_:Int,xDest_:Int,yDest_:Int)="void __glewDrawBufferRegion( GLuint, GLint, GLint, GLsizei, GLsizei, GLint, GLint)!"
Global glNewBufferRegion:Int(region_:Int)="GLuint __glewNewBufferRegion( GLenum)!"
Global glReadBufferRegion(region_:Int,x_:Int,y_:Int,width_:Int,height_:Int)="void __glewReadBufferRegion( GLuint, GLint, GLint, GLsizei, GLsizei)!"
Const GL_MESAX_texture_stack=1
Const GL_TEXTURE_1D_STACK_MESAX=$8759
Const GL_TEXTURE_2D_STACK_MESAX=$875A
Const GL_PROXY_TEXTURE_1D_STACK_MESAX=$875B
Const GL_PROXY_TEXTURE_2D_STACK_MESAX=$875C
Const GL_TEXTURE_1D_STACK_BINDING_MESAX=$875D
Const GL_TEXTURE_2D_STACK_BINDING_MESAX=$875E
Const GL_MESA_pack_invert=1
Const GL_PACK_INVERT_MESA=$8758
Const GL_MESA_resize_buffers=1
Global glResizeBuffersMESA()="void __glewResizeBuffersMESA( void)!"
Const GL_MESA_shader_integer_functions=1
Const GL_MESA_window_pos=1
Global glWindowPos2dMESA(x_:Double,y_:Double)="void __glewWindowPos2dMESA( GLdouble, GLdouble)!"
Global glWindowPos2dvMESA(p_:Double Ptr)="void __glewWindowPos2dvMESA(const GLdouble*)!"
Global glWindowPos2fMESA(x_:Float,y_:Float)="void __glewWindowPos2fMESA( GLfloat, GLfloat)!"
Global glWindowPos2fvMESA(p_:Float Ptr)="void __glewWindowPos2fvMESA(const GLfloat*)!"
Global glWindowPos2iMESA(x_:Int,y_:Int)="void __glewWindowPos2iMESA( GLint, GLint)!"
Global glWindowPos2ivMESA(p_:Int Ptr)="void __glewWindowPos2ivMESA(const GLint*)!"
Global glWindowPos2sMESA(x_:Short,y_:Short)="void __glewWindowPos2sMESA( GLshort, GLshort)!"
Global glWindowPos2svMESA(p_:Short Ptr)="void __glewWindowPos2svMESA(const GLshort*)!"
Global glWindowPos3dMESA(x_:Double,y_:Double,z_:Double)="void __glewWindowPos3dMESA( GLdouble, GLdouble, GLdouble)!"
Global glWindowPos3dvMESA(p_:Double Ptr)="void __glewWindowPos3dvMESA(const GLdouble*)!"
Global glWindowPos3fMESA(x_:Float,y_:Float,z_:Float)="void __glewWindowPos3fMESA( GLfloat, GLfloat, GLfloat)!"
Global glWindowPos3fvMESA(p_:Float Ptr)="void __glewWindowPos3fvMESA(const GLfloat*)!"
Global glWindowPos3iMESA(x_:Int,y_:Int,z_:Int)="void __glewWindowPos3iMESA( GLint, GLint, GLint)!"
Global glWindowPos3ivMESA(p_:Int Ptr)="void __glewWindowPos3ivMESA(const GLint*)!"
Global glWindowPos3sMESA(x_:Short,y_:Short,z_:Short)="void __glewWindowPos3sMESA( GLshort, GLshort, GLshort)!"
Global glWindowPos3svMESA(p_:Short Ptr)="void __glewWindowPos3svMESA(const GLshort*)!"
Global glWindowPos4dMESA(x_:Double,y_:Double,z_:Double,arg3_:Double)="void __glewWindowPos4dMESA( GLdouble, GLdouble, GLdouble, GLdouble)!"
Global glWindowPos4dvMESA(p_:Double Ptr)="void __glewWindowPos4dvMESA(const GLdouble*)!"
Global glWindowPos4fMESA(x_:Float,y_:Float,z_:Float,w_:Float)="void __glewWindowPos4fMESA( GLfloat, GLfloat, GLfloat, GLfloat)!"
Global glWindowPos4fvMESA(p_:Float Ptr)="void __glewWindowPos4fvMESA(const GLfloat*)!"
Global glWindowPos4iMESA(x_:Int,y_:Int,z_:Int,w_:Int)="void __glewWindowPos4iMESA( GLint, GLint, GLint, GLint)!"
Global glWindowPos4ivMESA(p_:Int Ptr)="void __glewWindowPos4ivMESA(const GLint*)!"
Global glWindowPos4sMESA(x_:Short,y_:Short,z_:Short,w_:Short)="void __glewWindowPos4sMESA( GLshort, GLshort, GLshort, GLshort)!"
Global glWindowPos4svMESA(p_:Short Ptr)="void __glewWindowPos4svMESA(const GLshort*)!"
Const GL_MESA_ycbcr_texture=1
Const GL_UNSIGNED_SHORT_8_8_MESA=$85BA
Const GL_UNSIGNED_SHORT_8_8_REV_MESA=$85BB
Const GL_YCBCR_MESA=$8757
Const GL_NVX_blend_equation_advanced_multi_draw_buffers=1
Const GL_NVX_conditional_render=1
Global glBeginConditionalRenderNVX(id_:Int)="void __glewBeginConditionalRenderNVX( GLuint)!"
Global glEndConditionalRenderNVX()="void __glewEndConditionalRenderNVX( void)!"
Const GL_NVX_gpu_memory_info=1
Const GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX=$9047
Const GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX=$9048
Const GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX=$9049
Const GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX=$904A
Const GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX=$904B
Const GL_NVX_linked_gpu_multicast=1
Const GL_LGPU_SEPARATE_STORAGE_BIT_NVX=$0800
Const GL_MAX_LGPU_GPUS_NVX=$92BA
Global glLGPUCopyImageSubDataNVX(sourceGpu_:Int,destinationGpuMask_:Int,srcName_:Int,srcTarget_:Int,srcLevel_:Int,srcX_:Int,srxY_:Int,srcZ_:Int,dstName_:Int,dstTarget_:Int,dstLevel_:Int,dstX_:Int,dstY_:Int,dstZ_:Int,width_:Int,height_:Int,depth_:Int)="void __glewLGPUCopyImageSubDataNVX( GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei)!"
Global glLGPUInterlockNVX()="void __glewLGPUInterlockNVX( void)!"
Global glLGPUNamedBufferSubDataNVX(gpuMask_:Int,buffer_:Int,offset_:Int,size_:Int,data_:Byte Ptr)="void __glewLGPUNamedBufferSubDataNVX( GLbitfield, GLuint, GLintptr, GLsizeiptr,const void*)!"
Const GL_NV_3dvision_settings=1
Const GL_3DVISION_STEREO_NV=$90F4
Const GL_STEREO_SEPARATION_NV=$90F5
Const GL_STEREO_CONVERGENCE_NV=$90F6
Const GL_STEREO_CUTOFF_NV=$90F7
Const GL_STEREO_PROJECTION_NV=$90F8
Const GL_STEREO_PROJECTION_PERSPECTIVE_NV=$90F9
Const GL_STEREO_PROJECTION_ORTHO_NV=$90FA
Global glStereoParameterfNV(pname_:Int,param_:Float)="void __glewStereoParameterfNV( GLenum, GLfloat)!"
Global glStereoParameteriNV(pname_:Int,param_:Int)="void __glewStereoParameteriNV( GLenum, GLint)!"
Const GL_NV_EGL_stream_consumer_external=1
Const GL_TEXTURE_EXTERNAL_OES=$8D65
Const GL_SAMPLER_EXTERNAL_OES=$8D66
Const GL_TEXTURE_BINDING_EXTERNAL_OES=$8D67
Const GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES=$8D68
Const GL_NV_alpha_to_coverage_dither_control=1
Const GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV=$92BF
Const GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV=$934D
Const GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV=$934E
Const GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV=$934F
Const GL_NV_bgr=1
Const GL_BGR_NV=$80E0
Const GL_NV_bindless_multi_draw_indirect=1
Global glMultiDrawArraysIndirectBindlessNV(mode_:Int,indirect_:Byte Ptr,drawCount_:Int,stride_:Int,vertexBufferCount_:Int)="void __glewMultiDrawArraysIndirectBindlessNV( GLenum,const void*, GLsizei, GLsizei, GLint)!"
Global glMultiDrawElementsIndirectBindlessNV(mode_:Int,type_:Int,indirect_:Byte Ptr,drawCount_:Int,stride_:Int,vertexBufferCount_:Int)="void __glewMultiDrawElementsIndirectBindlessNV( GLenum, GLenum,const void*, GLsizei, GLsizei, GLint)!"
Const GL_NV_bindless_multi_draw_indirect_count=1
Global glMultiDrawArraysIndirectBindlessCountNV(mode_:Int,indirect_:Byte Ptr,drawCount_:Int,maxDrawCount_:Int,stride_:Int,vertexBufferCount_:Int)="void __glewMultiDrawArraysIndirectBindlessCountNV( GLenum,const void*, GLintptr, GLsizei, GLsizei, GLint)!"
Global glMultiDrawElementsIndirectBindlessCountNV(mode_:Int,type_:Int,indirect_:Byte Ptr,drawCount_:Int,maxDrawCount_:Int,stride_:Int,vertexBufferCount_:Int)="void __glewMultiDrawElementsIndirectBindlessCountNV( GLenum, GLenum,const void*, GLintptr, GLsizei, GLsizei, GLint)!"
Const GL_NV_bindless_texture=1
Global glGetImageHandleNV:Long(texture_:Int,level_:Int,layered_:Byte,layer_:Int,format_:Int)="GLuint64 __glewGetImageHandleNV( GLuint, GLint, GLboolean, GLint, GLenum)!"
Global glGetTextureHandleNV:Long(texture_:Int)="GLuint64 __glewGetTextureHandleNV( GLuint)!"
Global glGetTextureSamplerHandleNV:Long(texture_:Int,sampler_:Int)="GLuint64 __glewGetTextureSamplerHandleNV( GLuint, GLuint)!"
Global glIsImageHandleResidentNV:Byte(handle_:Long)="GLboolean __glewIsImageHandleResidentNV( GLuint64)!"
Global glIsTextureHandleResidentNV:Byte(handle_:Long)="GLboolean __glewIsTextureHandleResidentNV( GLuint64)!"
Global glMakeImageHandleNonResidentNV(handle_:Long)="void __glewMakeImageHandleNonResidentNV( GLuint64)!"
Global glMakeImageHandleResidentNV(handle_:Long,access_:Int)="void __glewMakeImageHandleResidentNV( GLuint64, GLenum)!"
Global glMakeTextureHandleNonResidentNV(handle_:Long)="void __glewMakeTextureHandleNonResidentNV( GLuint64)!"
Global glMakeTextureHandleResidentNV(handle_:Long)="void __glewMakeTextureHandleResidentNV( GLuint64)!"
Global glProgramUniformHandleui64NV(program_:Int,location_:Int,value_:Long)="void __glewProgramUniformHandleui64NV( GLuint, GLint, GLuint64)!"
Global glProgramUniformHandleui64vNV(program_:Int,location_:Int,count_:Int,values_:Long Ptr)="void __glewProgramUniformHandleui64vNV( GLuint, GLint, GLsizei,const GLuint64*)!"
Global glUniformHandleui64NV(location_:Int,value_:Long)="void __glewUniformHandleui64NV( GLint, GLuint64)!"
Global glUniformHandleui64vNV(location_:Int,count_:Int,value_:Long Ptr)="void __glewUniformHandleui64vNV( GLint, GLsizei,const GLuint64*)!"
Const GL_NV_blend_equation_advanced=1
Const GL_XOR_NV=$1506
Const GL_RED_NV=$1903
Const GL_GREEN_NV=$1904
Const GL_BLUE_NV=$1905
Const GL_BLEND_PREMULTIPLIED_SRC_NV=$9280
Const GL_BLEND_OVERLAP_NV=$9281
Const GL_UNCORRELATED_NV=$9282
Const GL_DISJOINT_NV=$9283
Const GL_CONJOINT_NV=$9284
Const GL_BLEND_ADVANCED_COHERENT_NV=$9285
Const GL_SRC_NV=$9286
Const GL_DST_NV=$9287
Const GL_SRC_OVER_NV=$9288
Const GL_DST_OVER_NV=$9289
Const GL_SRC_IN_NV=$928A
Const GL_DST_IN_NV=$928B
Const GL_SRC_OUT_NV=$928C
Const GL_DST_OUT_NV=$928D
Const GL_SRC_ATOP_NV=$928E
Const GL_DST_ATOP_NV=$928F
Const GL_PLUS_NV=$9291
Const GL_PLUS_DARKER_NV=$9292
Const GL_MULTIPLY_NV=$9294
Const GL_SCREEN_NV=$9295
Const GL_OVERLAY_NV=$9296
Const GL_DARKEN_NV=$9297
Const GL_LIGHTEN_NV=$9298
Const GL_COLORDODGE_NV=$9299
Const GL_COLORBURN_NV=$929A
Const GL_HARDLIGHT_NV=$929B
Const GL_SOFTLIGHT_NV=$929C
Const GL_DIFFERENCE_NV=$929E
Const GL_MINUS_NV=$929F
Const GL_EXCLUSION_NV=$92A0
Const GL_CONTRAST_NV=$92A1
Const GL_INVERT_RGB_NV=$92A3
Const GL_LINEARDODGE_NV=$92A4
Const GL_LINEARBURN_NV=$92A5
Const GL_VIVIDLIGHT_NV=$92A6
Const GL_LINEARLIGHT_NV=$92A7
Const GL_PINLIGHT_NV=$92A8
Const GL_HARDMIX_NV=$92A9
Const GL_HSL_HUE_NV=$92AD
Const GL_HSL_SATURATION_NV=$92AE
Const GL_HSL_COLOR_NV=$92AF
Const GL_HSL_LUMINOSITY_NV=$92B0
Const GL_PLUS_CLAMPED_NV=$92B1
Const GL_PLUS_CLAMPED_ALPHA_NV=$92B2
Const GL_MINUS_CLAMPED_NV=$92B3
Const GL_INVERT_OVG_NV=$92B4
Global glBlendBarrierNV()="void __glewBlendBarrierNV( void)!"
Global glBlendParameteriNV(pname_:Int,value_:Int)="void __glewBlendParameteriNV( GLenum, GLint)!"
Const GL_NV_blend_equation_advanced_coherent=1
Const GL_NV_blend_minmax_factor=1
Const GL_NV_blend_square=1
Const GL_NV_clip_space_w_scaling=1
Const GL_VIEWPORT_POSITION_W_SCALE_NV=$937C
Const GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV=$937D
Const GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV=$937E
Global glViewportPositionWScaleNV(index_:Int,xcoeff_:Float,ycoeff_:Float)="void __glewViewportPositionWScaleNV( GLuint, GLfloat, GLfloat)!"
Const GL_NV_command_list=1
Const GL_TERMINATE_SEQUENCE_COMMAND_NV=$0000
Const GL_NOP_COMMAND_NV=$0001
Const GL_DRAW_ELEMENTS_COMMAND_NV=$0002
Const GL_DRAW_ARRAYS_COMMAND_NV=$0003
Const GL_DRAW_ELEMENTS_STRIP_COMMAND_NV=$0004
Const GL_DRAW_ARRAYS_STRIP_COMMAND_NV=$0005
Const GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV=$0006
Const GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV=$0007
Const GL_ELEMENT_ADDRESS_COMMAND_NV=$0008
Const GL_ATTRIBUTE_ADDRESS_COMMAND_NV=$0009
Const GL_UNIFORM_ADDRESS_COMMAND_NV=$000a
Const GL_BLEND_COLOR_COMMAND_NV=$000b
Const GL_STENCIL_REF_COMMAND_NV=$000c
Const GL_LINE_WIDTH_COMMAND_NV=$000d
Const GL_POLYGON_OFFSET_COMMAND_NV=$000e
Const GL_ALPHA_REF_COMMAND_NV=$000f
Const GL_VIEWPORT_COMMAND_NV=$0010
Const GL_SCISSOR_COMMAND_NV=$0011
Const GL_FRONT_FACE_COMMAND_NV=$0012
Global glCallCommandListNV(list_:Int)="void __glewCallCommandListNV( GLuint)!"
Global glCommandListSegmentsNV(list_:Int,segments_:Int)="void __glewCommandListSegmentsNV( GLuint, GLuint)!"
Global glCompileCommandListNV(list_:Int)="void __glewCompileCommandListNV( GLuint)!"
Global glCreateCommandListsNV(n_:Int,lists_:Int Ptr)="void __glewCreateCommandListsNV( GLsizei, GLuint*)!"
Global glCreateStatesNV(n_:Int,states_:Int Ptr)="void __glewCreateStatesNV( GLsizei, GLuint*)!"
Global glDeleteCommandListsNV(n_:Int,lists_:Int Ptr)="void __glewDeleteCommandListsNV( GLsizei,const GLuint*)!"
Global glDeleteStatesNV(n_:Int,states_:Int Ptr)="void __glewDeleteStatesNV( GLsizei,const GLuint*)!"
Global glDrawCommandsAddressNV(primitiveMode_:Int,indirects_:Long Ptr,sizes_:Int Ptr,count_:Int)="void __glewDrawCommandsAddressNV( GLenum,const GLuint64*,const GLsizei*, GLuint)!"
Global glDrawCommandsNV(primitiveMode_:Int,buffer_:Int,indirects_:Int Ptr,sizes_:Int Ptr,count_:Int)="void __glewDrawCommandsNV( GLenum, GLuint,const GLintptr*,const GLsizei*, GLuint)!"
Global glDrawCommandsStatesAddressNV(indirects_:Long Ptr,sizes_:Int Ptr,states_:Int Ptr,fbos_:Int Ptr,count_:Int)="void __glewDrawCommandsStatesAddressNV(const GLuint64*,const GLsizei*,const GLuint*,const GLuint*, GLuint)!"
Global glDrawCommandsStatesNV(buffer_:Int,indirects_:Int Ptr,sizes_:Int Ptr,states_:Int Ptr,fbos_:Int Ptr,count_:Int)="void __glewDrawCommandsStatesNV( GLuint,const GLintptr*,const GLsizei*,const GLuint*,const GLuint*, GLuint)!"
Global glGetCommandHeaderNV:Int(tokenID_:Int,size_:Int)="GLuint __glewGetCommandHeaderNV( GLenum, GLuint)!"
Global glGetStageIndexNV:Short(shadertype_:Int)="GLushort __glewGetStageIndexNV( GLenum)!"
Global glIsCommandListNV:Byte(list_:Int)="GLboolean __glewIsCommandListNV( GLuint)!"
Global glIsStateNV:Byte(state_:Int)="GLboolean __glewIsStateNV( GLuint)!"
Global glListDrawCommandsStatesClientNV(list_:Int,segment_:Int,indirects_:Byte Ptr Ptr,sizes_:Int Ptr,states_:Int Ptr,fbos_:Int Ptr,count_:Int)="void __glewListDrawCommandsStatesClientNV( GLuint, GLuint,const void**,const GLsizei*,const GLuint*,const GLuint*, GLuint)!"
Global glStateCaptureNV(state_:Int,mode_:Int)="void __glewStateCaptureNV( GLuint, GLenum)!"
Const GL_NV_compute_program5=1
Const GL_COMPUTE_PROGRAM_NV=$90FB
Const GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV=$90FC
Const GL_NV_conditional_render=1
Const GL_QUERY_WAIT_NV=$8E13
Const GL_QUERY_NO_WAIT_NV=$8E14
Const GL_QUERY_BY_REGION_WAIT_NV=$8E15
Const GL_QUERY_BY_REGION_NO_WAIT_NV=$8E16
Global glBeginConditionalRenderNV(id_:Int,mode_:Int)="void __glewBeginConditionalRenderNV( GLuint, GLenum)!"
Global glEndConditionalRenderNV()="void __glewEndConditionalRenderNV( void)!"
Const GL_NV_conservative_raster=1
Const GL_CONSERVATIVE_RASTERIZATION_NV=$9346
Const GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV=$9347
Const GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV=$9348
Const GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV=$9349
Global glSubpixelPrecisionBiasNV(xbits_:Int,ybits_:Int)="void __glewSubpixelPrecisionBiasNV( GLuint, GLuint)!"
Const GL_NV_conservative_raster_dilate=1
Const GL_CONSERVATIVE_RASTER_DILATE_NV=$9379
Const GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV=$937A
Const GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV=$937B
Global glConservativeRasterParameterfNV(pname_:Int,value_:Float)="void __glewConservativeRasterParameterfNV( GLenum, GLfloat)!"
Const GL_NV_conservative_raster_pre_snap_triangles=1
Const GL_CONSERVATIVE_RASTER_MODE_NV=$954D
Const GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV=$954E
Const GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV=$954F
Global glConservativeRasterParameteriNV(pname_:Int,param_:Int)="void __glewConservativeRasterParameteriNV( GLenum, GLint)!"
Const GL_NV_copy_buffer=1
Const GL_COPY_READ_BUFFER_NV=$8F36
Const GL_COPY_WRITE_BUFFER_NV=$8F37
Global glCopyBufferSubDataNV(readtarget_:Int,writetarget_:Int,readoffset_:Int,writeoffset_:Int,size_:Int)="void __glewCopyBufferSubDataNV( GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr)!"
Const GL_NV_copy_depth_to_color=1
Const GL_DEPTH_STENCIL_TO_RGBA_NV=$886E
Const GL_DEPTH_STENCIL_TO_BGRA_NV=$886F
Const GL_NV_copy_image=1
Global glCopyImageSubDataNV(srcName_:Int,srcTarget_:Int,srcLevel_:Int,srcX_:Int,srcY_:Int,srcZ_:Int,dstName_:Int,dstTarget_:Int,dstLevel_:Int,dstX_:Int,dstY_:Int,dstZ_:Int,width_:Int,height_:Int,depth_:Int)="void __glewCopyImageSubDataNV( GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei)!"
Const GL_NV_deep_texture3D=1
Const GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV=$90D0
Const GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV=$90D1
Const GL_NV_depth_buffer_float=1
Const GL_DEPTH_COMPONENT32F_NV=$8DAB
Const GL_DEPTH32F_STENCIL8_NV=$8DAC
Const GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV=$8DAD
Const GL_DEPTH_BUFFER_FLOAT_MODE_NV=$8DAF
Global glClearDepthdNV(depth_:Double)="void __glewClearDepthdNV( GLdouble)!"
Global glDepthBoundsdNV(zmin_:Double,zmax_:Double)="void __glewDepthBoundsdNV( GLdouble, GLdouble)!"
Global glDepthRangedNV(zNear_:Double,zFar_:Double)="void __glewDepthRangedNV( GLdouble, GLdouble)!"
Const GL_NV_depth_clamp=1
Const GL_DEPTH_CLAMP_NV=$864F
Const GL_NV_depth_range_unclamped=1
Const GL_SAMPLE_COUNT_BITS_NV=$8864
Const GL_CURRENT_SAMPLE_COUNT_QUERY_NV=$8865
Const GL_QUERY_RESULT_NV=$8866
Const GL_QUERY_RESULT_AVAILABLE_NV=$8867
Const GL_SAMPLE_COUNT_NV=$8914
Const GL_NV_draw_buffers=1
Const GL_MAX_DRAW_BUFFERS_NV=$8824
Const GL_DRAW_BUFFER0_NV=$8825
Const GL_DRAW_BUFFER1_NV=$8826
Const GL_DRAW_BUFFER2_NV=$8827
Const GL_DRAW_BUFFER3_NV=$8828
Const GL_DRAW_BUFFER4_NV=$8829
Const GL_DRAW_BUFFER5_NV=$882A
Const GL_DRAW_BUFFER6_NV=$882B
Const GL_DRAW_BUFFER7_NV=$882C
Const GL_DRAW_BUFFER8_NV=$882D
Const GL_DRAW_BUFFER9_NV=$882E
Const GL_DRAW_BUFFER10_NV=$882F
Const GL_DRAW_BUFFER11_NV=$8830
Const GL_DRAW_BUFFER12_NV=$8831
Const GL_DRAW_BUFFER13_NV=$8832
Const GL_DRAW_BUFFER14_NV=$8833
Const GL_DRAW_BUFFER15_NV=$8834
Const GL_COLOR_ATTACHMENT0_NV=$8CE0
Const GL_COLOR_ATTACHMENT1_NV=$8CE1
Const GL_COLOR_ATTACHMENT2_NV=$8CE2
Const GL_COLOR_ATTACHMENT3_NV=$8CE3
Const GL_COLOR_ATTACHMENT4_NV=$8CE4
Const GL_COLOR_ATTACHMENT5_NV=$8CE5
Const GL_COLOR_ATTACHMENT6_NV=$8CE6
Const GL_COLOR_ATTACHMENT7_NV=$8CE7
Const GL_COLOR_ATTACHMENT8_NV=$8CE8
Const GL_COLOR_ATTACHMENT9_NV=$8CE9
Const GL_COLOR_ATTACHMENT10_NV=$8CEA
Const GL_COLOR_ATTACHMENT11_NV=$8CEB
Const GL_COLOR_ATTACHMENT12_NV=$8CEC
Const GL_COLOR_ATTACHMENT13_NV=$8CED
Const GL_COLOR_ATTACHMENT14_NV=$8CEE
Const GL_COLOR_ATTACHMENT15_NV=$8CEF
Global glDrawBuffersNV(n_:Int,bufs_:Int Ptr)="void __glewDrawBuffersNV( GLsizei,const GLenum*)!"
Const GL_NV_draw_instanced=1
Global glDrawArraysInstancedNV(mode_:Int,first_:Int,count_:Int,primcount_:Int)="void __glewDrawArraysInstancedNV( GLenum, GLint, GLsizei, GLsizei)!"
Global glDrawElementsInstancedNV(mode_:Int,count_:Int,type_:Int,indices_:Byte Ptr,primcount_:Int)="void __glewDrawElementsInstancedNV( GLenum, GLsizei, GLenum,const void*, GLsizei)!"
Const GL_NV_draw_texture=1
Global glDrawTextureNV(texture_:Int,sampler_:Int,x0_:Float,y0_:Float,x1_:Float,y1_:Float,z_:Float,s0_:Float,t0_:Float,s1_:Float,t1_:Float)="void __glewDrawTextureNV( GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat)!"
Const GL_NV_draw_vulkan_image=1
Global glDrawVkImageNV(vkImage_:Long,sampler_:Int,x0_:Float,y0_:Float,x1_:Float,y1_:Float,z_:Float,s0_:Float,t0_:Float,s1_:Float,t1_:Float)="void __glewDrawVkImageNV( GLuint64, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat)!"
Global glSignalVkFenceNV(vkFence_:Long)="void __glewSignalVkFenceNV( GLuint64)!"
Global glSignalVkSemaphoreNV(vkSemaphore_:Long)="void __glewSignalVkSemaphoreNV( GLuint64)!"
Global glWaitVkSemaphoreNV(vkSemaphore_:Long)="void __glewWaitVkSemaphoreNV( GLuint64)!"
Const GL_NV_evaluators=1
Const GL_EVAL_2D_NV=$86C0
Const GL_EVAL_TRIANGULAR_2D_NV=$86C1
Const GL_MAP_TESSELLATION_NV=$86C2
Const GL_MAP_ATTRIB_U_ORDER_NV=$86C3
Const GL_MAP_ATTRIB_V_ORDER_NV=$86C4
Const GL_EVAL_FRACTIONAL_TESSELLATION_NV=$86C5
Const GL_EVAL_VERTEX_ATTRIB0_NV=$86C6
Const GL_EVAL_VERTEX_ATTRIB1_NV=$86C7
Const GL_EVAL_VERTEX_ATTRIB2_NV=$86C8
Const GL_EVAL_VERTEX_ATTRIB3_NV=$86C9
Const GL_EVAL_VERTEX_ATTRIB4_NV=$86CA
Const GL_EVAL_VERTEX_ATTRIB5_NV=$86CB
Const GL_EVAL_VERTEX_ATTRIB6_NV=$86CC
Const GL_EVAL_VERTEX_ATTRIB7_NV=$86CD
Const GL_EVAL_VERTEX_ATTRIB8_NV=$86CE
Const GL_EVAL_VERTEX_ATTRIB9_NV=$86CF
Const GL_EVAL_VERTEX_ATTRIB10_NV=$86D0
Const GL_EVAL_VERTEX_ATTRIB11_NV=$86D1
Const GL_EVAL_VERTEX_ATTRIB12_NV=$86D2
Const GL_EVAL_VERTEX_ATTRIB13_NV=$86D3
Const GL_EVAL_VERTEX_ATTRIB14_NV=$86D4
Const GL_EVAL_VERTEX_ATTRIB15_NV=$86D5
Const GL_MAX_MAP_TESSELLATION_NV=$86D6
Const GL_MAX_RATIONAL_EVAL_ORDER_NV=$86D7
Global glEvalMapsNV(target_:Int,mode_:Int)="void __glewEvalMapsNV( GLenum, GLenum)!"
Global glGetMapAttribParameterfvNV(target_:Int,index_:Int,pname_:Int,params_:Float Ptr)="void __glewGetMapAttribParameterfvNV( GLenum, GLuint, GLenum, GLfloat*)!"
Global glGetMapAttribParameterivNV(target_:Int,index_:Int,pname_:Int,params_:Int Ptr)="void __glewGetMapAttribParameterivNV( GLenum, GLuint, GLenum, GLint*)!"
Global glGetMapControlPointsNV(target_:Int,index_:Int,type_:Int,ustride_:Int,vstride_:Int,packed_:Byte,points_:Byte Ptr)="void __glewGetMapControlPointsNV( GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, void*)!"
Global glGetMapParameterfvNV(target_:Int,pname_:Int,params_:Float Ptr)="void __glewGetMapParameterfvNV( GLenum, GLenum, GLfloat*)!"
Global glGetMapParameterivNV(target_:Int,pname_:Int,params_:Int Ptr)="void __glewGetMapParameterivNV( GLenum, GLenum, GLint*)!"
Global glMapControlPointsNV(target_:Int,index_:Int,type_:Int,ustride_:Int,vstride_:Int,uorder_:Int,vorder_:Int,packed_:Byte,points_:Byte Ptr)="void __glewMapControlPointsNV( GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean,const void*)!"
Global glMapParameterfvNV(target_:Int,pname_:Int,params_:Float Ptr)="void __glewMapParameterfvNV( GLenum, GLenum,const GLfloat*)!"
Global glMapParameterivNV(target_:Int,pname_:Int,params_:Int Ptr)="void __glewMapParameterivNV( GLenum, GLenum,const GLint*)!"
Const GL_NV_explicit_attrib_location=1
Const GL_NV_explicit_multisample=1
Const GL_SAMPLE_POSITION_NV=$8E50

End Extern
