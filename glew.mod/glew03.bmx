Strict

Import "GL/glew.h"

Extern "Os"

Global glGetNamedFramebufferParameterivEXT(framebuffer_:Int,pname_:Int,params_:Int Ptr)="void __glewGetNamedFramebufferParameterivEXT( GLuint, GLenum, GLint*)!"
Global glNamedFramebufferParameteriEXT(framebuffer_:Int,pname_:Int,param_:Int)="void __glewNamedFramebufferParameteriEXT( GLuint, GLenum, GLint)!"
Const GL_ARB_framebuffer_object=1
Const GL_INVALID_FRAMEBUFFER_OPERATION=$0506
Const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=$8210
Const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=$8211
Const GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE=$8212
Const GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=$8213
Const GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=$8214
Const GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=$8215
Const GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=$8216
Const GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=$8217
Const GL_FRAMEBUFFER_DEFAULT=$8218
Const GL_FRAMEBUFFER_UNDEFINED=$8219
Const GL_DEPTH_STENCIL_ATTACHMENT=$821A
Const GL_INDEX=$8222
Const GL_MAX_RENDERBUFFER_SIZE=$84E8
Const GL_DEPTH_STENCIL=$84F9
Const GL_UNSIGNED_INT_24_8=$84FA
Const GL_DEPTH24_STENCIL8=$88F0
Const GL_TEXTURE_STENCIL_SIZE=$88F1
Const GL_UNSIGNED_NORMALIZED=$8C17
Const GL_DRAW_FRAMEBUFFER_BINDING=$8CA6
Const GL_FRAMEBUFFER_BINDING=$8CA6
Const GL_RENDERBUFFER_BINDING=$8CA7
Const GL_READ_FRAMEBUFFER=$8CA8
Const GL_DRAW_FRAMEBUFFER=$8CA9
Const GL_READ_FRAMEBUFFER_BINDING=$8CAA
Const GL_RENDERBUFFER_SAMPLES=$8CAB
Const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=$8CD0
Const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=$8CD1
Const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=$8CD2
Const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=$8CD3
Const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=$8CD4
Const GL_FRAMEBUFFER_COMPLETE=$8CD5
Const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT=$8CD6
Const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=$8CD7
Const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER=$8CDB
Const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER=$8CDC
Const GL_FRAMEBUFFER_UNSUPPORTED=$8CDD
Const GL_MAX_COLOR_ATTACHMENTS=$8CDF
Const GL_COLOR_ATTACHMENT0=$8CE0
Const GL_COLOR_ATTACHMENT1=$8CE1
Const GL_COLOR_ATTACHMENT2=$8CE2
Const GL_COLOR_ATTACHMENT3=$8CE3
Const GL_COLOR_ATTACHMENT4=$8CE4
Const GL_COLOR_ATTACHMENT5=$8CE5
Const GL_COLOR_ATTACHMENT6=$8CE6
Const GL_COLOR_ATTACHMENT7=$8CE7
Const GL_COLOR_ATTACHMENT8=$8CE8
Const GL_COLOR_ATTACHMENT9=$8CE9
Const GL_COLOR_ATTACHMENT10=$8CEA
Const GL_COLOR_ATTACHMENT11=$8CEB
Const GL_COLOR_ATTACHMENT12=$8CEC
Const GL_COLOR_ATTACHMENT13=$8CED
Const GL_COLOR_ATTACHMENT14=$8CEE
Const GL_COLOR_ATTACHMENT15=$8CEF
Const GL_DEPTH_ATTACHMENT=$8D00
Const GL_STENCIL_ATTACHMENT=$8D20
Const GL_FRAMEBUFFER=$8D40
Const GL_RENDERBUFFER=$8D41
Const GL_RENDERBUFFER_WIDTH=$8D42
Const GL_RENDERBUFFER_HEIGHT=$8D43
Const GL_RENDERBUFFER_INTERNAL_FORMAT=$8D44
Const GL_STENCIL_INDEX1=$8D46
Const GL_STENCIL_INDEX4=$8D47
Const GL_STENCIL_INDEX8=$8D48
Const GL_STENCIL_INDEX16=$8D49
Const GL_RENDERBUFFER_RED_SIZE=$8D50
Const GL_RENDERBUFFER_GREEN_SIZE=$8D51
Const GL_RENDERBUFFER_BLUE_SIZE=$8D52
Const GL_RENDERBUFFER_ALPHA_SIZE=$8D53
Const GL_RENDERBUFFER_DEPTH_SIZE=$8D54
Const GL_RENDERBUFFER_STENCIL_SIZE=$8D55
Const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=$8D56
Const GL_MAX_SAMPLES=$8D57
Global glBindFramebuffer(target_:Int,framebuffer_:Int)="void __glewBindFramebuffer( GLenum, GLuint)!"
Global glBindRenderbuffer(target_:Int,renderbuffer_:Int)="void __glewBindRenderbuffer( GLenum, GLuint)!"
Global glBlitFramebuffer(srcX0_:Int,srcY0_:Int,srcX1_:Int,srcY1_:Int,dstX0_:Int,dstY0_:Int,dstX1_:Int,dstY1_:Int,mask_:Int,filter_:Int)="void __glewBlitFramebuffer( GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum)!"
Global glCheckFramebufferStatus:Int(target_:Int)="GLenum __glewCheckFramebufferStatus( GLenum)!"
Global glDeleteFramebuffers(n_:Int,framebuffers_:Int Ptr)="void __glewDeleteFramebuffers( GLsizei,const GLuint*)!"
Global glDeleteRenderbuffers(n_:Int,renderbuffers_:Int Ptr)="void __glewDeleteRenderbuffers( GLsizei,const GLuint*)!"
Global glFramebufferRenderbuffer(target_:Int,attachment_:Int,renderbuffertarget_:Int,renderbuffer_:Int)="void __glewFramebufferRenderbuffer( GLenum, GLenum, GLenum, GLuint)!"
Global glFramebufferTexture1D(target_:Int,attachment_:Int,textarget_:Int,texture_:Int,level_:Int)="void __glewFramebufferTexture1D( GLenum, GLenum, GLenum, GLuint, GLint)!"
Global glFramebufferTexture2D(target_:Int,attachment_:Int,textarget_:Int,texture_:Int,level_:Int)="void __glewFramebufferTexture2D( GLenum, GLenum, GLenum, GLuint, GLint)!"
Global glFramebufferTexture3D(target_:Int,attachment_:Int,textarget_:Int,texture_:Int,level_:Int,layer_:Int)="void __glewFramebufferTexture3D( GLenum, GLenum, GLenum, GLuint, GLint, GLint)!"
Global glFramebufferTextureLayer(target_:Int,attachment_:Int,texture_:Int,level_:Int,layer_:Int)="void __glewFramebufferTextureLayer( GLenum, GLenum, GLuint, GLint, GLint)!"
Global glGenFramebuffers(n_:Int,framebuffers_:Int Ptr)="void __glewGenFramebuffers( GLsizei, GLuint*)!"
Global glGenRenderbuffers(n_:Int,renderbuffers_:Int Ptr)="void __glewGenRenderbuffers( GLsizei, GLuint*)!"
Global glGenerateMipmap(target_:Int)="void __glewGenerateMipmap( GLenum)!"
Global glGetFramebufferAttachmentParameteriv(target_:Int,attachment_:Int,pname_:Int,params_:Int Ptr)="void __glewGetFramebufferAttachmentParameteriv( GLenum, GLenum, GLenum, GLint*)!"
Global glGetRenderbufferParameteriv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewGetRenderbufferParameteriv( GLenum, GLenum, GLint*)!"
Global glIsFramebuffer:Byte(framebuffer_:Int)="GLboolean __glewIsFramebuffer( GLuint)!"
Global glIsRenderbuffer:Byte(renderbuffer_:Int)="GLboolean __glewIsRenderbuffer( GLuint)!"
Global glRenderbufferStorage(target_:Int,internalformat_:Int,width_:Int,height_:Int)="void __glewRenderbufferStorage( GLenum, GLenum, GLsizei, GLsizei)!"
Global glRenderbufferStorageMultisample(target_:Int,samples_:Int,internalformat_:Int,width_:Int,height_:Int)="void __glewRenderbufferStorageMultisample( GLenum, GLsizei, GLenum, GLsizei, GLsizei)!"
Const GL_ARB_framebuffer_sRGB=1
Const GL_FRAMEBUFFER_SRGB=$8DB9
Const GL_ARB_geometry_shader4=1
Const GL_LINES_ADJACENCY_ARB=$A
Const GL_LINE_STRIP_ADJACENCY_ARB=$B
Const GL_TRIANGLES_ADJACENCY_ARB=$C
Const GL_TRIANGLE_STRIP_ADJACENCY_ARB=$D
Const GL_PROGRAM_POINT_SIZE_ARB=$8642
Const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB=$8C29
Const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB=$8DA7
Const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB=$8DA8
Const GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB=$8DA9
Const GL_GEOMETRY_SHADER_ARB=$8DD9
Const GL_GEOMETRY_VERTICES_OUT_ARB=$8DDA
Const GL_GEOMETRY_INPUT_TYPE_ARB=$8DDB
Const GL_GEOMETRY_OUTPUT_TYPE_ARB=$8DDC
Const GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB=$8DDD
Const GL_MAX_VERTEX_VARYING_COMPONENTS_ARB=$8DDE
Const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB=$8DDF
Const GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB=$8DE0
Const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB=$8DE1
Global glFramebufferTextureARB(target_:Int,attachment_:Int,texture_:Int,level_:Int)="void __glewFramebufferTextureARB( GLenum, GLenum, GLuint, GLint)!"
Global glFramebufferTextureFaceARB(target_:Int,attachment_:Int,texture_:Int,level_:Int,face_:Int)="void __glewFramebufferTextureFaceARB( GLenum, GLenum, GLuint, GLint, GLenum)!"
Global glFramebufferTextureLayerARB(target_:Int,attachment_:Int,texture_:Int,level_:Int,layer_:Int)="void __glewFramebufferTextureLayerARB( GLenum, GLenum, GLuint, GLint, GLint)!"
Global glProgramParameteriARB(program_:Int,pname_:Int,value_:Int)="void __glewProgramParameteriARB( GLuint, GLenum, GLint)!"
Const GL_ARB_get_program_binary=1
Const GL_PROGRAM_BINARY_RETRIEVABLE_HINT=$8257
Const GL_PROGRAM_BINARY_LENGTH=$8741
Const GL_NUM_PROGRAM_BINARY_FORMATS=$87FE
Const GL_PROGRAM_BINARY_FORMATS=$87FF
Global glGetProgramBinary(program_:Int,bufSize_:Int,length_:Int Ptr,binaryFormat_:Int Ptr,binary_:Byte Ptr)="void __glewGetProgramBinary( GLuint, GLsizei, GLsizei*, GLenum*, void*)!"
Global glProgramBinary(program_:Int,binaryFormat_:Int,binary_:Byte Ptr,length_:Int)="void __glewProgramBinary( GLuint, GLenum,const void*, GLsizei)!"
Global glProgramParameteri(program_:Int,pname_:Int,value_:Int)="void __glewProgramParameteri( GLuint, GLenum, GLint)!"
Const GL_ARB_get_texture_sub_image=1
Global glGetCompressedTextureSubImage(texture_:Int,level_:Int,xoffset_:Int,yoffset_:Int,zoffset_:Int,width_:Int,height_:Int,depth_:Int,bufSize_:Int,pixels_:Byte Ptr)="void __glewGetCompressedTextureSubImage( GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, void*)!"
Global glGetTextureSubImage(texture_:Int,level_:Int,xoffset_:Int,yoffset_:Int,zoffset_:Int,width_:Int,height_:Int,depth_:Int,format_:Int,type_:Int,bufSize_:Int,pixels_:Byte Ptr)="void __glewGetTextureSubImage( GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*)!"
Const GL_ARB_gpu_shader5=1
Const GL_GEOMETRY_SHADER_INVOCATIONS=$887F
Const GL_MAX_GEOMETRY_SHADER_INVOCATIONS=$8E5A
Const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET=$8E5B
Const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET=$8E5C
Const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS=$8E5D
Const GL_MAX_VERTEX_STREAMS=$8E71
Const GL_ARB_gpu_shader_fp64=1
Const GL_DOUBLE_MAT2=$8F46
Const GL_DOUBLE_MAT3=$8F47
Const GL_DOUBLE_MAT4=$8F48
Const GL_DOUBLE_MAT2x3=$8F49
Const GL_DOUBLE_MAT2x4=$8F4A
Const GL_DOUBLE_MAT3x2=$8F4B
Const GL_DOUBLE_MAT3x4=$8F4C
Const GL_DOUBLE_MAT4x2=$8F4D
Const GL_DOUBLE_MAT4x3=$8F4E
Const GL_DOUBLE_VEC2=$8FFC
Const GL_DOUBLE_VEC3=$8FFD
Const GL_DOUBLE_VEC4=$8FFE
Global glGetUniformdv(program_:Int,location_:Int,params_:Double Ptr)="void __glewGetUniformdv( GLuint, GLint, GLdouble*)!"
Global glUniform1d(location_:Int,x_:Double)="void __glewUniform1d( GLint, GLdouble)!"
Global glUniform1dv(location_:Int,count_:Int,value_:Double Ptr)="void __glewUniform1dv( GLint, GLsizei,const GLdouble*)!"
Global glUniform2d(location_:Int,x_:Double,y_:Double)="void __glewUniform2d( GLint, GLdouble, GLdouble)!"
Global glUniform2dv(location_:Int,count_:Int,value_:Double Ptr)="void __glewUniform2dv( GLint, GLsizei,const GLdouble*)!"
Global glUniform3d(location_:Int,x_:Double,y_:Double,z_:Double)="void __glewUniform3d( GLint, GLdouble, GLdouble, GLdouble)!"
Global glUniform3dv(location_:Int,count_:Int,value_:Double Ptr)="void __glewUniform3dv( GLint, GLsizei,const GLdouble*)!"
Global glUniform4d(location_:Int,x_:Double,y_:Double,z_:Double,w_:Double)="void __glewUniform4d( GLint, GLdouble, GLdouble, GLdouble, GLdouble)!"
Global glUniform4dv(location_:Int,count_:Int,value_:Double Ptr)="void __glewUniform4dv( GLint, GLsizei,const GLdouble*)!"
Global glUniformMatrix2dv(location_:Int,count_:Int,transpose_:Byte,value_:Double Ptr)="void __glewUniformMatrix2dv( GLint, GLsizei, GLboolean,const GLdouble*)!"
Global glUniformMatrix2x3dv(location_:Int,count_:Int,transpose_:Byte,value_:Double Ptr)="void __glewUniformMatrix2x3dv( GLint, GLsizei, GLboolean,const GLdouble*)!"
Global glUniformMatrix2x4dv(location_:Int,count_:Int,transpose_:Byte,value_:Double Ptr)="void __glewUniformMatrix2x4dv( GLint, GLsizei, GLboolean,const GLdouble*)!"
Global glUniformMatrix3dv(location_:Int,count_:Int,transpose_:Byte,value_:Double Ptr)="void __glewUniformMatrix3dv( GLint, GLsizei, GLboolean,const GLdouble*)!"
Global glUniformMatrix3x2dv(location_:Int,count_:Int,transpose_:Byte,value_:Double Ptr)="void __glewUniformMatrix3x2dv( GLint, GLsizei, GLboolean,const GLdouble*)!"
Global glUniformMatrix3x4dv(location_:Int,count_:Int,transpose_:Byte,value_:Double Ptr)="void __glewUniformMatrix3x4dv( GLint, GLsizei, GLboolean,const GLdouble*)!"
Global glUniformMatrix4dv(location_:Int,count_:Int,transpose_:Byte,value_:Double Ptr)="void __glewUniformMatrix4dv( GLint, GLsizei, GLboolean,const GLdouble*)!"
Global glUniformMatrix4x2dv(location_:Int,count_:Int,transpose_:Byte,value_:Double Ptr)="void __glewUniformMatrix4x2dv( GLint, GLsizei, GLboolean,const GLdouble*)!"
Global glUniformMatrix4x3dv(location_:Int,count_:Int,transpose_:Byte,value_:Double Ptr)="void __glewUniformMatrix4x3dv( GLint, GLsizei, GLboolean,const GLdouble*)!"
Const GL_ARB_half_float_pixel=1
Const GL_HALF_FLOAT_ARB=$140B
Const GL_ARB_half_float_vertex=1
Const GL_HALF_FLOAT=$140B
Const GL_ARB_imaging=1
Const GL_CONSTANT_COLOR=$8001
Const GL_ONE_MINUS_CONSTANT_COLOR=$8002
Const GL_CONSTANT_ALPHA=$8003
Const GL_ONE_MINUS_CONSTANT_ALPHA=$8004
Const GL_BLEND_COLOR=$8005
Const GL_FUNC_ADD=$8006
Const GL_MIN=$8007
Const GL_MAX=$8008
Const GL_BLEND_EQUATION=$8009
Const GL_FUNC_SUBTRACT=$800A
Const GL_FUNC_REVERSE_SUBTRACT=$800B
Const GL_CONVOLUTION_1D=$8010
Const GL_CONVOLUTION_2D=$8011
Const GL_SEPARABLE_2D=$8012
Const GL_CONVOLUTION_BORDER_MODE=$8013
Const GL_CONVOLUTION_FILTER_SCALE=$8014
Const GL_CONVOLUTION_FILTER_BIAS=$8015
Const GL_REDUCE=$8016
Const GL_CONVOLUTION_FORMAT=$8017
Const GL_CONVOLUTION_WIDTH=$8018
Const GL_CONVOLUTION_HEIGHT=$8019
Const GL_MAX_CONVOLUTION_WIDTH=$801A
Const GL_MAX_CONVOLUTION_HEIGHT=$801B
Const GL_POST_CONVOLUTION_RED_SCALE=$801C
Const GL_POST_CONVOLUTION_GREEN_SCALE=$801D
Const GL_POST_CONVOLUTION_BLUE_SCALE=$801E
Const GL_POST_CONVOLUTION_ALPHA_SCALE=$801F
Const GL_POST_CONVOLUTION_RED_BIAS=$8020
Const GL_POST_CONVOLUTION_GREEN_BIAS=$8021
Const GL_POST_CONVOLUTION_BLUE_BIAS=$8022
Const GL_POST_CONVOLUTION_ALPHA_BIAS=$8023
Const GL_HISTOGRAM=$8024
Const GL_PROXY_HISTOGRAM=$8025
Const GL_HISTOGRAM_WIDTH=$8026
Const GL_HISTOGRAM_FORMAT=$8027
Const GL_HISTOGRAM_RED_SIZE=$8028
Const GL_HISTOGRAM_GREEN_SIZE=$8029
Const GL_HISTOGRAM_BLUE_SIZE=$802A
Const GL_HISTOGRAM_ALPHA_SIZE=$802B
Const GL_HISTOGRAM_LUMINANCE_SIZE=$802C
Const GL_HISTOGRAM_SINK=$802D
Const GL_MINMAX=$802E
Const GL_MINMAX_FORMAT=$802F
Const GL_MINMAX_SINK=$8030
Const GL_TABLE_TOO_LARGE=$8031
Const GL_COLOR_MATRIX=$80B1
Const GL_COLOR_MATRIX_STACK_DEPTH=$80B2
Const GL_MAX_COLOR_MATRIX_STACK_DEPTH=$80B3
Const GL_POST_COLOR_MATRIX_RED_SCALE=$80B4
Const GL_POST_COLOR_MATRIX_GREEN_SCALE=$80B5
Const GL_POST_COLOR_MATRIX_BLUE_SCALE=$80B6
Const GL_POST_COLOR_MATRIX_ALPHA_SCALE=$80B7
Const GL_POST_COLOR_MATRIX_RED_BIAS=$80B8
Const GL_POST_COLOR_MATRIX_GREEN_BIAS=$80B9
Const GL_POST_COLOR_MATRIX_BLUE_BIAS=$80BA
Const GL_POST_COLOR_MATRIX_ALPHA_BIAS=$80BB
Const GL_COLOR_TABLE=$80D0
Const GL_POST_CONVOLUTION_COLOR_TABLE=$80D1
Const GL_POST_COLOR_MATRIX_COLOR_TABLE=$80D2
Const GL_PROXY_COLOR_TABLE=$80D3
Const GL_PROXY_POST_CONVOLUTION_COLOR_TABLE=$80D4
Const GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE=$80D5
Const GL_COLOR_TABLE_SCALE=$80D6
Const GL_COLOR_TABLE_BIAS=$80D7
Const GL_COLOR_TABLE_FORMAT=$80D8
Const GL_COLOR_TABLE_WIDTH=$80D9
Const GL_COLOR_TABLE_RED_SIZE=$80DA
Const GL_COLOR_TABLE_GREEN_SIZE=$80DB
Const GL_COLOR_TABLE_BLUE_SIZE=$80DC
Const GL_COLOR_TABLE_ALPHA_SIZE=$80DD
Const GL_COLOR_TABLE_LUMINANCE_SIZE=$80DE
Const GL_COLOR_TABLE_INTENSITY_SIZE=$80DF
Const GL_IGNORE_BORDER=$8150
Const GL_CONSTANT_BORDER=$8151
Const GL_WRAP_BORDER=$8152
Const GL_REPLICATE_BORDER=$8153
Const GL_CONVOLUTION_BORDER_COLOR=$8154
Global glColorSubTable(target_:Int,start_:Int,count_:Int,format_:Int,type_:Int,data_:Byte Ptr)="void __glewColorSubTable( GLenum, GLsizei, GLsizei, GLenum, GLenum,const void*)!"
Global glColorTable(target_:Int,internalformat_:Int,width_:Int,format_:Int,type_:Int,table_:Byte Ptr)="void __glewColorTable( GLenum, GLenum, GLsizei, GLenum, GLenum,const void*)!"
Global glColorTableParameterfv(target_:Int,pname_:Int,params_:Float Ptr)="void __glewColorTableParameterfv( GLenum, GLenum,const GLfloat*)!"
Global glColorTableParameteriv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewColorTableParameteriv( GLenum, GLenum,const GLint*)!"
Global glConvolutionFilter1D(target_:Int,internalformat_:Int,width_:Int,format_:Int,type_:Int,image_:Byte Ptr)="void __glewConvolutionFilter1D( GLenum, GLenum, GLsizei, GLenum, GLenum,const void*)!"
Global glConvolutionFilter2D(target_:Int,internalformat_:Int,width_:Int,height_:Int,format_:Int,type_:Int,image_:Byte Ptr)="void __glewConvolutionFilter2D( GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum,const void*)!"
Global glConvolutionParameterf(target_:Int,pname_:Int,params_:Float)="void __glewConvolutionParameterf( GLenum, GLenum, GLfloat)!"
Global glConvolutionParameterfv(target_:Int,pname_:Int,params_:Float Ptr)="void __glewConvolutionParameterfv( GLenum, GLenum,const GLfloat*)!"
Global glConvolutionParameteri(target_:Int,pname_:Int,params_:Int)="void __glewConvolutionParameteri( GLenum, GLenum, GLint)!"
Global glConvolutionParameteriv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewConvolutionParameteriv( GLenum, GLenum,const GLint*)!"
Global glCopyColorSubTable(target_:Int,start_:Int,x_:Int,y_:Int,width_:Int)="void __glewCopyColorSubTable( GLenum, GLsizei, GLint, GLint, GLsizei)!"
Global glCopyColorTable(target_:Int,internalformat_:Int,x_:Int,y_:Int,width_:Int)="void __glewCopyColorTable( GLenum, GLenum, GLint, GLint, GLsizei)!"
Global glCopyConvolutionFilter1D(target_:Int,internalformat_:Int,x_:Int,y_:Int,width_:Int)="void __glewCopyConvolutionFilter1D( GLenum, GLenum, GLint, GLint, GLsizei)!"
Global glCopyConvolutionFilter2D(target_:Int,internalformat_:Int,x_:Int,y_:Int,width_:Int,height_:Int)="void __glewCopyConvolutionFilter2D( GLenum, GLenum, GLint, GLint, GLsizei, GLsizei)!"
Global glGetColorTable(target_:Int,format_:Int,type_:Int,table_:Byte Ptr)="void __glewGetColorTable( GLenum, GLenum, GLenum, void*)!"
Global glGetColorTableParameterfv(target_:Int,pname_:Int,params_:Float Ptr)="void __glewGetColorTableParameterfv( GLenum, GLenum, GLfloat*)!"
Global glGetColorTableParameteriv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewGetColorTableParameteriv( GLenum, GLenum, GLint*)!"
Global glGetConvolutionFilter(target_:Int,format_:Int,type_:Int,image_:Byte Ptr)="void __glewGetConvolutionFilter( GLenum, GLenum, GLenum, void*)!"
Global glGetConvolutionParameterfv(target_:Int,pname_:Int,params_:Float Ptr)="void __glewGetConvolutionParameterfv( GLenum, GLenum, GLfloat*)!"
Global glGetConvolutionParameteriv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewGetConvolutionParameteriv( GLenum, GLenum, GLint*)!"
Global glGetHistogram(target_:Int,reset_:Byte,format_:Int,type_:Int,values_:Byte Ptr)="void __glewGetHistogram( GLenum, GLboolean, GLenum, GLenum, void*)!"
Global glGetHistogramParameterfv(target_:Int,pname_:Int,params_:Float Ptr)="void __glewGetHistogramParameterfv( GLenum, GLenum, GLfloat*)!"
Global glGetHistogramParameteriv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewGetHistogramParameteriv( GLenum, GLenum, GLint*)!"
Global glGetMinmax(target_:Int,reset_:Byte,format_:Int,types_:Int,values_:Byte Ptr)="void __glewGetMinmax( GLenum, GLboolean, GLenum, GLenum, void*)!"
Global glGetMinmaxParameterfv(target_:Int,pname_:Int,params_:Float Ptr)="void __glewGetMinmaxParameterfv( GLenum, GLenum, GLfloat*)!"
Global glGetMinmaxParameteriv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewGetMinmaxParameteriv( GLenum, GLenum, GLint*)!"
Global glGetSeparableFilter(target_:Int,format_:Int,type_:Int,row_:Byte Ptr,column_:Byte Ptr,span_:Byte Ptr)="void __glewGetSeparableFilter( GLenum, GLenum, GLenum, void*, void*, void*)!"
Global glHistogram(target_:Int,width_:Int,internalformat_:Int,sink_:Byte)="void __glewHistogram( GLenum, GLsizei, GLenum, GLboolean)!"
Global glMinmax(target_:Int,internalformat_:Int,sink_:Byte)="void __glewMinmax( GLenum, GLenum, GLboolean)!"
Global glResetHistogram(target_:Int)="void __glewResetHistogram( GLenum)!"
Global glResetMinmax(target_:Int)="void __glewResetMinmax( GLenum)!"
Global glSeparableFilter2D(target_:Int,internalformat_:Int,width_:Int,height_:Int,format_:Int,type_:Int,row_:Byte Ptr,column_:Byte Ptr)="void __glewSeparableFilter2D( GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum,const void*,const void*)!"
Const GL_ARB_indirect_parameters=1
Const GL_PARAMETER_BUFFER_ARB=$80EE
Const GL_PARAMETER_BUFFER_BINDING_ARB=$80EF
Global glMultiDrawArraysIndirectCountARB(mode_:Int,indirect_:Byte Ptr,drawcount_:Int,maxdrawcount_:Int,stride_:Int)="void __glewMultiDrawArraysIndirectCountARB( GLenum,const void*, GLintptr, GLsizei, GLsizei)!"
Global glMultiDrawElementsIndirectCountARB(mode_:Int,type_:Int,indirect_:Byte Ptr,drawcount_:Int,maxdrawcount_:Int,stride_:Int)="void __glewMultiDrawElementsIndirectCountARB( GLenum, GLenum,const void*, GLintptr, GLsizei, GLsizei)!"
Const GL_ARB_instanced_arrays=1
Const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB=$88FE
Global glDrawArraysInstancedARB(mode_:Int,first_:Int,count_:Int,primcount_:Int)="void __glewDrawArraysInstancedARB( GLenum, GLint, GLsizei, GLsizei)!"
Global glDrawElementsInstancedARB(mode_:Int,count_:Int,type_:Int,indices_:Byte Ptr,primcount_:Int)="void __glewDrawElementsInstancedARB( GLenum, GLsizei, GLenum,const void*, GLsizei)!"
Global glVertexAttribDivisorARB(index_:Int,divisor_:Int)="void __glewVertexAttribDivisorARB( GLuint, GLuint)!"
Const GL_ARB_internalformat_query=1
Const GL_NUM_SAMPLE_COUNTS=$9380
Global glGetInternalformativ(target_:Int,internalformat_:Int,pname_:Int,bufSize_:Int,params_:Int Ptr)="void __glewGetInternalformativ( GLenum, GLenum, GLenum, GLsizei, GLint*)!"
Const GL_ARB_internalformat_query2=1
Const GL_INTERNALFORMAT_SUPPORTED=$826F
Const GL_INTERNALFORMAT_PREFERRED=$8270
Const GL_INTERNALFORMAT_RED_SIZE=$8271
Const GL_INTERNALFORMAT_GREEN_SIZE=$8272
Const GL_INTERNALFORMAT_BLUE_SIZE=$8273
Const GL_INTERNALFORMAT_ALPHA_SIZE=$8274
Const GL_INTERNALFORMAT_DEPTH_SIZE=$8275
Const GL_INTERNALFORMAT_STENCIL_SIZE=$8276
Const GL_INTERNALFORMAT_SHARED_SIZE=$8277
Const GL_INTERNALFORMAT_RED_TYPE=$8278
Const GL_INTERNALFORMAT_GREEN_TYPE=$8279
Const GL_INTERNALFORMAT_BLUE_TYPE=$827A
Const GL_INTERNALFORMAT_ALPHA_TYPE=$827B
Const GL_INTERNALFORMAT_DEPTH_TYPE=$827C
Const GL_INTERNALFORMAT_STENCIL_TYPE=$827D
Const GL_MAX_WIDTH=$827E
Const GL_MAX_HEIGHT=$827F
Const GL_MAX_DEPTH=$8280
Const GL_MAX_LAYERS=$8281
Const GL_MAX_COMBINED_DIMENSIONS=$8282
Const GL_COLOR_COMPONENTS=$8283
Const GL_DEPTH_COMPONENTS=$8284
Const GL_STENCIL_COMPONENTS=$8285
Const GL_COLOR_RENDERABLE=$8286
Const GL_DEPTH_RENDERABLE=$8287
Const GL_STENCIL_RENDERABLE=$8288
Const GL_FRAMEBUFFER_RENDERABLE=$8289
Const GL_FRAMEBUFFER_RENDERABLE_LAYERED=$828A
Const GL_FRAMEBUFFER_BLEND=$828B
Const GL_READ_PIXELS=$828C
Const GL_READ_PIXELS_FORMAT=$828D
Const GL_READ_PIXELS_TYPE=$828E
Const GL_TEXTURE_IMAGE_FORMAT=$828F
Const GL_TEXTURE_IMAGE_TYPE=$8290
Const GL_GET_TEXTURE_IMAGE_FORMAT=$8291
Const GL_GET_TEXTURE_IMAGE_TYPE=$8292
Const GL_MIPMAP=$8293
Const GL_MANUAL_GENERATE_MIPMAP=$8294
Const GL_AUTO_GENERATE_MIPMAP=$8295
Const GL_COLOR_ENCODING=$8296
Const GL_SRGB_READ=$8297
Const GL_SRGB_WRITE=$8298
Const GL_SRGB_DECODE_ARB=$8299
Const GL_FILTER=$829A
Const GL_VERTEX_TEXTURE=$829B
Const GL_TESS_CONTROL_TEXTURE=$829C
Const GL_TESS_EVALUATION_TEXTURE=$829D
Const GL_GEOMETRY_TEXTURE=$829E
Const GL_FRAGMENT_TEXTURE=$829F
Const GL_COMPUTE_TEXTURE=$82A0
Const GL_TEXTURE_SHADOW=$82A1
Const GL_TEXTURE_GATHER=$82A2
Const GL_TEXTURE_GATHER_SHADOW=$82A3
Const GL_SHADER_IMAGE_LOAD=$82A4
Const GL_SHADER_IMAGE_STORE=$82A5
Const GL_SHADER_IMAGE_ATOMIC=$82A6
Const GL_IMAGE_TEXEL_SIZE=$82A7
Const GL_IMAGE_COMPATIBILITY_CLASS=$82A8
Const GL_IMAGE_PIXEL_FORMAT=$82A9
Const GL_IMAGE_PIXEL_TYPE=$82AA
Const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST=$82AC
Const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST=$82AD
Const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE=$82AE
Const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE=$82AF
Const GL_TEXTURE_COMPRESSED_BLOCK_WIDTH=$82B1
Const GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT=$82B2
Const GL_TEXTURE_COMPRESSED_BLOCK_SIZE=$82B3
Const GL_CLEAR_BUFFER=$82B4
Const GL_TEXTURE_VIEW=$82B5
Const GL_VIEW_COMPATIBILITY_CLASS=$82B6
Const GL_FULL_SUPPORT=$82B7
Const GL_CAVEAT_SUPPORT=$82B8
Const GL_IMAGE_CLASS_4_X_32=$82B9
Const GL_IMAGE_CLASS_2_X_32=$82BA
Const GL_IMAGE_CLASS_1_X_32=$82BB
Const GL_IMAGE_CLASS_4_X_16=$82BC
Const GL_IMAGE_CLASS_2_X_16=$82BD
Const GL_IMAGE_CLASS_1_X_16=$82BE
Const GL_IMAGE_CLASS_4_X_8=$82BF
Const GL_IMAGE_CLASS_2_X_8=$82C0
Const GL_IMAGE_CLASS_1_X_8=$82C1
Const GL_IMAGE_CLASS_11_11_10=$82C2
Const GL_IMAGE_CLASS_10_10_10_2=$82C3
Const GL_VIEW_CLASS_128_BITS=$82C4
Const GL_VIEW_CLASS_96_BITS=$82C5
Const GL_VIEW_CLASS_64_BITS=$82C6
Const GL_VIEW_CLASS_48_BITS=$82C7
Const GL_VIEW_CLASS_32_BITS=$82C8
Const GL_VIEW_CLASS_24_BITS=$82C9
Const GL_VIEW_CLASS_16_BITS=$82CA
Const GL_VIEW_CLASS_8_BITS=$82CB
Const GL_VIEW_CLASS_S3TC_DXT1_RGB=$82CC
Const GL_VIEW_CLASS_S3TC_DXT1_RGBA=$82CD
Const GL_VIEW_CLASS_S3TC_DXT3_RGBA=$82CE
Const GL_VIEW_CLASS_S3TC_DXT5_RGBA=$82CF
Const GL_VIEW_CLASS_RGTC1_RED=$82D0
Const GL_VIEW_CLASS_RGTC2_RG=$82D1
Const GL_VIEW_CLASS_BPTC_UNORM=$82D2
Const GL_VIEW_CLASS_BPTC_FLOAT=$82D3
Global glGetInternalformati64v(target_:Int,internalformat_:Int,pname_:Int,bufSize_:Int,params_:Long Ptr)="void __glewGetInternalformati64v( GLenum, GLenum, GLenum, GLsizei, GLint64*)!"
Const GL_ARB_invalidate_subdata=1
Global glInvalidateBufferData(buffer_:Int)="void __glewInvalidateBufferData( GLuint)!"
Global glInvalidateBufferSubData(buffer_:Int,offset_:Int,length_:Int)="void __glewInvalidateBufferSubData( GLuint, GLintptr, GLsizeiptr)!"
Global glInvalidateFramebuffer(target_:Int,numAttachments_:Int,attachments_:Int Ptr)="void __glewInvalidateFramebuffer( GLenum, GLsizei,const GLenum*)!"
Global glInvalidateSubFramebuffer(target_:Int,numAttachments_:Int,attachments_:Int Ptr,x_:Int,y_:Int,width_:Int,height_:Int)="void __glewInvalidateSubFramebuffer( GLenum, GLsizei,const GLenum*, GLint, GLint, GLsizei, GLsizei)!"
Global glInvalidateTexImage(texture_:Int,level_:Int)="void __glewInvalidateTexImage( GLuint, GLint)!"
Global glInvalidateTexSubImage(texture_:Int,level_:Int,xoffset_:Int,yoffset_:Int,zoffset_:Int,width_:Int,height_:Int,depth_:Int)="void __glewInvalidateTexSubImage( GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei)!"
Const GL_ARB_map_buffer_alignment=1
Const GL_MIN_MAP_BUFFER_ALIGNMENT=$90BC
Const GL_ARB_map_buffer_range=1
Const GL_MAP_INVALIDATE_RANGE_BIT=$0004
Const GL_MAP_INVALIDATE_BUFFER_BIT=$0008
Const GL_MAP_FLUSH_EXPLICIT_BIT=$0010
Const GL_MAP_UNSYNCHRONIZED_BIT=$0020
Global glFlushMappedBufferRange(target_:Int,offset_:Int,length_:Int)="void __glewFlushMappedBufferRange( GLenum, GLintptr, GLsizeiptr)!"
Global glMapBufferRange:Byte Ptr(target_:Int,offset_:Int,length_:Int,access_:Int)="void* __glewMapBufferRange( GLenum, GLintptr, GLsizeiptr, GLbitfield)!"
Const GL_ARB_matrix_palette=1
Const GL_MATRIX_PALETTE_ARB=$8840
Const GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB=$8841
Const GL_MAX_PALETTE_MATRICES_ARB=$8842
Const GL_CURRENT_PALETTE_MATRIX_ARB=$8843
Const GL_MATRIX_INDEX_ARRAY_ARB=$8844
Const GL_CURRENT_MATRIX_INDEX_ARB=$8845
Const GL_MATRIX_INDEX_ARRAY_SIZE_ARB=$8846
Const GL_MATRIX_INDEX_ARRAY_TYPE_ARB=$8847
Const GL_MATRIX_INDEX_ARRAY_STRIDE_ARB=$8848
Const GL_MATRIX_INDEX_ARRAY_POINTER_ARB=$8849
Global glCurrentPaletteMatrixARB(index_:Int)="void __glewCurrentPaletteMatrixARB( GLint)!"
Global glMatrixIndexPointerARB(size_:Int,type_:Int,stride_:Int,pointer_:Byte Ptr)="void __glewMatrixIndexPointerARB( GLint, GLenum, GLsizei, void*)!"
Global glMatrixIndexubvARB(size_:Int,indices_:Byte Ptr)="void __glewMatrixIndexubvARB( GLint, GLubyte*)!"
Global glMatrixIndexuivARB(size_:Int,indices_:Int Ptr)="void __glewMatrixIndexuivARB( GLint, GLuint*)!"
Global glMatrixIndexusvARB(size_:Int,indices_:Short Ptr)="void __glewMatrixIndexusvARB( GLint, GLushort*)!"
Const GL_ARB_multi_bind=1
Global glBindBuffersBase(target_:Int,first_:Int,count_:Int,buffers_:Int Ptr)="void __glewBindBuffersBase( GLenum, GLuint, GLsizei,const GLuint*)!"
Global glBindBuffersRange(target_:Int,first_:Int,count_:Int,buffers_:Int Ptr,offsets_:Int Ptr,sizes_:Int Ptr)="void __glewBindBuffersRange( GLenum, GLuint, GLsizei,const GLuint*,const GLintptr*,const GLsizeiptr*)!"
Global glBindImageTextures(first_:Int,count_:Int,textures_:Int Ptr)="void __glewBindImageTextures( GLuint, GLsizei,const GLuint*)!"
Global glBindSamplers(first_:Int,count_:Int,samplers_:Int Ptr)="void __glewBindSamplers( GLuint, GLsizei,const GLuint*)!"
Global glBindTextures(first_:Int,count_:Int,textures_:Int Ptr)="void __glewBindTextures( GLuint, GLsizei,const GLuint*)!"
Global glBindVertexBuffers(first_:Int,count_:Int,buffers_:Int Ptr,offsets_:Int Ptr,strides_:Int Ptr)="void __glewBindVertexBuffers( GLuint, GLsizei,const GLuint*,const GLintptr*,const GLsizei*)!"
Const GL_ARB_multi_draw_indirect=1
Global glMultiDrawArraysIndirect(mode_:Int,indirect_:Byte Ptr,primcount_:Int,stride_:Int)="void __glewMultiDrawArraysIndirect( GLenum,const void*, GLsizei, GLsizei)!"
Global glMultiDrawElementsIndirect(mode_:Int,type_:Int,indirect_:Byte Ptr,primcount_:Int,stride_:Int)="void __glewMultiDrawElementsIndirect( GLenum, GLenum,const void*, GLsizei, GLsizei)!"
Const GL_ARB_multisample=1
Const GL_MULTISAMPLE_ARB=$809D
Const GL_SAMPLE_ALPHA_TO_COVERAGE_ARB=$809E
Const GL_SAMPLE_ALPHA_TO_ONE_ARB=$809F
Const GL_SAMPLE_COVERAGE_ARB=$80A0
Const GL_SAMPLE_BUFFERS_ARB=$80A8
Const GL_SAMPLES_ARB=$80A9
Const GL_SAMPLE_COVERAGE_VALUE_ARB=$80AA
Const GL_SAMPLE_COVERAGE_INVERT_ARB=$80AB
Const GL_MULTISAMPLE_BIT_ARB=$20000000
Global glSampleCoverageARB(value_:Float,invert_:Byte)="void __glewSampleCoverageARB( GLclampf, GLboolean)!"
Const GL_ARB_multitexture=1
Const GL_TEXTURE0_ARB=$84C0
Const GL_TEXTURE1_ARB=$84C1
Const GL_TEXTURE2_ARB=$84C2
Const GL_TEXTURE3_ARB=$84C3
Const GL_TEXTURE4_ARB=$84C4
Const GL_TEXTURE5_ARB=$84C5
Const GL_TEXTURE6_ARB=$84C6
Const GL_TEXTURE7_ARB=$84C7
Const GL_TEXTURE8_ARB=$84C8
Const GL_TEXTURE9_ARB=$84C9
Const GL_TEXTURE10_ARB=$84CA
Const GL_TEXTURE11_ARB=$84CB
Const GL_TEXTURE12_ARB=$84CC
Const GL_TEXTURE13_ARB=$84CD
Const GL_TEXTURE14_ARB=$84CE
Const GL_TEXTURE15_ARB=$84CF
Const GL_TEXTURE16_ARB=$84D0
Const GL_TEXTURE17_ARB=$84D1
Const GL_TEXTURE18_ARB=$84D2
Const GL_TEXTURE19_ARB=$84D3
Const GL_TEXTURE20_ARB=$84D4
Const GL_TEXTURE21_ARB=$84D5
Const GL_TEXTURE22_ARB=$84D6
Const GL_TEXTURE23_ARB=$84D7
Const GL_TEXTURE24_ARB=$84D8
Const GL_TEXTURE25_ARB=$84D9
Const GL_TEXTURE26_ARB=$84DA
Const GL_TEXTURE27_ARB=$84DB
Const GL_TEXTURE28_ARB=$84DC
Const GL_TEXTURE29_ARB=$84DD
Const GL_TEXTURE30_ARB=$84DE
Const GL_TEXTURE31_ARB=$84DF
Const GL_ACTIVE_TEXTURE_ARB=$84E0
Const GL_CLIENT_ACTIVE_TEXTURE_ARB=$84E1
Const GL_MAX_TEXTURE_UNITS_ARB=$84E2
Global glActiveTextureARB(texture_:Int)="void __glewActiveTextureARB( GLenum)!"
Global glClientActiveTextureARB(texture_:Int)="void __glewClientActiveTextureARB( GLenum)!"
Global glMultiTexCoord1dARB(target_:Int,s_:Double)="void __glewMultiTexCoord1dARB( GLenum, GLdouble)!"
Global glMultiTexCoord1dvARB(target_:Int,v_:Double Ptr)="void __glewMultiTexCoord1dvARB( GLenum,const GLdouble*)!"
Global glMultiTexCoord1fARB(target_:Int,s_:Float)="void __glewMultiTexCoord1fARB( GLenum, GLfloat)!"
Global glMultiTexCoord1fvARB(target_:Int,v_:Float Ptr)="void __glewMultiTexCoord1fvARB( GLenum,const GLfloat*)!"
Global glMultiTexCoord1iARB(target_:Int,s_:Int)="void __glewMultiTexCoord1iARB( GLenum, GLint)!"
Global glMultiTexCoord1ivARB(target_:Int,v_:Int Ptr)="void __glewMultiTexCoord1ivARB( GLenum,const GLint*)!"
Global glMultiTexCoord1sARB(target_:Int,s_:Short)="void __glewMultiTexCoord1sARB( GLenum, GLshort)!"
Global glMultiTexCoord1svARB(target_:Int,v_:Short Ptr)="void __glewMultiTexCoord1svARB( GLenum,const GLshort*)!"
Global glMultiTexCoord2dARB(target_:Int,s_:Double,t_:Double)="void __glewMultiTexCoord2dARB( GLenum, GLdouble, GLdouble)!"
Global glMultiTexCoord2dvARB(target_:Int,v_:Double Ptr)="void __glewMultiTexCoord2dvARB( GLenum,const GLdouble*)!"
Global glMultiTexCoord2fARB(target_:Int,s_:Float,t_:Float)="void __glewMultiTexCoord2fARB( GLenum, GLfloat, GLfloat)!"

End Extern
