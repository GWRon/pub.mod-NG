'
' NOTE : Generated file. Do not edit. Your changes may be lost on the next update!
'        Generated by g2bmx on 24 Mar 2018
'
Strict

Import "GL/glew.h"

Extern "Os"

Global glVertexAttrib3fv(index_:Int,v_:Float Ptr)="void __glewVertexAttrib3fv( GLuint,const GLfloat*)!"
Global glVertexAttrib3s(index_:Int,x_:Short,y_:Short,z_:Short)="void __glewVertexAttrib3s( GLuint, GLshort, GLshort, GLshort)!"
Global glVertexAttrib3sv(index_:Int,v_:Short Ptr)="void __glewVertexAttrib3sv( GLuint,const GLshort*)!"
Global glVertexAttrib4Nbv(index_:Int,v_:Byte Ptr)="void __glewVertexAttrib4Nbv( GLuint,const GLbyte*)!"
Global glVertexAttrib4Niv(index_:Int,v_:Int Ptr)="void __glewVertexAttrib4Niv( GLuint,const GLint*)!"
Global glVertexAttrib4Nsv(index_:Int,v_:Short Ptr)="void __glewVertexAttrib4Nsv( GLuint,const GLshort*)!"
Global glVertexAttrib4Nub(index_:Int,x_:Byte,y_:Byte,z_:Byte,w_:Byte)="void __glewVertexAttrib4Nub( GLuint, GLubyte, GLubyte, GLubyte, GLubyte)!"
Global glVertexAttrib4Nubv(index_:Int,v_:Byte Ptr)="void __glewVertexAttrib4Nubv( GLuint,const GLubyte*)!"
Global glVertexAttrib4Nuiv(index_:Int,v_:Int Ptr)="void __glewVertexAttrib4Nuiv( GLuint,const GLuint*)!"
Global glVertexAttrib4Nusv(index_:Int,v_:Short Ptr)="void __glewVertexAttrib4Nusv( GLuint,const GLushort*)!"
Global glVertexAttrib4bv(index_:Int,v_:Byte Ptr)="void __glewVertexAttrib4bv( GLuint,const GLbyte*)!"
Global glVertexAttrib4d(index_:Int,x_:Double,y_:Double,z_:Double,w_:Double)="void __glewVertexAttrib4d( GLuint, GLdouble, GLdouble, GLdouble, GLdouble)!"
Global glVertexAttrib4dv(index_:Int,v_:Double Ptr)="void __glewVertexAttrib4dv( GLuint,const GLdouble*)!"
Global glVertexAttrib4f(index_:Int,x_:Float,y_:Float,z_:Float,w_:Float)="void __glewVertexAttrib4f( GLuint, GLfloat, GLfloat, GLfloat, GLfloat)!"
Global glVertexAttrib4fv(index_:Int,v_:Float Ptr)="void __glewVertexAttrib4fv( GLuint,const GLfloat*)!"
Global glVertexAttrib4iv(index_:Int,v_:Int Ptr)="void __glewVertexAttrib4iv( GLuint,const GLint*)!"
Global glVertexAttrib4s(index_:Int,x_:Short,y_:Short,z_:Short,w_:Short)="void __glewVertexAttrib4s( GLuint, GLshort, GLshort, GLshort, GLshort)!"
Global glVertexAttrib4sv(index_:Int,v_:Short Ptr)="void __glewVertexAttrib4sv( GLuint,const GLshort*)!"
Global glVertexAttrib4ubv(index_:Int,v_:Byte Ptr)="void __glewVertexAttrib4ubv( GLuint,const GLubyte*)!"
Global glVertexAttrib4uiv(index_:Int,v_:Int Ptr)="void __glewVertexAttrib4uiv( GLuint,const GLuint*)!"
Global glVertexAttrib4usv(index_:Int,v_:Short Ptr)="void __glewVertexAttrib4usv( GLuint,const GLushort*)!"
Global glVertexAttribPointer(index_:Int,size_:Int,type_:Int,normalized_:Byte,stride_:Int,pointer_:Byte Ptr)="void __glewVertexAttribPointer( GLuint, GLint, GLenum, GLboolean, GLsizei,const void*)!"
Global GL_VERSION_2_0:Byte="__GLEW_VERSION_2_0"
Const GL_CURRENT_RASTER_SECONDARY_COLOR=$845F
Const GL_PIXEL_PACK_BUFFER=$88EB
Const GL_PIXEL_UNPACK_BUFFER=$88EC
Const GL_PIXEL_PACK_BUFFER_BINDING=$88ED
Const GL_PIXEL_UNPACK_BUFFER_BINDING=$88EF
Const GL_FLOAT_MAT2x3=$8B65
Const GL_FLOAT_MAT2x4=$8B66
Const GL_FLOAT_MAT3x2=$8B67
Const GL_FLOAT_MAT3x4=$8B68
Const GL_FLOAT_MAT4x2=$8B69
Const GL_FLOAT_MAT4x3=$8B6A
Const GL_SRGB=$8C40
Const GL_SRGB8=$8C41
Const GL_SRGB_ALPHA=$8C42
Const GL_SRGB8_ALPHA8=$8C43
Const GL_SLUMINANCE_ALPHA=$8C44
Const GL_SLUMINANCE8_ALPHA8=$8C45
Const GL_SLUMINANCE=$8C46
Const GL_SLUMINANCE8=$8C47
Const GL_COMPRESSED_SRGB=$8C48
Const GL_COMPRESSED_SRGB_ALPHA=$8C49
Const GL_COMPRESSED_SLUMINANCE=$8C4A
Const GL_COMPRESSED_SLUMINANCE_ALPHA=$8C4B
Global glUniformMatrix2x3fv(location_:Int,count_:Int,transpose_:Byte,value_:Float Ptr)="void __glewUniformMatrix2x3fv( GLint, GLsizei, GLboolean,const GLfloat*)!"
Global glUniformMatrix2x4fv(location_:Int,count_:Int,transpose_:Byte,value_:Float Ptr)="void __glewUniformMatrix2x4fv( GLint, GLsizei, GLboolean,const GLfloat*)!"
Global glUniformMatrix3x2fv(location_:Int,count_:Int,transpose_:Byte,value_:Float Ptr)="void __glewUniformMatrix3x2fv( GLint, GLsizei, GLboolean,const GLfloat*)!"
Global glUniformMatrix3x4fv(location_:Int,count_:Int,transpose_:Byte,value_:Float Ptr)="void __glewUniformMatrix3x4fv( GLint, GLsizei, GLboolean,const GLfloat*)!"
Global glUniformMatrix4x2fv(location_:Int,count_:Int,transpose_:Byte,value_:Float Ptr)="void __glewUniformMatrix4x2fv( GLint, GLsizei, GLboolean,const GLfloat*)!"
Global glUniformMatrix4x3fv(location_:Int,count_:Int,transpose_:Byte,value_:Float Ptr)="void __glewUniformMatrix4x3fv( GLint, GLsizei, GLboolean,const GLfloat*)!"
Global GL_VERSION_2_1:Byte="__GLEW_VERSION_2_1"
Const GL_CLIP_DISTANCE0=$3000
Const GL_CLIP_DISTANCE1=$3001
Const GL_CLIP_DISTANCE2=$3002
Const GL_CLIP_DISTANCE3=$3003
Const GL_CLIP_DISTANCE4=$3004
Const GL_CLIP_DISTANCE5=$3005
Const GL_MAX_CLIP_DISTANCES=$0D32
Const GL_MAX_VARYING_COMPONENTS=$8B4B
Const GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT=$0001
Const GL_MAJOR_VERSION=$821B
Const GL_MINOR_VERSION=$821C
Const GL_NUM_EXTENSIONS=$821D
Const GL_CONTEXT_FLAGS=$821E
Const GL_DEPTH_BUFFER=$8223
Const GL_STENCIL_BUFFER=$8224
Const GL_RGBA32F=$8814
Const GL_RGB32F=$8815
Const GL_RGBA16F=$881A
Const GL_RGB16F=$881B
Const GL_VERTEX_ATTRIB_ARRAY_INTEGER=$88FD
Const GL_MAX_ARRAY_TEXTURE_LAYERS=$88FF
Const GL_MIN_PROGRAM_TEXEL_OFFSET=$8904
Const GL_MAX_PROGRAM_TEXEL_OFFSET=$8905
Const GL_CLAMP_VERTEX_COLOR=$891A
Const GL_CLAMP_FRAGMENT_COLOR=$891B
Const GL_CLAMP_READ_COLOR=$891C
Const GL_FIXED_ONLY=$891D
Const GL_TEXTURE_RED_TYPE=$8C10
Const GL_TEXTURE_GREEN_TYPE=$8C11
Const GL_TEXTURE_BLUE_TYPE=$8C12
Const GL_TEXTURE_ALPHA_TYPE=$8C13
Const GL_TEXTURE_LUMINANCE_TYPE=$8C14
Const GL_TEXTURE_INTENSITY_TYPE=$8C15
Const GL_TEXTURE_DEPTH_TYPE=$8C16
Const GL_TEXTURE_1D_ARRAY=$8C18
Const GL_PROXY_TEXTURE_1D_ARRAY=$8C19
Const GL_TEXTURE_2D_ARRAY=$8C1A
Const GL_PROXY_TEXTURE_2D_ARRAY=$8C1B
Const GL_TEXTURE_BINDING_1D_ARRAY=$8C1C
Const GL_TEXTURE_BINDING_2D_ARRAY=$8C1D
Const GL_R11F_G11F_B10F=$8C3A
Const GL_UNSIGNED_INT_10F_11F_11F_REV=$8C3B
Const GL_RGB9_E5=$8C3D
Const GL_UNSIGNED_INT_5_9_9_9_REV=$8C3E
Const GL_TEXTURE_SHARED_SIZE=$8C3F
Const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH=$8C76
Const GL_TRANSFORM_FEEDBACK_BUFFER_MODE=$8C7F
Const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=$8C80
Const GL_TRANSFORM_FEEDBACK_VARYINGS=$8C83
Const GL_TRANSFORM_FEEDBACK_BUFFER_START=$8C84
Const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE=$8C85
Const GL_PRIMITIVES_GENERATED=$8C87
Const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=$8C88
Const GL_RASTERIZER_DISCARD=$8C89
Const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=$8C8A
Const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=$8C8B
Const GL_INTERLEAVED_ATTRIBS=$8C8C
Const GL_SEPARATE_ATTRIBS=$8C8D
Const GL_TRANSFORM_FEEDBACK_BUFFER=$8C8E
Const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING=$8C8F
Const GL_RGBA32UI=$8D70
Const GL_RGB32UI=$8D71
Const GL_RGBA16UI=$8D76
Const GL_RGB16UI=$8D77
Const GL_RGBA8UI=$8D7C
Const GL_RGB8UI=$8D7D
Const GL_RGBA32I=$8D82
Const GL_RGB32I=$8D83
Const GL_RGBA16I=$8D88
Const GL_RGB16I=$8D89
Const GL_RGBA8I=$8D8E
Const GL_RGB8I=$8D8F
Const GL_RED_INTEGER=$8D94
Const GL_GREEN_INTEGER=$8D95
Const GL_BLUE_INTEGER=$8D96
Const GL_ALPHA_INTEGER=$8D97
Const GL_RGB_INTEGER=$8D98
Const GL_RGBA_INTEGER=$8D99
Const GL_BGR_INTEGER=$8D9A
Const GL_BGRA_INTEGER=$8D9B
Const GL_SAMPLER_1D_ARRAY=$8DC0
Const GL_SAMPLER_2D_ARRAY=$8DC1
Const GL_SAMPLER_1D_ARRAY_SHADOW=$8DC3
Const GL_SAMPLER_2D_ARRAY_SHADOW=$8DC4
Const GL_SAMPLER_CUBE_SHADOW=$8DC5
Const GL_UNSIGNED_INT_VEC2=$8DC6
Const GL_UNSIGNED_INT_VEC3=$8DC7
Const GL_UNSIGNED_INT_VEC4=$8DC8
Const GL_INT_SAMPLER_1D=$8DC9
Const GL_INT_SAMPLER_2D=$8DCA
Const GL_INT_SAMPLER_3D=$8DCB
Const GL_INT_SAMPLER_CUBE=$8DCC
Const GL_INT_SAMPLER_1D_ARRAY=$8DCE
Const GL_INT_SAMPLER_2D_ARRAY=$8DCF
Const GL_UNSIGNED_INT_SAMPLER_1D=$8DD1
Const GL_UNSIGNED_INT_SAMPLER_2D=$8DD2
Const GL_UNSIGNED_INT_SAMPLER_3D=$8DD3
Const GL_UNSIGNED_INT_SAMPLER_CUBE=$8DD4
Const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY=$8DD6
Const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY=$8DD7
Const GL_QUERY_WAIT=$8E13
Const GL_QUERY_NO_WAIT=$8E14
Const GL_QUERY_BY_REGION_WAIT=$8E15
Const GL_QUERY_BY_REGION_NO_WAIT=$8E16
Global glBeginConditionalRender(id_:Int,mode_:Int)="void __glewBeginConditionalRender( GLuint, GLenum)!"
Global glBeginTransformFeedback(primitiveMode_:Int)="void __glewBeginTransformFeedback( GLenum)!"
Global glBindFragDataLocation(program_:Int,colorNumber_:Int,name_:Byte Ptr)="void __glewBindFragDataLocation( GLuint, GLuint,const GLchar*)!"
Global glClampColor(target_:Int,clamp_:Int)="void __glewClampColor( GLenum, GLenum)!"
Global glClearBufferfi(buffer_:Int,drawBuffer_:Int,depth_:Float,stencil_:Int)="void __glewClearBufferfi( GLenum, GLint, GLfloat, GLint)!"
Global glClearBufferfv(buffer_:Int,drawBuffer_:Int,value_:Float Ptr)="void __glewClearBufferfv( GLenum, GLint,const GLfloat*)!"
Global glClearBufferiv(buffer_:Int,drawBuffer_:Int,value_:Int Ptr)="void __glewClearBufferiv( GLenum, GLint,const GLint*)!"
Global glClearBufferuiv(buffer_:Int,drawBuffer_:Int,value_:Int Ptr)="void __glewClearBufferuiv( GLenum, GLint,const GLuint*)!"
Global glColorMaski(buf_:Int,red_:Byte,green_:Byte,blue_:Byte,alpha_:Byte)="void __glewColorMaski( GLuint, GLboolean, GLboolean, GLboolean, GLboolean)!"
Global glDisablei(cap_:Int,index_:Int)="void __glewDisablei( GLenum, GLuint)!"
Global glEnablei(cap_:Int,index_:Int)="void __glewEnablei( GLenum, GLuint)!"
Global glEndConditionalRender()="void __glewEndConditionalRender( void)!"
Global glEndTransformFeedback()="void __glewEndTransformFeedback( void)!"
Global glGetBooleani_v(pname_:Int,index_:Int,data_:Byte Ptr)="void __glewGetBooleani_v( GLenum, GLuint, GLboolean*)!"
Global glGetFragDataLocation:Int(program_:Int,name_:Byte Ptr)="GLint __glewGetFragDataLocation( GLuint,const GLchar*)!"
Global glGetStringi:Byte Ptr(name_:Int,index_:Int)="const GLubyte* __glewGetStringi( GLenum, GLuint)!"
Global glGetTexParameterIiv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewGetTexParameterIiv( GLenum, GLenum, GLint*)!"
Global glGetTexParameterIuiv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewGetTexParameterIuiv( GLenum, GLenum, GLuint*)!"
Global glGetTransformFeedbackVarying(program_:Int,index_:Int,bufSize_:Int,length_:Int Ptr,size_:Int Ptr,type_:Int Ptr,name_:Byte Ptr)="void __glewGetTransformFeedbackVarying( GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*)!"
Global glGetUniformuiv(program_:Int,location_:Int,params_:Int Ptr)="void __glewGetUniformuiv( GLuint, GLint, GLuint*)!"
Global glGetVertexAttribIiv(index_:Int,pname_:Int,params_:Int Ptr)="void __glewGetVertexAttribIiv( GLuint, GLenum, GLint*)!"
Global glGetVertexAttribIuiv(index_:Int,pname_:Int,params_:Int Ptr)="void __glewGetVertexAttribIuiv( GLuint, GLenum, GLuint*)!"
Global glIsEnabledi:Byte(cap_:Int,index_:Int)="GLboolean __glewIsEnabledi( GLenum, GLuint)!"
Global glTexParameterIiv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewTexParameterIiv( GLenum, GLenum,const GLint*)!"
Global glTexParameterIuiv(target_:Int,pname_:Int,params_:Int Ptr)="void __glewTexParameterIuiv( GLenum, GLenum,const GLuint*)!"
Global glTransformFeedbackVaryings(program_:Int,count_:Int,varyings_:Byte Ptr Ptr,bufferMode_:Int)="void __glewTransformFeedbackVaryings( GLuint, GLsizei,const GLchar* const*, GLenum)!"
Global glUniform1ui(location_:Int,v0_:Int)="void __glewUniform1ui( GLint, GLuint)!"
Global glUniform1uiv(location_:Int,count_:Int,value_:Int Ptr)="void __glewUniform1uiv( GLint, GLsizei,const GLuint*)!"
Global glUniform2ui(location_:Int,v0_:Int,v1_:Int)="void __glewUniform2ui( GLint, GLuint, GLuint)!"
Global glUniform2uiv(location_:Int,count_:Int,value_:Int Ptr)="void __glewUniform2uiv( GLint, GLsizei,const GLuint*)!"
Global glUniform3ui(location_:Int,v0_:Int,v1_:Int,v2_:Int)="void __glewUniform3ui( GLint, GLuint, GLuint, GLuint)!"
Global glUniform3uiv(location_:Int,count_:Int,value_:Int Ptr)="void __glewUniform3uiv( GLint, GLsizei,const GLuint*)!"
Global glUniform4ui(location_:Int,v0_:Int,v1_:Int,v2_:Int,v3_:Int)="void __glewUniform4ui( GLint, GLuint, GLuint, GLuint, GLuint)!"
Global glUniform4uiv(location_:Int,count_:Int,value_:Int Ptr)="void __glewUniform4uiv( GLint, GLsizei,const GLuint*)!"
Global glVertexAttribI1i(index_:Int,v0_:Int)="void __glewVertexAttribI1i( GLuint, GLint)!"
Global glVertexAttribI1iv(index_:Int,v0_:Int Ptr)="void __glewVertexAttribI1iv( GLuint,const GLint*)!"
Global glVertexAttribI1ui(index_:Int,v0_:Int)="void __glewVertexAttribI1ui( GLuint, GLuint)!"
Global glVertexAttribI1uiv(index_:Int,v0_:Int Ptr)="void __glewVertexAttribI1uiv( GLuint,const GLuint*)!"
Global glVertexAttribI2i(index_:Int,v0_:Int,v1_:Int)="void __glewVertexAttribI2i( GLuint, GLint, GLint)!"
Global glVertexAttribI2iv(index_:Int,v0_:Int Ptr)="void __glewVertexAttribI2iv( GLuint,const GLint*)!"
Global glVertexAttribI2ui(index_:Int,v0_:Int,v1_:Int)="void __glewVertexAttribI2ui( GLuint, GLuint, GLuint)!"
Global glVertexAttribI2uiv(index_:Int,v0_:Int Ptr)="void __glewVertexAttribI2uiv( GLuint,const GLuint*)!"
Global glVertexAttribI3i(index_:Int,v0_:Int,v1_:Int,v2_:Int)="void __glewVertexAttribI3i( GLuint, GLint, GLint, GLint)!"
Global glVertexAttribI3iv(index_:Int,v0_:Int Ptr)="void __glewVertexAttribI3iv( GLuint,const GLint*)!"
Global glVertexAttribI3ui(index_:Int,v0_:Int,v1_:Int,v2_:Int)="void __glewVertexAttribI3ui( GLuint, GLuint, GLuint, GLuint)!"
Global glVertexAttribI3uiv(index_:Int,v0_:Int Ptr)="void __glewVertexAttribI3uiv( GLuint,const GLuint*)!"
Global glVertexAttribI4bv(index_:Int,v0_:Byte Ptr)="void __glewVertexAttribI4bv( GLuint,const GLbyte*)!"
Global glVertexAttribI4i(index_:Int,v0_:Int,v1_:Int,v2_:Int,v3_:Int)="void __glewVertexAttribI4i( GLuint, GLint, GLint, GLint, GLint)!"
Global glVertexAttribI4iv(index_:Int,v0_:Int Ptr)="void __glewVertexAttribI4iv( GLuint,const GLint*)!"
Global glVertexAttribI4sv(index_:Int,v0_:Short Ptr)="void __glewVertexAttribI4sv( GLuint,const GLshort*)!"
Global glVertexAttribI4ubv(index_:Int,v0_:Byte Ptr)="void __glewVertexAttribI4ubv( GLuint,const GLubyte*)!"
Global glVertexAttribI4ui(index_:Int,v0_:Int,v1_:Int,v2_:Int,v3_:Int)="void __glewVertexAttribI4ui( GLuint, GLuint, GLuint, GLuint, GLuint)!"
Global glVertexAttribI4uiv(index_:Int,v0_:Int Ptr)="void __glewVertexAttribI4uiv( GLuint,const GLuint*)!"
Global glVertexAttribI4usv(index_:Int,v0_:Short Ptr)="void __glewVertexAttribI4usv( GLuint,const GLushort*)!"
Global glVertexAttribIPointer(index_:Int,size_:Int,type_:Int,stride_:Int,pointer_:Byte Ptr)="void __glewVertexAttribIPointer( GLuint, GLint, GLenum, GLsizei,const void*)!"
Global GL_VERSION_3_0:Byte="__GLEW_VERSION_3_0"
Const GL_TEXTURE_RECTANGLE=$84F5
Const GL_TEXTURE_BINDING_RECTANGLE=$84F6
Const GL_PROXY_TEXTURE_RECTANGLE=$84F7
Const GL_MAX_RECTANGLE_TEXTURE_SIZE=$84F8
Const GL_SAMPLER_2D_RECT=$8B63
Const GL_SAMPLER_2D_RECT_SHADOW=$8B64
Const GL_TEXTURE_BUFFER=$8C2A
Const GL_MAX_TEXTURE_BUFFER_SIZE=$8C2B
Const GL_TEXTURE_BINDING_BUFFER=$8C2C
Const GL_TEXTURE_BUFFER_DATA_STORE_BINDING=$8C2D
Const GL_TEXTURE_BUFFER_FORMAT=$8C2E
Const GL_SAMPLER_BUFFER=$8DC2
Const GL_INT_SAMPLER_2D_RECT=$8DCD
Const GL_INT_SAMPLER_BUFFER=$8DD0
Const GL_UNSIGNED_INT_SAMPLER_2D_RECT=$8DD5
Const GL_UNSIGNED_INT_SAMPLER_BUFFER=$8DD8
Const GL_RED_SNORM=$8F90
Const GL_RG_SNORM=$8F91
Const GL_RGB_SNORM=$8F92
Const GL_RGBA_SNORM=$8F93
Const GL_R8_SNORM=$8F94
Const GL_RG8_SNORM=$8F95
Const GL_RGB8_SNORM=$8F96
Const GL_RGBA8_SNORM=$8F97
Const GL_R16_SNORM=$8F98
Const GL_RG16_SNORM=$8F99
Const GL_RGB16_SNORM=$8F9A
Const GL_RGBA16_SNORM=$8F9B
Const GL_SIGNED_NORMALIZED=$8F9C
Const GL_PRIMITIVE_RESTART=$8F9D
Const GL_PRIMITIVE_RESTART_INDEX=$8F9E
Const GL_BUFFER_ACCESS_FLAGS=$911F
Const GL_BUFFER_MAP_LENGTH=$9120
Const GL_BUFFER_MAP_OFFSET=$9121
Global glDrawArraysInstanced(mode_:Int,first_:Int,count_:Int,primcount_:Int)="void __glewDrawArraysInstanced( GLenum, GLint, GLsizei, GLsizei)!"
Global glDrawElementsInstanced(mode_:Int,count_:Int,type_:Int,indices_:Byte Ptr,primcount_:Int)="void __glewDrawElementsInstanced( GLenum, GLsizei, GLenum,const void*, GLsizei)!"
Global glPrimitiveRestartIndex(buffer_:Int)="void __glewPrimitiveRestartIndex( GLuint)!"
Global glTexBuffer(target_:Int,internalFormat_:Int,buffer_:Int)="void __glewTexBuffer( GLenum, GLenum, GLuint)!"
Global GL_VERSION_3_1:Byte="__GLEW_VERSION_3_1"
Const GL_CONTEXT_CORE_PROFILE_BIT=$00000001
Const GL_CONTEXT_COMPATIBILITY_PROFILE_BIT=$00000002
Const GL_LINES_ADJACENCY=$000A
Const GL_LINE_STRIP_ADJACENCY=$000B
Const GL_TRIANGLES_ADJACENCY=$000C
Const GL_TRIANGLE_STRIP_ADJACENCY=$000D
Const GL_PROGRAM_POINT_SIZE=$8642
Const GL_GEOMETRY_VERTICES_OUT=$8916
Const GL_GEOMETRY_INPUT_TYPE=$8917
Const GL_GEOMETRY_OUTPUT_TYPE=$8918
Const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS=$8C29
Const GL_FRAMEBUFFER_ATTACHMENT_LAYERED=$8DA7
Const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS=$8DA8
Const GL_GEOMETRY_SHADER=$8DD9
Const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS=$8DDF
Const GL_MAX_GEOMETRY_OUTPUT_VERTICES=$8DE0
Const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS=$8DE1
Const GL_MAX_VERTEX_OUTPUT_COMPONENTS=$9122
Const GL_MAX_GEOMETRY_INPUT_COMPONENTS=$9123
Const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS=$9124
Const GL_MAX_FRAGMENT_INPUT_COMPONENTS=$9125
Const GL_CONTEXT_PROFILE_MASK=$9126
Global glFramebufferTexture(target_:Int,attachment_:Int,texture_:Int,level_:Int)="void __glewFramebufferTexture( GLenum, GLenum, GLuint, GLint)!"
Global glGetBufferParameteri64v(target_:Int,value_:Int,data_:Long Ptr)="void __glewGetBufferParameteri64v( GLenum, GLenum, GLint64*)!"
Global glGetInteger64i_v(pname_:Int,index_:Int,data_:Long Ptr)="void __glewGetInteger64i_v( GLenum, GLuint, GLint64*)!"
Global GL_VERSION_3_2:Byte="__GLEW_VERSION_3_2"
Const GL_VERTEX_ATTRIB_ARRAY_DIVISOR=$88FE
Const GL_RGB10_A2UI=$906F
Global glVertexAttribDivisor(index_:Int,divisor_:Int)="void __glewVertexAttribDivisor( GLuint, GLuint)!"
Global GL_VERSION_3_3:Byte="__GLEW_VERSION_3_3"
Const GL_SAMPLE_SHADING=$8C36
Const GL_MIN_SAMPLE_SHADING_VALUE=$8C37
Const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET=$8E5E
Const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET=$8E5F
Const GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS=$8F9F
Const GL_TEXTURE_CUBE_MAP_ARRAY=$9009
Const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY=$900A
Const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY=$900B
Const GL_SAMPLER_CUBE_MAP_ARRAY=$900C
Const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW=$900D
Const GL_INT_SAMPLER_CUBE_MAP_ARRAY=$900E
Const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY=$900F
Global glBlendEquationSeparatei(buf_:Int,modeRGB_:Int,modeAlpha_:Int)="void __glewBlendEquationSeparatei( GLuint, GLenum, GLenum)!"
Global glBlendEquationi(buf_:Int,mode_:Int)="void __glewBlendEquationi( GLuint, GLenum)!"
Global glBlendFuncSeparatei(buf_:Int,srcRGB_:Int,dstRGB_:Int,srcAlpha_:Int,dstAlpha_:Int)="void __glewBlendFuncSeparatei( GLuint, GLenum, GLenum, GLenum, GLenum)!"
Global glBlendFunci(buf_:Int,src_:Int,dst_:Int)="void __glewBlendFunci( GLuint, GLenum, GLenum)!"
Global glMinSampleShading(value_:Float)="void __glewMinSampleShading( GLclampf)!"
Global GL_VERSION_4_0:Byte="__GLEW_VERSION_4_0"
Global GL_VERSION_4_1:Byte="__GLEW_VERSION_4_1"
Const GL_TRANSFORM_FEEDBACK_PAUSED=$8E23
Const GL_TRANSFORM_FEEDBACK_ACTIVE=$8E24
Const GL_COMPRESSED_RGBA_BPTC_UNORM=$8E8C
Const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM=$8E8D
Const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT=$8E8E
Const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT=$8E8F
Const GL_COPY_READ_BUFFER_BINDING=$8F36
Const GL_COPY_WRITE_BUFFER_BINDING=$8F37
Global GL_VERSION_4_2:Byte="__GLEW_VERSION_4_2"
Const GL_NUM_SHADING_LANGUAGE_VERSIONS=$82E9
Const GL_VERTEX_ATTRIB_ARRAY_LONG=$874E
Global GL_VERSION_4_3:Byte="__GLEW_VERSION_4_3"
Const GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED=$8221
Const GL_MAX_VERTEX_ATTRIB_STRIDE=$82E5
Const GL_TEXTURE_BUFFER_BINDING=$8C2A
Global GL_VERSION_4_4:Byte="__GLEW_VERSION_4_4"
Const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT=$00000004
Global glGetGraphicsResetStatus:Int()="GLenum __glewGetGraphicsResetStatus( void)!"
Global glGetnCompressedTexImage(target_:Int,lod_:Int,bufSize_:Int,pixels_:Byte Ptr)="void __glewGetnCompressedTexImage( GLenum, GLint, GLsizei, GLvoid*)!"
Global glGetnTexImage(tex_:Int,level_:Int,format_:Int,type_:Int,bufSize_:Int,pixels_:Byte Ptr)="void __glewGetnTexImage( GLenum, GLint, GLenum, GLenum, GLsizei, GLvoid*)!"
Global glGetnUniformdv(program_:Int,location_:Int,bufSize_:Int,params_:Double Ptr)="void __glewGetnUniformdv( GLuint, GLint, GLsizei, GLdouble*)!"
Global GL_VERSION_4_5:Byte="__GLEW_VERSION_4_5"
Const GL_CONTEXT_FLAG_NO_ERROR_BIT=$00000008
Const GL_PARAMETER_BUFFER=$80EE
Const GL_PARAMETER_BUFFER_BINDING=$80EF
Const GL_TRANSFORM_FEEDBACK_OVERFLOW=$82EC
Const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW=$82ED
Const GL_VERTICES_SUBMITTED=$82EE
Const GL_PRIMITIVES_SUBMITTED=$82EF
Const GL_VERTEX_SHADER_INVOCATIONS=$82F0
Const GL_TESS_CONTROL_SHADER_PATCHES=$82F1
Const GL_TESS_EVALUATION_SHADER_INVOCATIONS=$82F2
Const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED=$82F3
Const GL_FRAGMENT_SHADER_INVOCATIONS=$82F4
Const GL_COMPUTE_SHADER_INVOCATIONS=$82F5
Const GL_CLIPPING_INPUT_PRIMITIVES=$82F6
Const GL_CLIPPING_OUTPUT_PRIMITIVES=$82F7
Const GL_TEXTURE_MAX_ANISOTROPY=$84FE
Const GL_MAX_TEXTURE_MAX_ANISOTROPY=$84FF
Const GL_POLYGON_OFFSET_CLAMP=$8E1B
Const GL_SHADER_BINARY_FORMAT_SPIR_V=$9551
Const GL_SPIR_V_BINARY=$9552
Const GL_SPIR_V_EXTENSIONS=$9553
Const GL_NUM_SPIR_V_EXTENSIONS=$9554
Global glMultiDrawArraysIndirectCount(mode_:Int,indirect_:Byte Ptr,drawcount_:Int,maxdrawcount_:Int,stride_:Int)="void __glewMultiDrawArraysIndirectCount( GLenum,const GLvoid*, GLintptr, GLsizei, GLsizei)!"
Global glMultiDrawElementsIndirectCount(mode_:Int,type_:Int,indirect_:Byte Ptr,drawcount_:Int,maxdrawcount_:Int,stride_:Int)="void __glewMultiDrawElementsIndirectCount( GLenum, GLenum,const GLvoid*, GLintptr, GLsizei, GLsizei)!"
Global glSpecializeShader(shader_:Int,pEntryPoint_:Byte Ptr,numSpecializationConstants_:Int,pConstantIndex_:Int Ptr,pConstantValue_:Int Ptr)="void __glewSpecializeShader( GLuint,const GLchar*, GLuint,const GLuint*,const GLuint*)!"
Global GL_VERSION_4_6:Byte="__GLEW_VERSION_4_6"
Const GL_3DFX_multisample=1
Const GL_MULTISAMPLE_3DFX=$86B2
Const GL_SAMPLE_BUFFERS_3DFX=$86B3
Const GL_SAMPLES_3DFX=$86B4
Const GL_MULTISAMPLE_BIT_3DFX=$20000000
Const GL_3DFX_tbuffer=1
Global glTbufferMask3DFX(mask_:Int)="void __glewTbufferMask3DFX( GLuint)!"
Const GL_3DFX_texture_compression_FXT1=1
Const GL_COMPRESSED_RGB_FXT1_3DFX=$86B0
Const GL_COMPRESSED_RGBA_FXT1_3DFX=$86B1
Const GL_AMD_blend_minmax_factor=1
Const GL_FACTOR_MIN_AMD=$901C
Const GL_FACTOR_MAX_AMD=$901D
Const GL_AMD_compressed_3DC_texture=1
Const GL_3DC_X_AMD=$87F9
Const GL_3DC_XY_AMD=$87FA
Const GL_AMD_compressed_ATC_texture=1
Const GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD=$87EE
Const GL_ATC_RGB_AMD=$8C92
Const GL_ATC_RGBA_EXPLICIT_ALPHA_AMD=$8C93
Const GL_AMD_conservative_depth=1
Const GL_AMD_debug_output=1
Const GL_MAX_DEBUG_MESSAGE_LENGTH_AMD=$9143
Const GL_MAX_DEBUG_LOGGED_MESSAGES_AMD=$9144
Const GL_DEBUG_LOGGED_MESSAGES_AMD=$9145
Const GL_DEBUG_SEVERITY_HIGH_AMD=$9146
Const GL_DEBUG_SEVERITY_MEDIUM_AMD=$9147
Const GL_DEBUG_SEVERITY_LOW_AMD=$9148
Const GL_DEBUG_CATEGORY_API_ERROR_AMD=$9149
Const GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD=$914A
Const GL_DEBUG_CATEGORY_DEPRECATION_AMD=$914B
Const GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD=$914C
Const GL_DEBUG_CATEGORY_PERFORMANCE_AMD=$914D
Const GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD=$914E
Const GL_DEBUG_CATEGORY_APPLICATION_AMD=$914F
Const GL_DEBUG_CATEGORY_OTHER_AMD=$9150
Global glDebugMessageEnableAMD(category_:Int,severity_:Int,count_:Int,ids_:Int Ptr,enabled_:Byte)="void __glewDebugMessageEnableAMD( GLenum, GLenum, GLsizei,const GLuint*, GLboolean)!"
Global glDebugMessageInsertAMD(category_:Int,severity_:Int,id_:Int,length_:Int,buf_:Byte Ptr)="void __glewDebugMessageInsertAMD( GLenum, GLenum, GLuint, GLsizei,const GLchar*)!"
Global glGetDebugMessageLogAMD:Int(count_:Int,bufsize_:Int,categories_:Int Ptr,severities_:Int Ptr,ids_:Int Ptr,lengths_:Int Ptr,message_:Byte Ptr)="GLuint __glewGetDebugMessageLogAMD( GLuint, GLsizei, GLenum*, GLuint*, GLuint*, GLsizei*, GLchar*)!"
Const GL_AMD_depth_clamp_separate=1
Const GL_DEPTH_CLAMP_NEAR_AMD=$901E
Const GL_DEPTH_CLAMP_FAR_AMD=$901F
Const GL_AMD_draw_buffers_blend=1
Global glBlendEquationIndexedAMD(buf_:Int,mode_:Int)="void __glewBlendEquationIndexedAMD( GLuint, GLenum)!"
Global glBlendEquationSeparateIndexedAMD(buf_:Int,modeRGB_:Int,modeAlpha_:Int)="void __glewBlendEquationSeparateIndexedAMD( GLuint, GLenum, GLenum)!"
Global glBlendFuncIndexedAMD(buf_:Int,src_:Int,dst_:Int)="void __glewBlendFuncIndexedAMD( GLuint, GLenum, GLenum)!"
Global glBlendFuncSeparateIndexedAMD(buf_:Int,srcRGB_:Int,dstRGB_:Int,srcAlpha_:Int,dstAlpha_:Int)="void __glewBlendFuncSeparateIndexedAMD( GLuint, GLenum, GLenum, GLenum, GLenum)!"
Const GL_AMD_framebuffer_sample_positions=1
Const GL_SUBSAMPLE_DISTANCE_AMD=$883F
Const GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD=$91AE
Const GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD=$91AF
Const GL_ALL_PIXELS_AMD=$FFFFFFFF
Global glFramebufferSamplePositionsfvAMD(target_:Int,numsamples_:Int,pixelindex_:Int,values_:Float Ptr)="void __glewFramebufferSamplePositionsfvAMD( GLenum, GLuint, GLuint,const GLfloat*)!"
Global glGetFramebufferParameterfvAMD(target_:Int,pname_:Int,numsamples_:Int,pixelindex_:Int,size_:Int,values_:Float Ptr)="void __glewGetFramebufferParameterfvAMD( GLenum, GLenum, GLuint, GLuint, GLsizei, GLfloat*)!"
Global glGetNamedFramebufferParameterfvAMD(framebuffer_:Int,pname_:Int,numsamples_:Int,pixelindex_:Int,size_:Int,values_:Float Ptr)="void __glewGetNamedFramebufferParameterfvAMD( GLuint, GLenum, GLuint, GLuint, GLsizei, GLfloat*)!"
Global glNamedFramebufferSamplePositionsfvAMD(framebuffer_:Int,numsamples_:Int,pixelindex_:Int,values_:Float Ptr)="void __glewNamedFramebufferSamplePositionsfvAMD( GLuint, GLuint, GLuint,const GLfloat*)!"
Const GL_AMD_gcn_shader=1
Const GL_AMD_gpu_shader_half_float=1
Const GL_FLOAT16_NV=$8FF8
Const GL_FLOAT16_VEC2_NV=$8FF9
Const GL_FLOAT16_VEC3_NV=$8FFA
Const GL_FLOAT16_VEC4_NV=$8FFB
Const GL_FLOAT16_MAT2_AMD=$91C5
Const GL_FLOAT16_MAT3_AMD=$91C6
Const GL_FLOAT16_MAT4_AMD=$91C7
Const GL_FLOAT16_MAT2x3_AMD=$91C8
Const GL_FLOAT16_MAT2x4_AMD=$91C9
Const GL_FLOAT16_MAT3x2_AMD=$91CA
Const GL_FLOAT16_MAT3x4_AMD=$91CB
Const GL_FLOAT16_MAT4x2_AMD=$91CC
Const GL_FLOAT16_MAT4x3_AMD=$91CD
Const GL_AMD_gpu_shader_int16=1
Const GL_AMD_gpu_shader_int64=1
Const GL_AMD_interleaved_elements=1
Const GL_RG8UI=$8238
Const GL_RG16UI=$823A
Const GL_VERTEX_ELEMENT_SWIZZLE_AMD=$91A4
Const GL_VERTEX_ID_SWIZZLE_AMD=$91A5
Global glVertexAttribParameteriAMD(index_:Int,pname_:Int,param_:Int)="void __glewVertexAttribParameteriAMD( GLuint, GLenum, GLint)!"
Const GL_AMD_multi_draw_indirect=1
Global glMultiDrawArraysIndirectAMD(mode_:Int,indirect_:Byte Ptr,primcount_:Int,stride_:Int)="void __glewMultiDrawArraysIndirectAMD( GLenum,const void*, GLsizei, GLsizei)!"
Global glMultiDrawElementsIndirectAMD(mode_:Int,type_:Int,indirect_:Byte Ptr,primcount_:Int,stride_:Int)="void __glewMultiDrawElementsIndirectAMD( GLenum, GLenum,const void*, GLsizei, GLsizei)!"
Const GL_AMD_name_gen_delete=1
Const GL_DATA_BUFFER_AMD=$9151
Const GL_PERFORMANCE_MONITOR_AMD=$9152
Const GL_QUERY_OBJECT_AMD=$9153
Const GL_VERTEX_ARRAY_OBJECT_AMD=$9154
Const GL_SAMPLER_OBJECT_AMD=$9155
Global glDeleteNamesAMD(identifier_:Int,num_:Int,names_:Int Ptr)="void __glewDeleteNamesAMD( GLenum, GLuint,const GLuint*)!"
Global glGenNamesAMD(identifier_:Int,num_:Int,names_:Int Ptr)="void __glewGenNamesAMD( GLenum, GLuint, GLuint*)!"
Global glIsNameAMD:Byte(identifier_:Int,name_:Int)="GLboolean __glewIsNameAMD( GLenum, GLuint)!"
Const GL_AMD_occlusion_query_event=1
Const GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD=$00000001
Const GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD=$00000002
Const GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD=$00000004
Const GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD=$00000008
Const GL_OCCLUSION_QUERY_EVENT_MASK_AMD=$874F
Const GL_QUERY_ALL_EVENT_BITS_AMD=$FFFFFFFF
Global glQueryObjectParameteruiAMD(target_:Int,id_:Int,pname_:Int,param_:Int)="void __glewQueryObjectParameteruiAMD( GLenum, GLuint, GLenum, GLuint)!"
Const GL_AMD_performance_monitor=1
Const GL_COUNTER_TYPE_AMD=$8BC0
Const GL_COUNTER_RANGE_AMD=$8BC1
Const GL_UNSIGNED_INT64_AMD=$8BC2
Const GL_PERCENTAGE_AMD=$8BC3
Const GL_PERFMON_RESULT_AVAILABLE_AMD=$8BC4
Const GL_PERFMON_RESULT_SIZE_AMD=$8BC5
Const GL_PERFMON_RESULT_AMD=$8BC6
Global glBeginPerfMonitorAMD(monitor_:Int)="void __glewBeginPerfMonitorAMD( GLuint)!"
Global glDeletePerfMonitorsAMD(n_:Int,monitors_:Int Ptr)="void __glewDeletePerfMonitorsAMD( GLsizei, GLuint*)!"
Global glEndPerfMonitorAMD(monitor_:Int)="void __glewEndPerfMonitorAMD( GLuint)!"
Global glGenPerfMonitorsAMD(n_:Int,monitors_:Int Ptr)="void __glewGenPerfMonitorsAMD( GLsizei, GLuint*)!"
Global glGetPerfMonitorCounterDataAMD(monitor_:Int,pname_:Int,dataSize_:Int,data_:Int Ptr,bytesWritten_:Int Ptr)="void __glewGetPerfMonitorCounterDataAMD( GLuint, GLenum, GLsizei, GLuint*, GLint*)!"
Global glGetPerfMonitorCounterInfoAMD(group_:Int,counter_:Int,pname_:Int,data_:Byte Ptr)="void __glewGetPerfMonitorCounterInfoAMD( GLuint, GLuint, GLenum, void*)!"
Global glGetPerfMonitorCounterStringAMD(group_:Int,counter_:Int,bufSize_:Int,length_:Int Ptr,counterString_:Byte Ptr)="void __glewGetPerfMonitorCounterStringAMD( GLuint, GLuint, GLsizei, GLsizei*, GLchar*)!"
Global glGetPerfMonitorCountersAMD(group_:Int,numCounters_:Int Ptr,maxActiveCounters_:Int Ptr,countersSize_:Int,counters_:Int Ptr)="void __glewGetPerfMonitorCountersAMD( GLuint, GLint*, GLint*, GLsizei, GLuint*)!"
Global glGetPerfMonitorGroupStringAMD(group_:Int,bufSize_:Int,length_:Int Ptr,groupString_:Byte Ptr)="void __glewGetPerfMonitorGroupStringAMD( GLuint, GLsizei, GLsizei*, GLchar*)!"
Global glGetPerfMonitorGroupsAMD(numGroups_:Int Ptr,groupsSize_:Int,groups_:Int Ptr)="void __glewGetPerfMonitorGroupsAMD( GLint*, GLsizei, GLuint*)!"
Global glSelectPerfMonitorCountersAMD(monitor_:Int,enable_:Byte,group_:Int,numCounters_:Int,counterList_:Int Ptr)="void __glewSelectPerfMonitorCountersAMD( GLuint, GLboolean, GLuint, GLint, GLuint*)!"
Const GL_AMD_pinned_memory=1
Const GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD=$9160
Const GL_AMD_program_binary_Z400=1
Const GL_Z400_BINARY_AMD=$8740
Const GL_AMD_query_buffer_object=1
Const GL_QUERY_BUFFER_AMD=$9192
Const GL_QUERY_BUFFER_BINDING_AMD=$9193
Const GL_QUERY_RESULT_NO_WAIT_AMD=$9194
Const GL_AMD_sample_positions=1
Global glSetMultisamplefvAMD(pname_:Int,index_:Int,val_:Float Ptr)="void __glewSetMultisamplefvAMD( GLenum, GLuint,const GLfloat*)!"
Const GL_AMD_seamless_cubemap_per_texture=1
Const GL_TEXTURE_CUBE_MAP_SEAMLESS=$884F
Const GL_AMD_shader_atomic_counter_ops=1
Const GL_AMD_shader_ballot=1
Const GL_AMD_shader_explicit_vertex_parameter=1
Const GL_AMD_shader_stencil_export=1
Const GL_AMD_shader_stencil_value_export=1
Const GL_AMD_shader_trinary_minmax=1
Const GL_AMD_sparse_texture=1
Const GL_TEXTURE_STORAGE_SPARSE_BIT_AMD=$00000001
Const GL_VIRTUAL_PAGE_SIZE_X_AMD=$9195
Const GL_VIRTUAL_PAGE_SIZE_Y_AMD=$9196
Const GL_VIRTUAL_PAGE_SIZE_Z_AMD=$9197
Const GL_MAX_SPARSE_TEXTURE_SIZE_AMD=$9198
Const GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD=$9199
Const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS=$919A
Const GL_MIN_SPARSE_LEVEL_AMD=$919B
Const GL_MIN_LOD_WARNING_AMD=$919C
Global glTexStorageSparseAMD(target_:Int,internalFormat_:Int,width_:Int,height_:Int,depth_:Int,layers_:Int,flags_:Int)="void __glewTexStorageSparseAMD( GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield)!"
Global glTextureStorageSparseAMD(texture_:Int,target_:Int,internalFormat_:Int,width_:Int,height_:Int,depth_:Int,layers_:Int,flags_:Int)="void __glewTextureStorageSparseAMD( GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield)!"
Const GL_AMD_stencil_operation_extended=1
Const GL_SET_AMD=$874A
Const GL_REPLACE_VALUE_AMD=$874B

End Extern
